/// es6.grammar:
SyntaxKind[AtToken](1,1): @
SyntaxKind[DefineKeyword](1,2): define
SyntaxKind[Identifier](1,9): noStrictParametricProductions
SyntaxKind[TrueKeyword](1,39): true
SyntaxKind[LineTerminatorToken](2,1): «line terminator»
SyntaxKind[LineTerminatorToken](3,1): «line terminator»
SyntaxKind[LineTerminatorToken](4,1): «line terminator»
SyntaxKind[LineTerminatorToken](5,1): «line terminator»
SyntaxKind[Identifier](5,1): SourceCharacter
SyntaxKind[ColonColonToken](5,17): ::
SyntaxKind[LineTerminatorToken](6,1): «line terminator»
SyntaxKind[IndentToken](6,1): «indent»
SyntaxKind[GreaterThanToken](6,2): >
SyntaxKind[ProseFull](6,4): any Unicode code point
SyntaxKind[LineTerminatorToken](7,1): «line terminator»
SyntaxKind[DedentToken](7,1): «dedent»
SyntaxKind[LineTerminatorToken](8,1): «line terminator»
SyntaxKind[Identifier](8,1): InputElementDiv
SyntaxKind[ColonColonToken](8,17): ::
SyntaxKind[LineTerminatorToken](9,1): «line terminator»
SyntaxKind[IndentToken](9,1): «indent»
SyntaxKind[Identifier](9,2): WhiteSpace
SyntaxKind[LineTerminatorToken](10,1): «line terminator»
SyntaxKind[Identifier](10,2): LineTerminator
SyntaxKind[LineTerminatorToken](11,1): «line terminator»
SyntaxKind[Identifier](11,2): Comment
SyntaxKind[LineTerminatorToken](12,1): «line terminator»
SyntaxKind[Identifier](12,2): CommonToken
SyntaxKind[LineTerminatorToken](13,1): «line terminator»
SyntaxKind[Identifier](13,2): DivPunctuator
SyntaxKind[LineTerminatorToken](14,1): «line terminator»
SyntaxKind[Identifier](14,2): RightBracePunctuator
SyntaxKind[LineTerminatorToken](15,1): «line terminator»
SyntaxKind[DedentToken](15,1): «dedent»
SyntaxKind[LineTerminatorToken](16,1): «line terminator»
SyntaxKind[Identifier](16,1): InputElementRegExp
SyntaxKind[ColonColonToken](16,20): ::
SyntaxKind[LineTerminatorToken](17,1): «line terminator»
SyntaxKind[IndentToken](17,1): «indent»
SyntaxKind[Identifier](17,2): WhiteSpace
SyntaxKind[LineTerminatorToken](18,1): «line terminator»
SyntaxKind[Identifier](18,2): LineTerminator
SyntaxKind[LineTerminatorToken](19,1): «line terminator»
SyntaxKind[Identifier](19,2): Comment
SyntaxKind[LineTerminatorToken](20,1): «line terminator»
SyntaxKind[Identifier](20,2): CommonToken
SyntaxKind[LineTerminatorToken](21,1): «line terminator»
SyntaxKind[Identifier](21,2): RightBracePunctuator
SyntaxKind[LineTerminatorToken](22,1): «line terminator»
SyntaxKind[Identifier](22,2): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](23,1): «line terminator»
SyntaxKind[DedentToken](23,1): «dedent»
SyntaxKind[LineTerminatorToken](24,1): «line terminator»
SyntaxKind[Identifier](24,1): InputElementRegExpOrTemplateTail
SyntaxKind[ColonColonToken](24,34): ::
SyntaxKind[LineTerminatorToken](25,1): «line terminator»
SyntaxKind[IndentToken](25,1): «indent»
SyntaxKind[Identifier](25,2): WhiteSpace
SyntaxKind[LineTerminatorToken](26,1): «line terminator»
SyntaxKind[Identifier](26,2): LineTerminator
SyntaxKind[LineTerminatorToken](27,1): «line terminator»
SyntaxKind[Identifier](27,2): Comment
SyntaxKind[LineTerminatorToken](28,1): «line terminator»
SyntaxKind[Identifier](28,2): CommonToken
SyntaxKind[LineTerminatorToken](29,1): «line terminator»
SyntaxKind[Identifier](29,2): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](30,1): «line terminator»
SyntaxKind[Identifier](30,2): TemplateSubstitutionTail
SyntaxKind[LineTerminatorToken](31,1): «line terminator»
SyntaxKind[DedentToken](31,1): «dedent»
SyntaxKind[LineTerminatorToken](32,1): «line terminator»
SyntaxKind[Identifier](32,1): InputElementTemplateTail
SyntaxKind[ColonColonToken](32,26): ::
SyntaxKind[LineTerminatorToken](33,1): «line terminator»
SyntaxKind[IndentToken](33,1): «indent»
SyntaxKind[Identifier](33,2): WhiteSpace
SyntaxKind[LineTerminatorToken](34,1): «line terminator»
SyntaxKind[Identifier](34,2): LineTerminator
SyntaxKind[LineTerminatorToken](35,1): «line terminator»
SyntaxKind[Identifier](35,2): Comment
SyntaxKind[LineTerminatorToken](36,1): «line terminator»
SyntaxKind[Identifier](36,2): CommonToken
SyntaxKind[LineTerminatorToken](37,1): «line terminator»
SyntaxKind[Identifier](37,2): DivPunctuator
SyntaxKind[LineTerminatorToken](38,1): «line terminator»
SyntaxKind[Identifier](38,2): TemplateSubstitutionTail
SyntaxKind[LineTerminatorToken](39,1): «line terminator»
SyntaxKind[DedentToken](39,1): «dedent»
SyntaxKind[LineTerminatorToken](40,1): «line terminator»
SyntaxKind[Identifier](40,1): WhiteSpace
SyntaxKind[ColonColonToken](40,12): ::
SyntaxKind[LineTerminatorToken](41,1): «line terminator»
SyntaxKind[IndentToken](41,1): «indent»
SyntaxKind[UnicodeCharacterLiteral](41,2): <TAB>
SyntaxKind[LineTerminatorToken](42,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](42,2): <VT>
SyntaxKind[LineTerminatorToken](43,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](43,2): <FF>
SyntaxKind[LineTerminatorToken](44,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](44,2): <SP>
SyntaxKind[LineTerminatorToken](45,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](45,2): <NBSP>
SyntaxKind[LineTerminatorToken](46,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](46,2): <ZWNBSP>
SyntaxKind[LineTerminatorToken](47,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](47,2): <USP>
SyntaxKind[LineTerminatorToken](48,1): «line terminator»
SyntaxKind[DedentToken](48,1): «dedent»
SyntaxKind[LineTerminatorToken](49,1): «line terminator»
SyntaxKind[Identifier](49,1): LineTerminator
SyntaxKind[ColonColonToken](49,16): ::
SyntaxKind[LineTerminatorToken](50,1): «line terminator»
SyntaxKind[IndentToken](50,1): «indent»
SyntaxKind[UnicodeCharacterLiteral](50,2): <LF>
SyntaxKind[LineTerminatorToken](51,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](51,2): <CR>
SyntaxKind[LineTerminatorToken](52,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](52,2): <LS>
SyntaxKind[LineTerminatorToken](53,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](53,2): <PS>
SyntaxKind[LineTerminatorToken](54,1): «line terminator»
SyntaxKind[DedentToken](54,1): «dedent»
SyntaxKind[LineTerminatorToken](55,1): «line terminator»
SyntaxKind[Identifier](55,1): LineTerminatorSequence
SyntaxKind[ColonColonToken](55,24): ::
SyntaxKind[LineTerminatorToken](56,1): «line terminator»
SyntaxKind[IndentToken](56,1): «indent»
SyntaxKind[UnicodeCharacterLiteral](56,2): <LF>
SyntaxKind[LineTerminatorToken](57,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](57,2): <CR>
SyntaxKind[OpenBracketToken](57,7): [
SyntaxKind[LookaheadKeyword](57,8): lookahead
SyntaxKind[ExclamationEqualsToken](57,18): !=
SyntaxKind[UnicodeCharacterLiteral](57,21): <LF>
SyntaxKind[CloseBracketToken](57,25): ]
SyntaxKind[LineTerminatorToken](58,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](58,2): <LS>
SyntaxKind[LineTerminatorToken](59,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](59,2): <PS>
SyntaxKind[LineTerminatorToken](60,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](60,2): <CR>
SyntaxKind[UnicodeCharacterLiteral](60,7): <LF>
SyntaxKind[LineTerminatorToken](61,1): «line terminator»
SyntaxKind[DedentToken](61,1): «dedent»
SyntaxKind[LineTerminatorToken](62,1): «line terminator»
SyntaxKind[Identifier](62,1): Comment
SyntaxKind[ColonColonToken](62,9): ::
SyntaxKind[LineTerminatorToken](63,1): «line terminator»
SyntaxKind[IndentToken](63,1): «indent»
SyntaxKind[Identifier](63,2): MultiLineComment
SyntaxKind[LineTerminatorToken](64,1): «line terminator»
SyntaxKind[Identifier](64,2): SingleLineComment
SyntaxKind[LineTerminatorToken](65,1): «line terminator»
SyntaxKind[DedentToken](65,1): «dedent»
SyntaxKind[LineTerminatorToken](66,1): «line terminator»
SyntaxKind[Identifier](66,1): MultiLineComment
SyntaxKind[ColonColonToken](66,18): ::
SyntaxKind[LineTerminatorToken](67,1): «line terminator»
SyntaxKind[IndentToken](67,1): «indent»
SyntaxKind[Terminal](67,2): `/*`
SyntaxKind[Identifier](67,7): MultiLineCommentChars
SyntaxKind[QuestionToken](67,28): ?
SyntaxKind[Terminal](67,30): `*/`
SyntaxKind[LineTerminatorToken](68,1): «line terminator»
SyntaxKind[DedentToken](68,1): «dedent»
SyntaxKind[LineTerminatorToken](69,1): «line terminator»
SyntaxKind[Identifier](69,1): MultiLineCommentChars
SyntaxKind[ColonColonToken](69,23): ::
SyntaxKind[LineTerminatorToken](70,1): «line terminator»
SyntaxKind[IndentToken](70,1): «indent»
SyntaxKind[Identifier](70,2): MultiLineNotAsteriskChar
SyntaxKind[Identifier](70,27): MultiLineCommentChars
SyntaxKind[QuestionToken](70,48): ?
SyntaxKind[LineTerminatorToken](71,1): «line terminator»
SyntaxKind[Terminal](71,2): `*`
SyntaxKind[Identifier](71,6): PostAsteriskCommentChars
SyntaxKind[QuestionToken](71,30): ?
SyntaxKind[LineTerminatorToken](72,1): «line terminator»
SyntaxKind[DedentToken](72,1): «dedent»
SyntaxKind[LineTerminatorToken](73,1): «line terminator»
SyntaxKind[Identifier](73,1): PostAsteriskCommentChars
SyntaxKind[ColonColonToken](73,26): ::
SyntaxKind[LineTerminatorToken](74,1): «line terminator»
SyntaxKind[IndentToken](74,1): «indent»
SyntaxKind[Identifier](74,2): MultiLineNotForwardSlashOrAsteriskChar
SyntaxKind[Identifier](74,41): MultiLineCommentChars
SyntaxKind[QuestionToken](74,62): ?
SyntaxKind[LineTerminatorToken](75,1): «line terminator»
SyntaxKind[Terminal](75,2): `*`
SyntaxKind[Identifier](75,6): PostAsteriskCommentChars
SyntaxKind[QuestionToken](75,30): ?
SyntaxKind[LineTerminatorToken](76,1): «line terminator»
SyntaxKind[DedentToken](76,1): «dedent»
SyntaxKind[LineTerminatorToken](77,1): «line terminator»
SyntaxKind[Identifier](77,1): MultiLineNotAsteriskChar
SyntaxKind[ColonColonToken](77,26): ::
SyntaxKind[LineTerminatorToken](78,1): «line terminator»
SyntaxKind[IndentToken](78,1): «indent»
SyntaxKind[Identifier](78,2): SourceCharacter
SyntaxKind[ButKeyword](78,18): but
SyntaxKind[NotKeyword](78,22): not
SyntaxKind[Terminal](78,26): `*`
SyntaxKind[LineTerminatorToken](79,1): «line terminator»
SyntaxKind[DedentToken](79,1): «dedent»
SyntaxKind[LineTerminatorToken](80,1): «line terminator»
SyntaxKind[Identifier](80,1): MultiLineNotForwardSlashOrAsteriskChar
SyntaxKind[ColonColonToken](80,40): ::
SyntaxKind[LineTerminatorToken](81,1): «line terminator»
SyntaxKind[IndentToken](81,1): «indent»
SyntaxKind[Identifier](81,2): SourceCharacter
SyntaxKind[ButKeyword](81,18): but
SyntaxKind[NotKeyword](81,22): not
SyntaxKind[OneKeyword](81,26): one
SyntaxKind[OfKeyword](81,30): of
SyntaxKind[Terminal](81,33): `/`
SyntaxKind[OrKeyword](81,37): or
SyntaxKind[Terminal](81,40): `*`
SyntaxKind[LineTerminatorToken](82,1): «line terminator»
SyntaxKind[DedentToken](82,1): «dedent»
SyntaxKind[LineTerminatorToken](83,1): «line terminator»
SyntaxKind[Identifier](83,1): SingleLineComment
SyntaxKind[ColonColonToken](83,19): ::
SyntaxKind[LineTerminatorToken](84,1): «line terminator»
SyntaxKind[IndentToken](84,1): «indent»
SyntaxKind[Terminal](84,2): `//`
SyntaxKind[Identifier](84,7): SingleLineCommentChars
SyntaxKind[QuestionToken](84,29): ?
SyntaxKind[LineTerminatorToken](85,1): «line terminator»
SyntaxKind[DedentToken](85,1): «dedent»
SyntaxKind[LineTerminatorToken](86,1): «line terminator»
SyntaxKind[Identifier](86,1): SingleLineCommentChars
SyntaxKind[ColonColonToken](86,24): ::
SyntaxKind[LineTerminatorToken](87,1): «line terminator»
SyntaxKind[IndentToken](87,1): «indent»
SyntaxKind[Identifier](87,2): SingleLineCommentChar
SyntaxKind[Identifier](87,24): SingleLineCommentChars
SyntaxKind[QuestionToken](87,46): ?
SyntaxKind[LineTerminatorToken](88,1): «line terminator»
SyntaxKind[DedentToken](88,1): «dedent»
SyntaxKind[LineTerminatorToken](89,1): «line terminator»
SyntaxKind[Identifier](89,1): SingleLineCommentChar
SyntaxKind[ColonColonToken](89,23): ::
SyntaxKind[LineTerminatorToken](90,1): «line terminator»
SyntaxKind[IndentToken](90,1): «indent»
SyntaxKind[Identifier](90,2): SourceCharacter
SyntaxKind[ButKeyword](90,18): but
SyntaxKind[NotKeyword](90,22): not
SyntaxKind[Identifier](90,26): LineTerminator
SyntaxKind[LineTerminatorToken](91,1): «line terminator»
SyntaxKind[DedentToken](91,1): «dedent»
SyntaxKind[LineTerminatorToken](92,1): «line terminator»
SyntaxKind[Identifier](92,1): CommonToken
SyntaxKind[ColonColonToken](92,13): ::
SyntaxKind[LineTerminatorToken](93,1): «line terminator»
SyntaxKind[IndentToken](93,1): «indent»
SyntaxKind[Identifier](93,2): IdentifierName
SyntaxKind[LineTerminatorToken](94,1): «line terminator»
SyntaxKind[Identifier](94,2): Punctuator
SyntaxKind[LineTerminatorToken](95,1): «line terminator»
SyntaxKind[Identifier](95,2): NumericLiteral
SyntaxKind[LineTerminatorToken](96,1): «line terminator»
SyntaxKind[Identifier](96,2): StringLiteral
SyntaxKind[LineTerminatorToken](97,1): «line terminator»
SyntaxKind[Identifier](97,2): Template
SyntaxKind[LineTerminatorToken](98,1): «line terminator»
SyntaxKind[DedentToken](98,1): «dedent»
SyntaxKind[LineTerminatorToken](99,1): «line terminator»
SyntaxKind[Identifier](99,1): IdentifierName
SyntaxKind[ColonColonToken](99,16): ::
SyntaxKind[LineTerminatorToken](100,1): «line terminator»
SyntaxKind[IndentToken](100,1): «indent»
SyntaxKind[Identifier](100,2): IdentifierStart
SyntaxKind[LineTerminatorToken](101,1): «line terminator»
SyntaxKind[Identifier](101,2): IdentifierName
SyntaxKind[Identifier](101,17): IdentifierPart
SyntaxKind[LineTerminatorToken](102,1): «line terminator»
SyntaxKind[DedentToken](102,1): «dedent»
SyntaxKind[LineTerminatorToken](103,1): «line terminator»
SyntaxKind[Identifier](103,1): IdentifierStart
SyntaxKind[ColonColonToken](103,17): ::
SyntaxKind[LineTerminatorToken](104,1): «line terminator»
SyntaxKind[IndentToken](104,1): «indent»
SyntaxKind[Identifier](104,2): UnicodeIDStart
SyntaxKind[LineTerminatorToken](105,1): «line terminator»
SyntaxKind[Terminal](105,2): `$`
SyntaxKind[LineTerminatorToken](106,1): «line terminator»
SyntaxKind[Terminal](106,2): `_`
SyntaxKind[LineTerminatorToken](107,1): «line terminator»
SyntaxKind[Terminal](107,2): `\`
SyntaxKind[Identifier](107,6): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](108,1): «line terminator»
SyntaxKind[DedentToken](108,1): «dedent»
SyntaxKind[LineTerminatorToken](109,1): «line terminator»
SyntaxKind[Identifier](109,1): IdentifierPart
SyntaxKind[ColonColonToken](109,16): ::
SyntaxKind[LineTerminatorToken](110,1): «line terminator»
SyntaxKind[IndentToken](110,1): «indent»
SyntaxKind[Identifier](110,2): UnicodeIDContinue
SyntaxKind[LineTerminatorToken](111,1): «line terminator»
SyntaxKind[Terminal](111,2): `$`
SyntaxKind[LineTerminatorToken](112,1): «line terminator»
SyntaxKind[Terminal](112,2): `_`
SyntaxKind[LineTerminatorToken](113,1): «line terminator»
SyntaxKind[Terminal](113,2): `\`
SyntaxKind[Identifier](113,6): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](114,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](114,2): <ZWNJ>
SyntaxKind[LineTerminatorToken](115,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](115,2): <ZWJ>
SyntaxKind[LineTerminatorToken](116,1): «line terminator»
SyntaxKind[DedentToken](116,1): «dedent»
SyntaxKind[LineTerminatorToken](117,1): «line terminator»
SyntaxKind[Identifier](117,1): UnicodeIDStart
SyntaxKind[ColonColonToken](117,16): ::
SyntaxKind[LineTerminatorToken](118,1): «line terminator»
SyntaxKind[IndentToken](118,1): «indent»
SyntaxKind[GreaterThanToken](118,2): >
SyntaxKind[ProseFull](118,4): any Unicode code point with the Unicode property "ID_Start" or "Other_ID_Start"
SyntaxKind[LineTerminatorToken](119,1): «line terminator»
SyntaxKind[DedentToken](119,1): «dedent»
SyntaxKind[LineTerminatorToken](120,1): «line terminator»
SyntaxKind[Identifier](120,1): UnicodeIDContinue
SyntaxKind[ColonColonToken](120,19): ::
SyntaxKind[LineTerminatorToken](121,1): «line terminator»
SyntaxKind[IndentToken](121,1): «indent»
SyntaxKind[GreaterThanToken](121,2): >
SyntaxKind[ProseFull](121,4): any Unicode code point with the Unicode property "ID_Continue" or "Other_ID_Continue", or "Other_ID_Start"
SyntaxKind[LineTerminatorToken](122,1): «line terminator»
SyntaxKind[DedentToken](122,1): «dedent»
SyntaxKind[LineTerminatorToken](123,1): «line terminator»
SyntaxKind[Identifier](123,1): ReservedWord
SyntaxKind[ColonColonToken](123,14): ::
SyntaxKind[LineTerminatorToken](124,1): «line terminator»
SyntaxKind[IndentToken](124,1): «indent»
SyntaxKind[Identifier](124,2): Keyword
SyntaxKind[LineTerminatorToken](125,1): «line terminator»
SyntaxKind[Identifier](125,2): FutureReservedWord
SyntaxKind[LineTerminatorToken](126,1): «line terminator»
SyntaxKind[Identifier](126,2): NullLiteral
SyntaxKind[LineTerminatorToken](127,1): «line terminator»
SyntaxKind[Identifier](127,2): BooleanLiteral
SyntaxKind[LineTerminatorToken](128,1): «line terminator»
SyntaxKind[DedentToken](128,1): «dedent»
SyntaxKind[LineTerminatorToken](129,1): «line terminator»
SyntaxKind[Identifier](129,1): Keyword
SyntaxKind[ColonColonToken](129,9): ::
SyntaxKind[OneKeyword](129,12): one
SyntaxKind[OfKeyword](129,16): of
SyntaxKind[LineTerminatorToken](130,1): «line terminator»
SyntaxKind[IndentToken](130,1): «indent»
SyntaxKind[Terminal](130,2): `break`
SyntaxKind[Terminal](130,11): `do`
SyntaxKind[Terminal](130,17): `in`
SyntaxKind[Terminal](130,24): `typeof`
SyntaxKind[LineTerminatorToken](131,1): «line terminator»
SyntaxKind[Terminal](131,2): `case`
SyntaxKind[Terminal](131,10): `else`
SyntaxKind[Terminal](131,18): `instanceof`
SyntaxKind[Terminal](131,31): `var`
SyntaxKind[LineTerminatorToken](132,1): «line terminator»
SyntaxKind[Terminal](132,2): `catch`
SyntaxKind[Terminal](132,11): `export`
SyntaxKind[Terminal](132,20): `new`
SyntaxKind[Terminal](132,28): `void`
SyntaxKind[LineTerminatorToken](133,1): «line terminator»
SyntaxKind[Terminal](133,2): `class`
SyntaxKind[Terminal](133,11): `extends`
SyntaxKind[Terminal](133,21): `return`
SyntaxKind[Terminal](133,31): `while`
SyntaxKind[LineTerminatorToken](134,1): «line terminator»
SyntaxKind[Terminal](134,2): `const`
SyntaxKind[Terminal](134,11): `finally`
SyntaxKind[Terminal](134,21): `super`
SyntaxKind[Terminal](134,31): `with`
SyntaxKind[LineTerminatorToken](135,1): «line terminator»
SyntaxKind[Terminal](135,2): `continue`
SyntaxKind[Terminal](135,13): `for`
SyntaxKind[Terminal](135,20): `switch`
SyntaxKind[Terminal](135,30): `yield`
SyntaxKind[LineTerminatorToken](136,1): «line terminator»
SyntaxKind[Terminal](136,2): `debugger`
SyntaxKind[Terminal](136,13): `function`
SyntaxKind[Terminal](136,24): `this`
SyntaxKind[LineTerminatorToken](137,1): «line terminator»
SyntaxKind[Terminal](137,2): `default`
SyntaxKind[Terminal](137,12): `if`
SyntaxKind[Terminal](137,18): `throw`
SyntaxKind[LineTerminatorToken](138,1): «line terminator»
SyntaxKind[Terminal](138,2): `delete`
SyntaxKind[Terminal](138,11): `import`
SyntaxKind[Terminal](138,20): `try`
SyntaxKind[LineTerminatorToken](139,1): «line terminator»
SyntaxKind[DedentToken](139,1): «dedent»
SyntaxKind[LineTerminatorToken](140,1): «line terminator»
SyntaxKind[Identifier](140,1): FutureReservedWord
SyntaxKind[ColonColonToken](140,20): ::
SyntaxKind[OneKeyword](140,23): one
SyntaxKind[OfKeyword](140,27): of
SyntaxKind[LineTerminatorToken](141,1): «line terminator»
SyntaxKind[IndentToken](141,1): «indent»
SyntaxKind[Terminal](141,2): `enum`
SyntaxKind[LineTerminatorToken](142,1): «line terminator»
SyntaxKind[LineTerminatorToken](143,1): «line terminator»
SyntaxKind[Terminal](143,2): `await`
SyntaxKind[LineTerminatorToken](144,1): «line terminator»
SyntaxKind[LineTerminatorToken](145,1): «line terminator»
SyntaxKind[Terminal](145,2): `implements`
SyntaxKind[Terminal](145,15): `package`
SyntaxKind[Terminal](145,25): `protected`
SyntaxKind[LineTerminatorToken](146,1): «line terminator»
SyntaxKind[Terminal](146,2): `interface`
SyntaxKind[Terminal](146,15): `private`
SyntaxKind[Terminal](146,25): `public`
SyntaxKind[LineTerminatorToken](147,1): «line terminator»
SyntaxKind[DedentToken](147,1): «dedent»
SyntaxKind[LineTerminatorToken](148,1): «line terminator»
SyntaxKind[Identifier](148,1): Punctuator
SyntaxKind[ColonColonToken](148,12): ::
SyntaxKind[OneKeyword](148,15): one
SyntaxKind[OfKeyword](148,19): of
SyntaxKind[LineTerminatorToken](149,1): «line terminator»
SyntaxKind[IndentToken](149,1): «indent»
SyntaxKind[Terminal](149,2): `{`
SyntaxKind[Terminal](149,7): `}`
SyntaxKind[Terminal](149,12): `(`
SyntaxKind[Terminal](149,17): `)`
SyntaxKind[Terminal](149,22): `[`
SyntaxKind[Terminal](149,27): `]`
SyntaxKind[LineTerminatorToken](150,1): «line terminator»
SyntaxKind[Terminal](150,2): `.`
SyntaxKind[Terminal](150,7): `;`
SyntaxKind[Terminal](150,12): `,`
SyntaxKind[Terminal](150,17): `<`
SyntaxKind[Terminal](150,22): `>`
SyntaxKind[Terminal](150,27): `<=`
SyntaxKind[LineTerminatorToken](151,1): «line terminator»
SyntaxKind[Terminal](151,2): `>=`
SyntaxKind[Terminal](151,7): `==`
SyntaxKind[Terminal](151,12): `!=`
SyntaxKind[Terminal](151,17): `===`
SyntaxKind[Terminal](151,23): `!==`
SyntaxKind[LineTerminatorToken](152,1): «line terminator»
SyntaxKind[Terminal](152,2): `+`
SyntaxKind[Terminal](152,7): `-`
SyntaxKind[Terminal](152,12): `*`
SyntaxKind[Terminal](152,17): `%`
SyntaxKind[Terminal](152,22): `++`
SyntaxKind[Terminal](152,27): `--`
SyntaxKind[LineTerminatorToken](153,1): «line terminator»
SyntaxKind[Terminal](153,2): `<<`
SyntaxKind[Terminal](153,7): `>>`
SyntaxKind[Terminal](153,12): `>>>`
SyntaxKind[Terminal](153,18): `&`
SyntaxKind[Terminal](153,23): `|`
SyntaxKind[Terminal](153,28): `^`
SyntaxKind[LineTerminatorToken](154,1): «line terminator»
SyntaxKind[Terminal](154,2): `!`
SyntaxKind[Terminal](154,7): `~`
SyntaxKind[Terminal](154,12): `&&`
SyntaxKind[Terminal](154,17): `||`
SyntaxKind[Terminal](154,22): `?`
SyntaxKind[Terminal](154,27): ` ::`
SyntaxKind[LineTerminatorToken](155,1): «line terminator»
SyntaxKind[Terminal](155,2): `=`
SyntaxKind[Terminal](155,7): `+=`
SyntaxKind[Terminal](155,12): `-=`
SyntaxKind[Terminal](155,17): `*=`
SyntaxKind[Terminal](155,22): `%=`
SyntaxKind[Terminal](155,27): `<<=`
SyntaxKind[LineTerminatorToken](156,1): «line terminator»
SyntaxKind[Terminal](156,2): `>>=`
SyntaxKind[Terminal](156,8): `>>>=`
SyntaxKind[Terminal](156,15): `&=`
SyntaxKind[Terminal](156,20): `|=`
SyntaxKind[Terminal](156,25): `^=`
SyntaxKind[Terminal](156,30): `=>`
SyntaxKind[LineTerminatorToken](157,1): «line terminator»
SyntaxKind[DedentToken](157,1): «dedent»
SyntaxKind[LineTerminatorToken](158,1): «line terminator»
SyntaxKind[Identifier](158,1): DivPunctuator
SyntaxKind[ColonColonToken](158,15): ::
SyntaxKind[OneKeyword](158,18): one
SyntaxKind[OfKeyword](158,22): of
SyntaxKind[LineTerminatorToken](159,1): «line terminator»
SyntaxKind[IndentToken](159,1): «indent»
SyntaxKind[Terminal](159,2): `/`
SyntaxKind[Terminal](159,7): `/=`
SyntaxKind[LineTerminatorToken](160,1): «line terminator»
SyntaxKind[DedentToken](160,1): «dedent»
SyntaxKind[LineTerminatorToken](161,1): «line terminator»
SyntaxKind[Identifier](161,1): RightBracePunctuator
SyntaxKind[ColonColonToken](161,22): ::
SyntaxKind[OneKeyword](161,25): one
SyntaxKind[OfKeyword](161,29): of
SyntaxKind[LineTerminatorToken](162,1): «line terminator»
SyntaxKind[IndentToken](162,1): «indent»
SyntaxKind[Terminal](162,2): `)`
SyntaxKind[LineTerminatorToken](163,1): «line terminator»
SyntaxKind[DedentToken](163,1): «dedent»
SyntaxKind[LineTerminatorToken](164,1): «line terminator»
SyntaxKind[Identifier](164,1): NullLiteral
SyntaxKind[ColonColonToken](164,13): ::
SyntaxKind[LineTerminatorToken](165,1): «line terminator»
SyntaxKind[IndentToken](165,1): «indent»
SyntaxKind[Terminal](165,2): `null`
SyntaxKind[LineTerminatorToken](166,1): «line terminator»
SyntaxKind[DedentToken](166,1): «dedent»
SyntaxKind[LineTerminatorToken](167,1): «line terminator»
SyntaxKind[Identifier](167,1): BooleanLiteral
SyntaxKind[ColonColonToken](167,16): ::
SyntaxKind[LineTerminatorToken](168,1): «line terminator»
SyntaxKind[IndentToken](168,1): «indent»
SyntaxKind[Terminal](168,2): `true`
SyntaxKind[LineTerminatorToken](169,1): «line terminator»
SyntaxKind[Terminal](169,2): `false`
SyntaxKind[LineTerminatorToken](170,1): «line terminator»
SyntaxKind[DedentToken](170,1): «dedent»
SyntaxKind[LineTerminatorToken](171,1): «line terminator»
SyntaxKind[Identifier](171,1): NumericLiteral
SyntaxKind[ColonColonToken](171,16): ::
SyntaxKind[LineTerminatorToken](172,1): «line terminator»
SyntaxKind[IndentToken](172,1): «indent»
SyntaxKind[Identifier](172,2): DecimalLiteral
SyntaxKind[LineTerminatorToken](173,1): «line terminator»
SyntaxKind[Identifier](173,2): BinaryIntegerLiteral
SyntaxKind[LineTerminatorToken](174,1): «line terminator»
SyntaxKind[Identifier](174,2): OctalIntegerLiteral
SyntaxKind[LineTerminatorToken](175,1): «line terminator»
SyntaxKind[Identifier](175,2): HexIntegerLiteral
SyntaxKind[LineTerminatorToken](176,1): «line terminator»
SyntaxKind[DedentToken](176,1): «dedent»
SyntaxKind[LineTerminatorToken](177,1): «line terminator»
SyntaxKind[Identifier](177,1): DecimalLiteral
SyntaxKind[ColonColonToken](177,16): ::
SyntaxKind[LineTerminatorToken](178,1): «line terminator»
SyntaxKind[IndentToken](178,1): «indent»
SyntaxKind[Identifier](178,2): DecimalIntegerLiteral
SyntaxKind[Terminal](178,24): `.`
SyntaxKind[Identifier](178,28): DecimalDigits
SyntaxKind[QuestionToken](178,41): ?
SyntaxKind[Identifier](178,43): ExponentPart
SyntaxKind[QuestionToken](178,55): ?
SyntaxKind[LineTerminatorToken](179,1): «line terminator»
SyntaxKind[Terminal](179,2): `.`
SyntaxKind[Identifier](179,6): DecimalDigits
SyntaxKind[Identifier](179,20): ExponentPart
SyntaxKind[QuestionToken](179,32): ?
SyntaxKind[LineTerminatorToken](180,1): «line terminator»
SyntaxKind[Identifier](180,2): DecimalIntegerLiteral
SyntaxKind[Identifier](180,24): ExponentPart
SyntaxKind[QuestionToken](180,36): ?
SyntaxKind[LineTerminatorToken](181,1): «line terminator»
SyntaxKind[DedentToken](181,1): «dedent»
SyntaxKind[LineTerminatorToken](182,1): «line terminator»
SyntaxKind[Identifier](182,1): DecimalIntegerLiteral
SyntaxKind[ColonColonToken](182,23): ::
SyntaxKind[LineTerminatorToken](183,1): «line terminator»
SyntaxKind[IndentToken](183,1): «indent»
SyntaxKind[Terminal](183,2): `0`
SyntaxKind[LineTerminatorToken](184,1): «line terminator»
SyntaxKind[Identifier](184,2): NonZeroDigit
SyntaxKind[Identifier](184,15): DecimalDigits
SyntaxKind[QuestionToken](184,28): ?
SyntaxKind[LineTerminatorToken](185,1): «line terminator»
SyntaxKind[DedentToken](185,1): «dedent»
SyntaxKind[LineTerminatorToken](186,1): «line terminator»
SyntaxKind[Identifier](186,1): DecimalDigits
SyntaxKind[ColonColonToken](186,15): ::
SyntaxKind[LineTerminatorToken](187,1): «line terminator»
SyntaxKind[IndentToken](187,1): «indent»
SyntaxKind[Identifier](187,2): DecimalDigit
SyntaxKind[LineTerminatorToken](188,1): «line terminator»
SyntaxKind[Identifier](188,2): DecimalDigits
SyntaxKind[Identifier](188,16): DecimalDigit
SyntaxKind[LineTerminatorToken](189,1): «line terminator»
SyntaxKind[DedentToken](189,1): «dedent»
SyntaxKind[LineTerminatorToken](190,1): «line terminator»
SyntaxKind[Identifier](190,1): DecimalDigit
SyntaxKind[ColonColonToken](190,14): ::
SyntaxKind[OneKeyword](190,17): one
SyntaxKind[OfKeyword](190,21): of
SyntaxKind[LineTerminatorToken](191,1): «line terminator»
SyntaxKind[IndentToken](191,1): «indent»
SyntaxKind[Terminal](191,2): `0`
SyntaxKind[Terminal](191,6): `1`
SyntaxKind[Terminal](191,10): `2`
SyntaxKind[Terminal](191,14): `3`
SyntaxKind[Terminal](191,18): `4`
SyntaxKind[Terminal](191,22): `5`
SyntaxKind[Terminal](191,26): `6`
SyntaxKind[Terminal](191,30): `7`
SyntaxKind[Terminal](191,34): `8`
SyntaxKind[Terminal](191,38): `9`
SyntaxKind[LineTerminatorToken](192,1): «line terminator»
SyntaxKind[DedentToken](192,1): «dedent»
SyntaxKind[LineTerminatorToken](193,1): «line terminator»
SyntaxKind[Identifier](193,1): NonZeroDigit
SyntaxKind[ColonColonToken](193,14): ::
SyntaxKind[OneKeyword](193,17): one
SyntaxKind[OfKeyword](193,21): of
SyntaxKind[LineTerminatorToken](194,1): «line terminator»
SyntaxKind[IndentToken](194,1): «indent»
SyntaxKind[Terminal](194,2): `1`
SyntaxKind[Terminal](194,6): `2`
SyntaxKind[Terminal](194,10): `3`
SyntaxKind[Terminal](194,14): `4`
SyntaxKind[Terminal](194,18): `5`
SyntaxKind[Terminal](194,22): `6`
SyntaxKind[Terminal](194,26): `7`
SyntaxKind[Terminal](194,30): `8`
SyntaxKind[Terminal](194,34): `9`
SyntaxKind[LineTerminatorToken](195,1): «line terminator»
SyntaxKind[DedentToken](195,1): «dedent»
SyntaxKind[LineTerminatorToken](196,1): «line terminator»
SyntaxKind[Identifier](196,1): ExponentPart
SyntaxKind[ColonColonToken](196,14): ::
SyntaxKind[LineTerminatorToken](197,1): «line terminator»
SyntaxKind[IndentToken](197,1): «indent»
SyntaxKind[Identifier](197,2): ExponentIndicator
SyntaxKind[Identifier](197,20): SignedInteger
SyntaxKind[LineTerminatorToken](198,1): «line terminator»
SyntaxKind[DedentToken](198,1): «dedent»
SyntaxKind[LineTerminatorToken](199,1): «line terminator»
SyntaxKind[Identifier](199,1): ExponentIndicator
SyntaxKind[ColonColonToken](199,19): ::
SyntaxKind[OneKeyword](199,22): one
SyntaxKind[OfKeyword](199,26): of
SyntaxKind[LineTerminatorToken](200,1): «line terminator»
SyntaxKind[IndentToken](200,1): «indent»
SyntaxKind[Terminal](200,2): `e`
SyntaxKind[Terminal](200,6): `E`
SyntaxKind[LineTerminatorToken](201,1): «line terminator»
SyntaxKind[DedentToken](201,1): «dedent»
SyntaxKind[LineTerminatorToken](202,1): «line terminator»
SyntaxKind[Identifier](202,1): SignedInteger
SyntaxKind[ColonColonToken](202,15): ::
SyntaxKind[LineTerminatorToken](203,1): «line terminator»
SyntaxKind[IndentToken](203,1): «indent»
SyntaxKind[Identifier](203,2): DecimalDigits
SyntaxKind[LineTerminatorToken](204,1): «line terminator»
SyntaxKind[Terminal](204,2): `+`
SyntaxKind[Identifier](204,6): DecimalDigits
SyntaxKind[LineTerminatorToken](205,1): «line terminator»
SyntaxKind[Terminal](205,2): `-`
SyntaxKind[Identifier](205,6): DecimalDigits
SyntaxKind[LineTerminatorToken](206,1): «line terminator»
SyntaxKind[DedentToken](206,1): «dedent»
SyntaxKind[LineTerminatorToken](207,1): «line terminator»
SyntaxKind[Identifier](207,1): BinaryIntegerLiteral
SyntaxKind[ColonColonToken](207,22): ::
SyntaxKind[LineTerminatorToken](208,1): «line terminator»
SyntaxKind[IndentToken](208,1): «indent»
SyntaxKind[Terminal](208,2): `0b`
SyntaxKind[Identifier](208,7): BinaryDigits
SyntaxKind[LineTerminatorToken](209,1): «line terminator»
SyntaxKind[Terminal](209,2): `0B`
SyntaxKind[Identifier](209,7): BinaryDigits
SyntaxKind[LineTerminatorToken](210,1): «line terminator»
SyntaxKind[DedentToken](210,1): «dedent»
SyntaxKind[LineTerminatorToken](211,1): «line terminator»
SyntaxKind[Identifier](211,1): BinaryDigits
SyntaxKind[ColonColonToken](211,14): ::
SyntaxKind[LineTerminatorToken](212,1): «line terminator»
SyntaxKind[IndentToken](212,1): «indent»
SyntaxKind[Identifier](212,2): BinaryDigit
SyntaxKind[LineTerminatorToken](213,1): «line terminator»
SyntaxKind[Identifier](213,2): BinaryDigits
SyntaxKind[Identifier](213,15): BinaryDigit
SyntaxKind[LineTerminatorToken](214,1): «line terminator»
SyntaxKind[DedentToken](214,1): «dedent»
SyntaxKind[LineTerminatorToken](215,1): «line terminator»
SyntaxKind[Identifier](215,1): BinaryDigit
SyntaxKind[ColonColonToken](215,13): ::
SyntaxKind[OneKeyword](215,16): one
SyntaxKind[OfKeyword](215,20): of
SyntaxKind[LineTerminatorToken](216,1): «line terminator»
SyntaxKind[IndentToken](216,1): «indent»
SyntaxKind[Terminal](216,2): `0`
SyntaxKind[Terminal](216,6): `1`
SyntaxKind[LineTerminatorToken](217,1): «line terminator»
SyntaxKind[DedentToken](217,1): «dedent»
SyntaxKind[LineTerminatorToken](218,1): «line terminator»
SyntaxKind[Identifier](218,1): OctalIntegerLiteral
SyntaxKind[ColonColonToken](218,21): ::
SyntaxKind[LineTerminatorToken](219,1): «line terminator»
SyntaxKind[IndentToken](219,1): «indent»
SyntaxKind[Terminal](219,2): `0o`
SyntaxKind[Identifier](219,7): OctalDigits
SyntaxKind[LineTerminatorToken](220,1): «line terminator»
SyntaxKind[Terminal](220,2): `0O`
SyntaxKind[Identifier](220,7): OctalDigits
SyntaxKind[LineTerminatorToken](221,1): «line terminator»
SyntaxKind[DedentToken](221,1): «dedent»
SyntaxKind[LineTerminatorToken](222,1): «line terminator»
SyntaxKind[Identifier](222,1): OctalDigits
SyntaxKind[ColonColonToken](222,13): ::
SyntaxKind[LineTerminatorToken](223,1): «line terminator»
SyntaxKind[IndentToken](223,1): «indent»
SyntaxKind[Identifier](223,2): OctalDigit
SyntaxKind[LineTerminatorToken](224,1): «line terminator»
SyntaxKind[Identifier](224,2): OctalDigits
SyntaxKind[Identifier](224,14): OctalDigit
SyntaxKind[LineTerminatorToken](225,1): «line terminator»
SyntaxKind[DedentToken](225,1): «dedent»
SyntaxKind[LineTerminatorToken](226,1): «line terminator»
SyntaxKind[Identifier](226,1): OctalDigit
SyntaxKind[ColonColonToken](226,12): ::
SyntaxKind[OneKeyword](226,15): one
SyntaxKind[OfKeyword](226,19): of
SyntaxKind[LineTerminatorToken](227,1): «line terminator»
SyntaxKind[IndentToken](227,1): «indent»
SyntaxKind[Terminal](227,2): `0`
SyntaxKind[Terminal](227,6): `1`
SyntaxKind[Terminal](227,10): `2`
SyntaxKind[Terminal](227,14): `3`
SyntaxKind[Terminal](227,18): `4`
SyntaxKind[Terminal](227,22): `5`
SyntaxKind[Terminal](227,26): `6`
SyntaxKind[Terminal](227,30): `7`
SyntaxKind[LineTerminatorToken](228,1): «line terminator»
SyntaxKind[DedentToken](228,1): «dedent»
SyntaxKind[LineTerminatorToken](229,1): «line terminator»
SyntaxKind[Identifier](229,1): HexIntegerLiteral
SyntaxKind[ColonColonToken](229,19): ::
SyntaxKind[LineTerminatorToken](230,1): «line terminator»
SyntaxKind[IndentToken](230,1): «indent»
SyntaxKind[Terminal](230,2): `0x`
SyntaxKind[Identifier](230,7): HexDigits
SyntaxKind[LineTerminatorToken](231,1): «line terminator»
SyntaxKind[Terminal](231,2): `0X`
SyntaxKind[Identifier](231,7): HexDigits
SyntaxKind[LineTerminatorToken](232,1): «line terminator»
SyntaxKind[DedentToken](232,1): «dedent»
SyntaxKind[LineTerminatorToken](233,1): «line terminator»
SyntaxKind[Identifier](233,1): HexDigits
SyntaxKind[ColonColonToken](233,11): ::
SyntaxKind[LineTerminatorToken](234,1): «line terminator»
SyntaxKind[IndentToken](234,1): «indent»
SyntaxKind[Identifier](234,2): HexDigit
SyntaxKind[LineTerminatorToken](235,1): «line terminator»
SyntaxKind[Identifier](235,2): HexDigits
SyntaxKind[Identifier](235,12): HexDigit
SyntaxKind[LineTerminatorToken](236,1): «line terminator»
SyntaxKind[DedentToken](236,1): «dedent»
SyntaxKind[LineTerminatorToken](237,1): «line terminator»
SyntaxKind[Identifier](237,1): HexDigit
SyntaxKind[ColonColonToken](237,10): ::
SyntaxKind[OneKeyword](237,13): one
SyntaxKind[OfKeyword](237,17): of
SyntaxKind[LineTerminatorToken](238,1): «line terminator»
SyntaxKind[IndentToken](238,1): «indent»
SyntaxKind[Terminal](238,2): `0`
SyntaxKind[Terminal](238,6): `1`
SyntaxKind[Terminal](238,10): `2`
SyntaxKind[Terminal](238,14): `3`
SyntaxKind[Terminal](238,18): `4`
SyntaxKind[Terminal](238,22): `5`
SyntaxKind[Terminal](238,26): `6`
SyntaxKind[Terminal](238,30): `7`
SyntaxKind[Terminal](238,34): `8`
SyntaxKind[Terminal](238,38): `9`
SyntaxKind[Terminal](238,42): `a`
SyntaxKind[Terminal](238,46): `b`
SyntaxKind[Terminal](238,50): `c`
SyntaxKind[Terminal](238,54): `d`
SyntaxKind[Terminal](238,58): `e`
SyntaxKind[Terminal](238,62): `f`
SyntaxKind[Terminal](238,66): `A`
SyntaxKind[Terminal](238,70): `B`
SyntaxKind[Terminal](238,74): `C`
SyntaxKind[Terminal](238,78): `D`
SyntaxKind[Terminal](238,82): `E`
SyntaxKind[Terminal](238,86): `F`
SyntaxKind[LineTerminatorToken](239,1): «line terminator»
SyntaxKind[DedentToken](239,1): «dedent»
SyntaxKind[LineTerminatorToken](240,1): «line terminator»
SyntaxKind[Identifier](240,1): StringLiteral
SyntaxKind[ColonColonToken](240,15): ::
SyntaxKind[LineTerminatorToken](241,1): «line terminator»
SyntaxKind[IndentToken](241,1): «indent»
SyntaxKind[Terminal](241,2): `"`
SyntaxKind[Identifier](241,6): DoubleStringCharacters
SyntaxKind[QuestionToken](241,28): ?
SyntaxKind[Terminal](241,30): `"`
SyntaxKind[LineTerminatorToken](242,1): «line terminator»
SyntaxKind[Terminal](242,2): `'`
SyntaxKind[Identifier](242,6): SingleStringCharacters
SyntaxKind[QuestionToken](242,28): ?
SyntaxKind[Terminal](242,30): `'`
SyntaxKind[LineTerminatorToken](243,1): «line terminator»
SyntaxKind[DedentToken](243,1): «dedent»
SyntaxKind[LineTerminatorToken](244,1): «line terminator»
SyntaxKind[Identifier](244,1): DoubleStringCharacters
SyntaxKind[ColonColonToken](244,24): ::
SyntaxKind[LineTerminatorToken](245,1): «line terminator»
SyntaxKind[IndentToken](245,1): «indent»
SyntaxKind[Identifier](245,2): DoubleStringCharacter
SyntaxKind[Identifier](245,24): DoubleStringCharacters
SyntaxKind[QuestionToken](245,46): ?
SyntaxKind[LineTerminatorToken](246,1): «line terminator»
SyntaxKind[DedentToken](246,1): «dedent»
SyntaxKind[LineTerminatorToken](247,1): «line terminator»
SyntaxKind[Identifier](247,1): SingleStringCharacters
SyntaxKind[ColonColonToken](247,24): ::
SyntaxKind[LineTerminatorToken](248,1): «line terminator»
SyntaxKind[IndentToken](248,1): «indent»
SyntaxKind[Identifier](248,2): SingleStringCharacter
SyntaxKind[Identifier](248,24): SingleStringCharacters
SyntaxKind[QuestionToken](248,46): ?
SyntaxKind[LineTerminatorToken](249,1): «line terminator»
SyntaxKind[DedentToken](249,1): «dedent»
SyntaxKind[LineTerminatorToken](250,1): «line terminator»
SyntaxKind[Identifier](250,1): DoubleStringCharacter
SyntaxKind[ColonColonToken](250,23): ::
SyntaxKind[LineTerminatorToken](251,1): «line terminator»
SyntaxKind[IndentToken](251,1): «indent»
SyntaxKind[Identifier](251,2): SourceCharacter
SyntaxKind[ButKeyword](251,18): but
SyntaxKind[NotKeyword](251,22): not
SyntaxKind[OneKeyword](251,26): one
SyntaxKind[OfKeyword](251,30): of
SyntaxKind[Terminal](251,33): `"`
SyntaxKind[OrKeyword](251,37): or
SyntaxKind[Terminal](251,40): `\`
SyntaxKind[OrKeyword](251,44): or
SyntaxKind[Identifier](251,47): LineTerminator
SyntaxKind[LineTerminatorToken](252,1): «line terminator»
SyntaxKind[Terminal](252,2): `\`
SyntaxKind[Identifier](252,6): EscapeSequence
SyntaxKind[LineTerminatorToken](253,1): «line terminator»
SyntaxKind[Identifier](253,2): LineContinuation
SyntaxKind[LineTerminatorToken](254,1): «line terminator»
SyntaxKind[DedentToken](254,1): «dedent»
SyntaxKind[LineTerminatorToken](255,1): «line terminator»
SyntaxKind[Identifier](255,1): SingleStringCharacter
SyntaxKind[ColonColonToken](255,23): ::
SyntaxKind[LineTerminatorToken](256,1): «line terminator»
SyntaxKind[IndentToken](256,1): «indent»
SyntaxKind[Identifier](256,2): SourceCharacter
SyntaxKind[ButKeyword](256,18): but
SyntaxKind[NotKeyword](256,22): not
SyntaxKind[OneKeyword](256,26): one
SyntaxKind[OfKeyword](256,30): of
SyntaxKind[Terminal](256,33): `'`
SyntaxKind[OrKeyword](256,37): or
SyntaxKind[Terminal](256,40): `\`
SyntaxKind[OrKeyword](256,44): or
SyntaxKind[Identifier](256,47): LineTerminator
SyntaxKind[LineTerminatorToken](257,1): «line terminator»
SyntaxKind[Terminal](257,2): `\`
SyntaxKind[Identifier](257,6): EscapeSequence
SyntaxKind[LineTerminatorToken](258,1): «line terminator»
SyntaxKind[Identifier](258,2): LineContinuation
SyntaxKind[LineTerminatorToken](259,1): «line terminator»
SyntaxKind[DedentToken](259,1): «dedent»
SyntaxKind[LineTerminatorToken](260,1): «line terminator»
SyntaxKind[Identifier](260,1): LineContinuation
SyntaxKind[ColonColonToken](260,18): ::
SyntaxKind[LineTerminatorToken](261,1): «line terminator»
SyntaxKind[IndentToken](261,1): «indent»
SyntaxKind[Terminal](261,2): `\`
SyntaxKind[Identifier](261,6): LineTerminatorSequence
SyntaxKind[LineTerminatorToken](262,1): «line terminator»
SyntaxKind[DedentToken](262,1): «dedent»
SyntaxKind[LineTerminatorToken](263,1): «line terminator»
SyntaxKind[Identifier](263,1): EscapeSequence
SyntaxKind[ColonColonToken](263,16): ::
SyntaxKind[LineTerminatorToken](264,1): «line terminator»
SyntaxKind[IndentToken](264,1): «indent»
SyntaxKind[Identifier](264,2): CharacterEscapeSequence
SyntaxKind[LineTerminatorToken](265,1): «line terminator»
SyntaxKind[Terminal](265,2): `0`
SyntaxKind[OpenBracketToken](265,6): [
SyntaxKind[LookaheadKeyword](265,7): lookahead
SyntaxKind[ExclamationEqualsToken](265,17): !=
SyntaxKind[Identifier](265,20): DecimalDigit
SyntaxKind[CloseBracketToken](265,32): ]
SyntaxKind[LineTerminatorToken](266,1): «line terminator»
SyntaxKind[Identifier](266,2): HexEscapeSequence
SyntaxKind[LineTerminatorToken](267,1): «line terminator»
SyntaxKind[Identifier](267,2): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](268,1): «line terminator»
SyntaxKind[DedentToken](268,1): «dedent»
SyntaxKind[LineTerminatorToken](269,1): «line terminator»
SyntaxKind[Identifier](269,1): CharacterEscapeSequence
SyntaxKind[ColonColonToken](269,25): ::
SyntaxKind[LineTerminatorToken](270,1): «line terminator»
SyntaxKind[IndentToken](270,1): «indent»
SyntaxKind[Identifier](270,2): SingleEscapeCharacter
SyntaxKind[LineTerminatorToken](271,1): «line terminator»
SyntaxKind[Identifier](271,2): NonEscapeCharacter
SyntaxKind[LineTerminatorToken](272,1): «line terminator»
SyntaxKind[DedentToken](272,1): «dedent»
SyntaxKind[LineTerminatorToken](273,1): «line terminator»
SyntaxKind[Identifier](273,1): SingleEscapeCharacter
SyntaxKind[ColonColonToken](273,23): ::
SyntaxKind[OneKeyword](273,26): one
SyntaxKind[OfKeyword](273,30): of
SyntaxKind[LineTerminatorToken](274,1): «line terminator»
SyntaxKind[IndentToken](274,1): «indent»
SyntaxKind[Terminal](274,2): `'`
SyntaxKind[Terminal](274,6): `"`
SyntaxKind[Terminal](274,10): `\`
SyntaxKind[Terminal](274,14): `b`
SyntaxKind[Terminal](274,18): `f`
SyntaxKind[Terminal](274,22): `n`
SyntaxKind[Terminal](274,26): `r`
SyntaxKind[Terminal](274,30): `t`
SyntaxKind[Terminal](274,34): `v`
SyntaxKind[LineTerminatorToken](275,1): «line terminator»
SyntaxKind[DedentToken](275,1): «dedent»
SyntaxKind[LineTerminatorToken](276,1): «line terminator»
SyntaxKind[Identifier](276,1): NonEscapeCharacter
SyntaxKind[ColonColonToken](276,20): ::
SyntaxKind[LineTerminatorToken](277,1): «line terminator»
SyntaxKind[IndentToken](277,1): «indent»
SyntaxKind[Identifier](277,2): SourceCharacter
SyntaxKind[ButKeyword](277,18): but
SyntaxKind[NotKeyword](277,22): not
SyntaxKind[OneKeyword](277,26): one
SyntaxKind[OfKeyword](277,30): of
SyntaxKind[Identifier](277,33): EscapeCharacter
SyntaxKind[OrKeyword](277,49): or
SyntaxKind[Identifier](277,52): LineTerminator
SyntaxKind[LineTerminatorToken](278,1): «line terminator»
SyntaxKind[DedentToken](278,1): «dedent»
SyntaxKind[LineTerminatorToken](279,1): «line terminator»
SyntaxKind[Identifier](279,1): EscapeCharacter
SyntaxKind[ColonColonToken](279,17): ::
SyntaxKind[LineTerminatorToken](280,1): «line terminator»
SyntaxKind[IndentToken](280,1): «indent»
SyntaxKind[Identifier](280,2): SingleEscapeCharacter
SyntaxKind[LineTerminatorToken](281,1): «line terminator»
SyntaxKind[Identifier](281,2): DecimalDigit
SyntaxKind[LineTerminatorToken](282,1): «line terminator»
SyntaxKind[Terminal](282,2): `x`
SyntaxKind[LineTerminatorToken](283,1): «line terminator»
SyntaxKind[Terminal](283,2): `u`
SyntaxKind[LineTerminatorToken](284,1): «line terminator»
SyntaxKind[DedentToken](284,1): «dedent»
SyntaxKind[LineTerminatorToken](285,1): «line terminator»
SyntaxKind[Identifier](285,1): HexEscapeSequence
SyntaxKind[ColonColonToken](285,19): ::
SyntaxKind[LineTerminatorToken](286,1): «line terminator»
SyntaxKind[IndentToken](286,1): «indent»
SyntaxKind[Terminal](286,2): `x`
SyntaxKind[Identifier](286,6): HexDigit
SyntaxKind[Identifier](286,15): HexDigit
SyntaxKind[LineTerminatorToken](287,1): «line terminator»
SyntaxKind[DedentToken](287,1): «dedent»
SyntaxKind[LineTerminatorToken](288,1): «line terminator»
SyntaxKind[Identifier](288,1): UnicodeEscapeSequence
SyntaxKind[ColonColonToken](288,23): ::
SyntaxKind[LineTerminatorToken](289,1): «line terminator»
SyntaxKind[IndentToken](289,1): «indent»
SyntaxKind[Terminal](289,2): `u`
SyntaxKind[Identifier](289,6): Hex4Digits
SyntaxKind[LineTerminatorToken](290,1): «line terminator»
SyntaxKind[Terminal](290,2): `u{`
SyntaxKind[Identifier](290,7): HexDigits
SyntaxKind[Terminal](290,17): `}`
SyntaxKind[LineTerminatorToken](291,1): «line terminator»
SyntaxKind[DedentToken](291,1): «dedent»
SyntaxKind[LineTerminatorToken](292,1): «line terminator»
SyntaxKind[Identifier](292,1): Hex4Digits
SyntaxKind[ColonColonToken](292,12): ::
SyntaxKind[LineTerminatorToken](293,1): «line terminator»
SyntaxKind[IndentToken](293,1): «indent»
SyntaxKind[Identifier](293,2): HexDigit
SyntaxKind[Identifier](293,11): HexDigit
SyntaxKind[Identifier](293,20): HexDigit
SyntaxKind[Identifier](293,29): HexDigit
SyntaxKind[LineTerminatorToken](294,1): «line terminator»
SyntaxKind[DedentToken](294,1): «dedent»
SyntaxKind[LineTerminatorToken](295,1): «line terminator»
SyntaxKind[Identifier](295,1): RegularExpressionLiteral
SyntaxKind[ColonColonToken](295,26): ::
SyntaxKind[LineTerminatorToken](296,1): «line terminator»
SyntaxKind[IndentToken](296,1): «indent»
SyntaxKind[Terminal](296,2): `/`
SyntaxKind[Identifier](296,6): RegularExpressionBody
SyntaxKind[Terminal](296,28): `/`
SyntaxKind[Identifier](296,32): RegularExpressionFlags
SyntaxKind[LineTerminatorToken](297,1): «line terminator»
SyntaxKind[DedentToken](297,1): «dedent»
SyntaxKind[LineTerminatorToken](298,1): «line terminator»
SyntaxKind[Identifier](298,1): RegularExpressionBody
SyntaxKind[ColonColonToken](298,23): ::
SyntaxKind[LineTerminatorToken](299,1): «line terminator»
SyntaxKind[IndentToken](299,1): «indent»
SyntaxKind[Identifier](299,2): RegularExpressionFirstChar
SyntaxKind[Identifier](299,29): RegularExpressionChars
SyntaxKind[LineTerminatorToken](300,1): «line terminator»
SyntaxKind[DedentToken](300,1): «dedent»
SyntaxKind[LineTerminatorToken](301,1): «line terminator»
SyntaxKind[Identifier](301,1): RegularExpressionChars
SyntaxKind[ColonColonToken](301,24): ::
SyntaxKind[LineTerminatorToken](302,1): «line terminator»
SyntaxKind[IndentToken](302,1): «indent»
SyntaxKind[OpenBracketToken](302,2): [
SyntaxKind[EmptyKeyword](302,3): empty
SyntaxKind[CloseBracketToken](302,8): ]
SyntaxKind[LineTerminatorToken](303,1): «line terminator»
SyntaxKind[Identifier](303,2): RegularExpressionChars
SyntaxKind[Identifier](303,25): RegularExpressionChar
SyntaxKind[LineTerminatorToken](304,1): «line terminator»
SyntaxKind[DedentToken](304,1): «dedent»
SyntaxKind[LineTerminatorToken](305,1): «line terminator»
SyntaxKind[Identifier](305,1): RegularExpressionFirstChar
SyntaxKind[ColonColonToken](305,28): ::
SyntaxKind[LineTerminatorToken](306,1): «line terminator»
SyntaxKind[IndentToken](306,1): «indent»
SyntaxKind[Identifier](306,2): RegularExpressionNonTerminator
SyntaxKind[ButKeyword](306,33): but
SyntaxKind[NotKeyword](306,37): not
SyntaxKind[OneKeyword](306,41): one
SyntaxKind[OfKeyword](306,45): of
SyntaxKind[Terminal](306,48): `*`
SyntaxKind[OrKeyword](306,52): or
SyntaxKind[Terminal](306,55): `\`
SyntaxKind[OrKeyword](306,59): or
SyntaxKind[Terminal](306,62): `/`
SyntaxKind[OrKeyword](306,66): or
SyntaxKind[Terminal](306,69): `[`
SyntaxKind[LineTerminatorToken](307,1): «line terminator»
SyntaxKind[Identifier](307,2): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](308,1): «line terminator»
SyntaxKind[Identifier](308,2): RegularExpressionClass
SyntaxKind[LineTerminatorToken](309,1): «line terminator»
SyntaxKind[DedentToken](309,1): «dedent»
SyntaxKind[LineTerminatorToken](310,1): «line terminator»
SyntaxKind[Identifier](310,1): RegularExpressionChar
SyntaxKind[ColonColonToken](310,23): ::
SyntaxKind[LineTerminatorToken](311,1): «line terminator»
SyntaxKind[IndentToken](311,1): «indent»
SyntaxKind[Identifier](311,2): RegularExpressionNonTerminator
SyntaxKind[ButKeyword](311,33): but
SyntaxKind[NotKeyword](311,37): not
SyntaxKind[OneKeyword](311,41): one
SyntaxKind[OfKeyword](311,45): of
SyntaxKind[Terminal](311,48): `\`
SyntaxKind[OrKeyword](311,52): or
SyntaxKind[Terminal](311,55): `/`
SyntaxKind[OrKeyword](311,59): or
SyntaxKind[Terminal](311,62): `[`
SyntaxKind[LineTerminatorToken](312,1): «line terminator»
SyntaxKind[Identifier](312,2): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](313,1): «line terminator»
SyntaxKind[Identifier](313,2): RegularExpressionClass
SyntaxKind[LineTerminatorToken](314,1): «line terminator»
SyntaxKind[DedentToken](314,1): «dedent»
SyntaxKind[LineTerminatorToken](315,1): «line terminator»
SyntaxKind[Identifier](315,1): RegularExpressionBackslashSequence
SyntaxKind[ColonColonToken](315,36): ::
SyntaxKind[LineTerminatorToken](316,1): «line terminator»
SyntaxKind[IndentToken](316,1): «indent»
SyntaxKind[Terminal](316,2): `\`
SyntaxKind[Identifier](316,6): RegularExpressionNonTerminator
SyntaxKind[LineTerminatorToken](317,1): «line terminator»
SyntaxKind[DedentToken](317,1): «dedent»
SyntaxKind[LineTerminatorToken](318,1): «line terminator»
SyntaxKind[Identifier](318,1): RegularExpressionNonTerminator
SyntaxKind[ColonColonToken](318,32): ::
SyntaxKind[LineTerminatorToken](319,1): «line terminator»
SyntaxKind[IndentToken](319,1): «indent»
SyntaxKind[Identifier](319,2): SourceCharacter
SyntaxKind[ButKeyword](319,18): but
SyntaxKind[NotKeyword](319,22): not
SyntaxKind[Identifier](319,26): LineTerminator
SyntaxKind[LineTerminatorToken](320,1): «line terminator»
SyntaxKind[DedentToken](320,1): «dedent»
SyntaxKind[LineTerminatorToken](321,1): «line terminator»
SyntaxKind[Identifier](321,1): RegularExpressionClass
SyntaxKind[ColonColonToken](321,24): ::
SyntaxKind[LineTerminatorToken](322,1): «line terminator»
SyntaxKind[IndentToken](322,1): «indent»
SyntaxKind[Terminal](322,2): `[`
SyntaxKind[Identifier](322,6): RegularExpressionClassChars
SyntaxKind[Terminal](322,34): `]`
SyntaxKind[LineTerminatorToken](323,1): «line terminator»
SyntaxKind[DedentToken](323,1): «dedent»
SyntaxKind[LineTerminatorToken](324,1): «line terminator»
SyntaxKind[Identifier](324,1): RegularExpressionClassChars
SyntaxKind[ColonColonToken](324,29): ::
SyntaxKind[LineTerminatorToken](325,1): «line terminator»
SyntaxKind[IndentToken](325,1): «indent»
SyntaxKind[OpenBracketToken](325,2): [
SyntaxKind[EmptyKeyword](325,3): empty
SyntaxKind[CloseBracketToken](325,8): ]
SyntaxKind[LineTerminatorToken](326,1): «line terminator»
SyntaxKind[Identifier](326,2): RegularExpressionClassChars
SyntaxKind[Identifier](326,30): RegularExpressionClassChar
SyntaxKind[LineTerminatorToken](327,1): «line terminator»
SyntaxKind[DedentToken](327,1): «dedent»
SyntaxKind[LineTerminatorToken](328,1): «line terminator»
SyntaxKind[Identifier](328,1): RegularExpressionClassChar
SyntaxKind[ColonColonToken](328,28): ::
SyntaxKind[LineTerminatorToken](329,1): «line terminator»
SyntaxKind[IndentToken](329,1): «indent»
SyntaxKind[Identifier](329,2): RegularExpressionNonTerminator
SyntaxKind[ButKeyword](329,33): but
SyntaxKind[NotKeyword](329,37): not
SyntaxKind[OneKeyword](329,41): one
SyntaxKind[OfKeyword](329,45): of
SyntaxKind[Terminal](329,48): `]`
SyntaxKind[OrKeyword](329,52): or
SyntaxKind[Terminal](329,55): `\`
SyntaxKind[LineTerminatorToken](330,1): «line terminator»
SyntaxKind[Identifier](330,2): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](331,1): «line terminator»
SyntaxKind[DedentToken](331,1): «dedent»
SyntaxKind[LineTerminatorToken](332,1): «line terminator»
SyntaxKind[Identifier](332,1): RegularExpressionFlags
SyntaxKind[ColonColonToken](332,24): ::
SyntaxKind[LineTerminatorToken](333,1): «line terminator»
SyntaxKind[IndentToken](333,1): «indent»
SyntaxKind[OpenBracketToken](333,2): [
SyntaxKind[EmptyKeyword](333,3): empty
SyntaxKind[CloseBracketToken](333,8): ]
SyntaxKind[LineTerminatorToken](334,1): «line terminator»
SyntaxKind[Identifier](334,2): RegularExpressionFlags
SyntaxKind[Identifier](334,25): IdentifierPart
SyntaxKind[LineTerminatorToken](335,1): «line terminator»
SyntaxKind[DedentToken](335,1): «dedent»
SyntaxKind[LineTerminatorToken](336,1): «line terminator»
SyntaxKind[Identifier](336,1): Template
SyntaxKind[ColonColonToken](336,10): ::
SyntaxKind[LineTerminatorToken](337,1): «line terminator»
SyntaxKind[IndentToken](337,1): «indent»
SyntaxKind[Identifier](337,2): NoSubstitutionTemplate
SyntaxKind[LineTerminatorToken](338,1): «line terminator»
SyntaxKind[Identifier](338,2): TemplateHead
SyntaxKind[LineTerminatorToken](339,1): «line terminator»
SyntaxKind[DedentToken](339,1): «dedent»
SyntaxKind[LineTerminatorToken](340,1): «line terminator»
SyntaxKind[Identifier](340,1): NoSubstitutionTemplate
SyntaxKind[ColonColonToken](340,24): ::
SyntaxKind[LineTerminatorToken](341,1): «line terminator»
SyntaxKind[IndentToken](341,1): «indent»
SyntaxKind[Terminal](341,2): ```
SyntaxKind[Identifier](341,6): TemplateCharacters
SyntaxKind[QuestionToken](341,24): ?
SyntaxKind[Terminal](341,26): ```
SyntaxKind[LineTerminatorToken](342,1): «line terminator»
SyntaxKind[DedentToken](342,1): «dedent»
SyntaxKind[LineTerminatorToken](343,1): «line terminator»
SyntaxKind[Identifier](343,1): TemplateHead
SyntaxKind[ColonColonToken](343,14): ::
SyntaxKind[LineTerminatorToken](344,1): «line terminator»
SyntaxKind[IndentToken](344,1): «indent»
SyntaxKind[Terminal](344,2): ```
SyntaxKind[Identifier](344,6): TemplateCharacters
SyntaxKind[QuestionToken](344,24): ?
SyntaxKind[Terminal](344,26): `${`
SyntaxKind[LineTerminatorToken](345,1): «line terminator»
SyntaxKind[DedentToken](345,1): «dedent»
SyntaxKind[LineTerminatorToken](346,1): «line terminator»
SyntaxKind[Identifier](346,1): TemplateSubstitutionTail
SyntaxKind[ColonColonToken](346,26): ::
SyntaxKind[LineTerminatorToken](347,1): «line terminator»
SyntaxKind[IndentToken](347,1): «indent»
SyntaxKind[Identifier](347,2): TemplateMiddle
SyntaxKind[LineTerminatorToken](348,1): «line terminator»
SyntaxKind[Identifier](348,2): TemplateTail
SyntaxKind[LineTerminatorToken](349,1): «line terminator»
SyntaxKind[DedentToken](349,1): «dedent»
SyntaxKind[LineTerminatorToken](350,1): «line terminator»
SyntaxKind[Identifier](350,1): TemplateMiddle
SyntaxKind[ColonColonToken](350,16): ::
SyntaxKind[LineTerminatorToken](351,1): «line terminator»
SyntaxKind[IndentToken](351,1): «indent»
SyntaxKind[Terminal](351,2): `}`
SyntaxKind[Identifier](351,6): TemplateCharacters
SyntaxKind[QuestionToken](351,24): ?
SyntaxKind[Terminal](351,26): `${`
SyntaxKind[LineTerminatorToken](352,1): «line terminator»
SyntaxKind[DedentToken](352,1): «dedent»
SyntaxKind[LineTerminatorToken](353,1): «line terminator»
SyntaxKind[Identifier](353,1): TemplateTail
SyntaxKind[ColonColonToken](353,14): ::
SyntaxKind[LineTerminatorToken](354,1): «line terminator»
SyntaxKind[IndentToken](354,1): «indent»
SyntaxKind[Terminal](354,2): `}`
SyntaxKind[Identifier](354,6): TemplateCharacters
SyntaxKind[QuestionToken](354,24): ?
SyntaxKind[Terminal](354,26): ```
SyntaxKind[LineTerminatorToken](355,1): «line terminator»
SyntaxKind[DedentToken](355,1): «dedent»
SyntaxKind[LineTerminatorToken](356,1): «line terminator»
SyntaxKind[Identifier](356,1): TemplateCharacters
SyntaxKind[ColonColonToken](356,20): ::
SyntaxKind[LineTerminatorToken](357,1): «line terminator»
SyntaxKind[IndentToken](357,1): «indent»
SyntaxKind[Identifier](357,2): TemplateCharacter
SyntaxKind[Identifier](357,20): TemplateCharacters
SyntaxKind[QuestionToken](357,38): ?
SyntaxKind[LineTerminatorToken](358,1): «line terminator»
SyntaxKind[DedentToken](358,1): «dedent»
SyntaxKind[LineTerminatorToken](359,1): «line terminator»
SyntaxKind[Identifier](359,1): TemplateCharacter
SyntaxKind[ColonColonToken](359,19): ::
SyntaxKind[LineTerminatorToken](360,1): «line terminator»
SyntaxKind[IndentToken](360,1): «indent»
SyntaxKind[Terminal](360,2): `$`
SyntaxKind[OpenBracketToken](360,6): [
SyntaxKind[LookaheadKeyword](360,7): lookahead
SyntaxKind[ExclamationEqualsToken](360,17): !=
SyntaxKind[Terminal](360,20): `{`
SyntaxKind[CloseBracketToken](360,24): ]
SyntaxKind[LineTerminatorToken](361,1): «line terminator»
SyntaxKind[Terminal](361,2): `\`
SyntaxKind[Identifier](361,6): EscapeSequence
SyntaxKind[LineTerminatorToken](362,1): «line terminator»
SyntaxKind[Identifier](362,2): LineContinuation
SyntaxKind[LineTerminatorToken](363,1): «line terminator»
SyntaxKind[Identifier](363,2): LineTerminatorSequence
SyntaxKind[LineTerminatorToken](364,1): «line terminator»
SyntaxKind[Identifier](364,2): SourceCharacter
SyntaxKind[ButKeyword](364,18): but
SyntaxKind[NotKeyword](364,22): not
SyntaxKind[OneKeyword](364,26): one
SyntaxKind[OfKeyword](364,30): of
SyntaxKind[Terminal](364,33): ```
SyntaxKind[OrKeyword](364,37): or
SyntaxKind[Terminal](364,40): `\`
SyntaxKind[OrKeyword](364,44): or
SyntaxKind[Terminal](364,47): `$`
SyntaxKind[OrKeyword](364,51): or
SyntaxKind[Identifier](364,54): LineTerminator
SyntaxKind[LineTerminatorToken](365,1): «line terminator»
SyntaxKind[DedentToken](365,1): «dedent»
SyntaxKind[LineTerminatorToken](366,1): «line terminator»
SyntaxKind[LineTerminatorToken](367,1): «line terminator»
SyntaxKind[Identifier](367,1): IdentifierReference
SyntaxKind[OpenBracketToken](367,20): [
SyntaxKind[Identifier](367,21): Yield
SyntaxKind[CloseBracketToken](367,26): ]
SyntaxKind[ColonToken](367,28): :
SyntaxKind[LineTerminatorToken](368,1): «line terminator»
SyntaxKind[IndentToken](368,1): «indent»
SyntaxKind[Identifier](368,2): Identifier
SyntaxKind[LineTerminatorToken](369,1): «line terminator»
SyntaxKind[OpenBracketToken](369,2): [
SyntaxKind[TildeToken](369,3): ~
SyntaxKind[Identifier](369,4): Yield
SyntaxKind[CloseBracketToken](369,9): ]
SyntaxKind[Terminal](369,11): `yield`
SyntaxKind[LineTerminatorToken](370,1): «line terminator»
SyntaxKind[DedentToken](370,1): «dedent»
SyntaxKind[LineTerminatorToken](371,1): «line terminator»
SyntaxKind[Identifier](371,1): BindingIdentifier
SyntaxKind[OpenBracketToken](371,18): [
SyntaxKind[Identifier](371,19): Yield
SyntaxKind[CloseBracketToken](371,24): ]
SyntaxKind[ColonToken](371,26): :
SyntaxKind[LineTerminatorToken](372,1): «line terminator»
SyntaxKind[IndentToken](372,1): «indent»
SyntaxKind[Identifier](372,2): Identifier
SyntaxKind[LineTerminatorToken](373,1): «line terminator»
SyntaxKind[OpenBracketToken](373,2): [
SyntaxKind[TildeToken](373,3): ~
SyntaxKind[Identifier](373,4): Yield
SyntaxKind[CloseBracketToken](373,9): ]
SyntaxKind[Terminal](373,11): `yield`
SyntaxKind[LineTerminatorToken](374,1): «line terminator»
SyntaxKind[DedentToken](374,1): «dedent»
SyntaxKind[LineTerminatorToken](375,1): «line terminator»
SyntaxKind[Identifier](375,1): LabelIdentifier
SyntaxKind[OpenBracketToken](375,16): [
SyntaxKind[Identifier](375,17): Yield
SyntaxKind[CloseBracketToken](375,22): ]
SyntaxKind[ColonToken](375,24): :
SyntaxKind[LineTerminatorToken](376,1): «line terminator»
SyntaxKind[IndentToken](376,1): «indent»
SyntaxKind[Identifier](376,2): Identifier
SyntaxKind[LineTerminatorToken](377,1): «line terminator»
SyntaxKind[OpenBracketToken](377,2): [
SyntaxKind[TildeToken](377,3): ~
SyntaxKind[Identifier](377,4): Yield
SyntaxKind[CloseBracketToken](377,9): ]
SyntaxKind[Terminal](377,11): `yield`
SyntaxKind[LineTerminatorToken](378,1): «line terminator»
SyntaxKind[DedentToken](378,1): «dedent»
SyntaxKind[LineTerminatorToken](379,1): «line terminator»
SyntaxKind[Identifier](379,1): Identifier
SyntaxKind[ColonToken](379,12): :
SyntaxKind[LineTerminatorToken](380,1): «line terminator»
SyntaxKind[IndentToken](380,1): «indent»
SyntaxKind[Identifier](380,2): IdentifierName
SyntaxKind[ButKeyword](380,17): but
SyntaxKind[NotKeyword](380,21): not
SyntaxKind[Identifier](380,25): ReservedWord
SyntaxKind[LineTerminatorToken](381,1): «line terminator»
SyntaxKind[DedentToken](381,1): «dedent»
SyntaxKind[LineTerminatorToken](382,1): «line terminator»
SyntaxKind[Identifier](382,1): PrimaryExpression
SyntaxKind[OpenBracketToken](382,18): [
SyntaxKind[Identifier](382,19): Yield
SyntaxKind[CloseBracketToken](382,24): ]
SyntaxKind[ColonToken](382,26): :
SyntaxKind[LineTerminatorToken](383,1): «line terminator»
SyntaxKind[IndentToken](383,1): «indent»
SyntaxKind[Terminal](383,2): `this`
SyntaxKind[LineTerminatorToken](384,1): «line terminator»
SyntaxKind[Identifier](384,2): IdentifierReference
SyntaxKind[OpenBracketToken](384,21): [
SyntaxKind[QuestionToken](384,22): ?
SyntaxKind[Identifier](384,23): Yield
SyntaxKind[CloseBracketToken](384,28): ]
SyntaxKind[LineTerminatorToken](385,1): «line terminator»
SyntaxKind[Identifier](385,2): Literal
SyntaxKind[LineTerminatorToken](386,1): «line terminator»
SyntaxKind[Identifier](386,2): ArrayLiteral
SyntaxKind[OpenBracketToken](386,14): [
SyntaxKind[QuestionToken](386,15): ?
SyntaxKind[Identifier](386,16): Yield
SyntaxKind[CloseBracketToken](386,21): ]
SyntaxKind[LineTerminatorToken](387,1): «line terminator»
SyntaxKind[Identifier](387,2): ObjectLiteral
SyntaxKind[OpenBracketToken](387,15): [
SyntaxKind[QuestionToken](387,16): ?
SyntaxKind[Identifier](387,17): Yield
SyntaxKind[CloseBracketToken](387,22): ]
SyntaxKind[LineTerminatorToken](388,1): «line terminator»
SyntaxKind[Identifier](388,2): FunctionExpression
SyntaxKind[LineTerminatorToken](389,1): «line terminator»
SyntaxKind[Identifier](389,2): ClassExpression
SyntaxKind[OpenBracketToken](389,17): [
SyntaxKind[QuestionToken](389,18): ?
SyntaxKind[Identifier](389,19): Yield
SyntaxKind[CloseBracketToken](389,24): ]
SyntaxKind[LineTerminatorToken](390,1): «line terminator»
SyntaxKind[Identifier](390,2): GeneratorExpression
SyntaxKind[LineTerminatorToken](391,1): «line terminator»
SyntaxKind[Identifier](391,2): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](392,1): «line terminator»
SyntaxKind[Identifier](392,2): TemplateLiteral
SyntaxKind[OpenBracketToken](392,17): [
SyntaxKind[QuestionToken](392,18): ?
SyntaxKind[Identifier](392,19): Yield
SyntaxKind[CloseBracketToken](392,24): ]
SyntaxKind[LineTerminatorToken](393,1): «line terminator»
SyntaxKind[Identifier](393,2): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](393,51): [
SyntaxKind[QuestionToken](393,52): ?
SyntaxKind[Identifier](393,53): Yield
SyntaxKind[CloseBracketToken](393,58): ]
SyntaxKind[LineTerminatorToken](394,1): «line terminator»
SyntaxKind[DedentToken](394,1): «dedent»
SyntaxKind[LineTerminatorToken](395,1): «line terminator»
SyntaxKind[Identifier](395,1): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](395,50): [
SyntaxKind[Identifier](395,51): Yield
SyntaxKind[CloseBracketToken](395,56): ]
SyntaxKind[ColonToken](395,58): :
SyntaxKind[LineTerminatorToken](396,1): «line terminator»
SyntaxKind[IndentToken](396,1): «indent»
SyntaxKind[Terminal](396,2): `(`
SyntaxKind[Identifier](396,6): Expression
SyntaxKind[OpenBracketToken](396,16): [
SyntaxKind[PlusToken](396,17): +
SyntaxKind[Identifier](396,18): In
SyntaxKind[CommaToken](396,20): ,
SyntaxKind[QuestionToken](396,22): ?
SyntaxKind[Identifier](396,23): Yield
SyntaxKind[CloseBracketToken](396,28): ]
SyntaxKind[Terminal](396,30): `)`
SyntaxKind[LineTerminatorToken](397,1): «line terminator»
SyntaxKind[Terminal](397,2): `(`
SyntaxKind[Terminal](397,6): `)`
SyntaxKind[LineTerminatorToken](398,1): «line terminator»
SyntaxKind[Terminal](398,2): `(`
SyntaxKind[Terminal](398,6): `...`
SyntaxKind[Identifier](398,12): BindingIdentifier
SyntaxKind[OpenBracketToken](398,29): [
SyntaxKind[QuestionToken](398,30): ?
SyntaxKind[Identifier](398,31): Yield
SyntaxKind[CloseBracketToken](398,36): ]
SyntaxKind[Terminal](398,38): `)`
SyntaxKind[LineTerminatorToken](399,1): «line terminator»
SyntaxKind[Terminal](399,2): `(`
SyntaxKind[Identifier](399,6): Expression
SyntaxKind[OpenBracketToken](399,16): [
SyntaxKind[PlusToken](399,17): +
SyntaxKind[Identifier](399,18): In
SyntaxKind[CommaToken](399,20): ,
SyntaxKind[QuestionToken](399,22): ?
SyntaxKind[Identifier](399,23): Yield
SyntaxKind[CloseBracketToken](399,28): ]
SyntaxKind[Terminal](399,30): `,`
SyntaxKind[Terminal](399,34): `...`
SyntaxKind[Identifier](399,40): BindingIdentifier
SyntaxKind[OpenBracketToken](399,57): [
SyntaxKind[QuestionToken](399,58): ?
SyntaxKind[Identifier](399,59): Yield
SyntaxKind[CloseBracketToken](399,64): ]
SyntaxKind[Terminal](399,66): `)`
SyntaxKind[LineTerminatorToken](400,1): «line terminator»
SyntaxKind[DedentToken](400,1): «dedent»
SyntaxKind[LineTerminatorToken](401,1): «line terminator»
SyntaxKind[Identifier](401,1): Literal
SyntaxKind[ColonToken](401,9): :
SyntaxKind[LineTerminatorToken](402,1): «line terminator»
SyntaxKind[IndentToken](402,1): «indent»
SyntaxKind[Identifier](402,2): NullLiteral
SyntaxKind[LineTerminatorToken](403,1): «line terminator»
SyntaxKind[Identifier](403,2): BooleanLiteral
SyntaxKind[LineTerminatorToken](404,1): «line terminator»
SyntaxKind[Identifier](404,2): NumericLiteral
SyntaxKind[LineTerminatorToken](405,1): «line terminator»
SyntaxKind[Identifier](405,2): StringLiteral
SyntaxKind[LineTerminatorToken](406,1): «line terminator»
SyntaxKind[DedentToken](406,1): «dedent»
SyntaxKind[LineTerminatorToken](407,1): «line terminator»
SyntaxKind[Identifier](407,1): ArrayLiteral
SyntaxKind[OpenBracketToken](407,13): [
SyntaxKind[Identifier](407,14): Yield
SyntaxKind[CloseBracketToken](407,19): ]
SyntaxKind[ColonToken](407,21): :
SyntaxKind[LineTerminatorToken](408,1): «line terminator»
SyntaxKind[IndentToken](408,1): «indent»
SyntaxKind[Terminal](408,2): `[`
SyntaxKind[Identifier](408,6): Elision
SyntaxKind[QuestionToken](408,13): ?
SyntaxKind[Terminal](408,15): `]`
SyntaxKind[LineTerminatorToken](409,1): «line terminator»
SyntaxKind[Terminal](409,2): `[`
SyntaxKind[Identifier](409,6): ElementList
SyntaxKind[OpenBracketToken](409,17): [
SyntaxKind[QuestionToken](409,18): ?
SyntaxKind[Identifier](409,19): Yield
SyntaxKind[CloseBracketToken](409,24): ]
SyntaxKind[Terminal](409,26): `]`
SyntaxKind[LineTerminatorToken](410,1): «line terminator»
SyntaxKind[Terminal](410,2): `[`
SyntaxKind[Identifier](410,6): ElementList
SyntaxKind[OpenBracketToken](410,17): [
SyntaxKind[QuestionToken](410,18): ?
SyntaxKind[Identifier](410,19): Yield
SyntaxKind[CloseBracketToken](410,24): ]
SyntaxKind[Terminal](410,26): `,`
SyntaxKind[Identifier](410,30): Elision
SyntaxKind[QuestionToken](410,37): ?
SyntaxKind[Terminal](410,39): `]`
SyntaxKind[LineTerminatorToken](411,1): «line terminator»
SyntaxKind[DedentToken](411,1): «dedent»
SyntaxKind[LineTerminatorToken](412,1): «line terminator»
SyntaxKind[Identifier](412,1): ElementList
SyntaxKind[OpenBracketToken](412,12): [
SyntaxKind[Identifier](412,13): Yield
SyntaxKind[CloseBracketToken](412,18): ]
SyntaxKind[ColonToken](412,20): :
SyntaxKind[LineTerminatorToken](413,1): «line terminator»
SyntaxKind[IndentToken](413,1): «indent»
SyntaxKind[Identifier](413,2): Elision
SyntaxKind[QuestionToken](413,9): ?
SyntaxKind[Identifier](413,11): AssignmentExpression
SyntaxKind[OpenBracketToken](413,31): [
SyntaxKind[Identifier](413,32): In
SyntaxKind[CommaToken](413,34): ,
SyntaxKind[QuestionToken](413,36): ?
SyntaxKind[Identifier](413,37): Yield
SyntaxKind[CloseBracketToken](413,42): ]
SyntaxKind[LineTerminatorToken](414,1): «line terminator»
SyntaxKind[Identifier](414,2): Elision
SyntaxKind[QuestionToken](414,9): ?
SyntaxKind[Identifier](414,11): SpreadElement
SyntaxKind[OpenBracketToken](414,24): [
SyntaxKind[QuestionToken](414,25): ?
SyntaxKind[Identifier](414,26): Yield
SyntaxKind[CloseBracketToken](414,31): ]
SyntaxKind[LineTerminatorToken](415,1): «line terminator»
SyntaxKind[Identifier](415,2): ElementList
SyntaxKind[OpenBracketToken](415,13): [
SyntaxKind[QuestionToken](415,14): ?
SyntaxKind[Identifier](415,15): Yield
SyntaxKind[CloseBracketToken](415,20): ]
SyntaxKind[Terminal](415,22): `,`
SyntaxKind[Identifier](415,26): Elision
SyntaxKind[QuestionToken](415,33): ?
SyntaxKind[Identifier](415,35): AssignmentExpression
SyntaxKind[OpenBracketToken](415,55): [
SyntaxKind[Identifier](415,56): In
SyntaxKind[CommaToken](415,58): ,
SyntaxKind[QuestionToken](415,60): ?
SyntaxKind[Identifier](415,61): Yield
SyntaxKind[CloseBracketToken](415,66): ]
SyntaxKind[LineTerminatorToken](416,1): «line terminator»
SyntaxKind[Identifier](416,2): ElementList
SyntaxKind[OpenBracketToken](416,13): [
SyntaxKind[QuestionToken](416,14): ?
SyntaxKind[Identifier](416,15): Yield
SyntaxKind[CloseBracketToken](416,20): ]
SyntaxKind[Terminal](416,22): `,`
SyntaxKind[Identifier](416,26): Elision
SyntaxKind[QuestionToken](416,33): ?
SyntaxKind[Identifier](416,35): SpreadElement
SyntaxKind[OpenBracketToken](416,48): [
SyntaxKind[QuestionToken](416,49): ?
SyntaxKind[Identifier](416,50): Yield
SyntaxKind[CloseBracketToken](416,55): ]
SyntaxKind[LineTerminatorToken](417,1): «line terminator»
SyntaxKind[DedentToken](417,1): «dedent»
SyntaxKind[LineTerminatorToken](418,1): «line terminator»
SyntaxKind[Identifier](418,1): Elision
SyntaxKind[ColonToken](418,9): :
SyntaxKind[LineTerminatorToken](419,1): «line terminator»
SyntaxKind[IndentToken](419,1): «indent»
SyntaxKind[Terminal](419,2): `,`
SyntaxKind[LineTerminatorToken](420,1): «line terminator»
SyntaxKind[Identifier](420,2): Elision
SyntaxKind[Terminal](420,10): `,`
SyntaxKind[LineTerminatorToken](421,1): «line terminator»
SyntaxKind[DedentToken](421,1): «dedent»
SyntaxKind[LineTerminatorToken](422,1): «line terminator»
SyntaxKind[Identifier](422,1): SpreadElement
SyntaxKind[OpenBracketToken](422,14): [
SyntaxKind[Identifier](422,15): Yield
SyntaxKind[CloseBracketToken](422,20): ]
SyntaxKind[ColonToken](422,22): :
SyntaxKind[LineTerminatorToken](423,1): «line terminator»
SyntaxKind[IndentToken](423,1): «indent»
SyntaxKind[Terminal](423,2): `...`
SyntaxKind[Identifier](423,8): AssignmentExpression
SyntaxKind[OpenBracketToken](423,28): [
SyntaxKind[Identifier](423,29): In
SyntaxKind[CommaToken](423,31): ,
SyntaxKind[QuestionToken](423,33): ?
SyntaxKind[Identifier](423,34): Yield
SyntaxKind[CloseBracketToken](423,39): ]
SyntaxKind[LineTerminatorToken](424,1): «line terminator»
SyntaxKind[DedentToken](424,1): «dedent»
SyntaxKind[LineTerminatorToken](425,1): «line terminator»
SyntaxKind[Identifier](425,1): ObjectLiteral
SyntaxKind[OpenBracketToken](425,14): [
SyntaxKind[Identifier](425,15): Yield
SyntaxKind[CloseBracketToken](425,20): ]
SyntaxKind[ColonToken](425,22): :
SyntaxKind[LineTerminatorToken](426,1): «line terminator»
SyntaxKind[IndentToken](426,1): «indent»
SyntaxKind[Terminal](426,2): `{`
SyntaxKind[Terminal](426,6): `}`
SyntaxKind[LineTerminatorToken](427,1): «line terminator»
SyntaxKind[Terminal](427,2): `{`
SyntaxKind[Identifier](427,6): PropertyDefinitionList
SyntaxKind[OpenBracketToken](427,28): [
SyntaxKind[QuestionToken](427,29): ?
SyntaxKind[Identifier](427,30): Yield
SyntaxKind[CloseBracketToken](427,35): ]
SyntaxKind[Terminal](427,37): `}`
SyntaxKind[LineTerminatorToken](428,1): «line terminator»
SyntaxKind[Terminal](428,2): `{`
SyntaxKind[Identifier](428,6): PropertyDefinitionList
SyntaxKind[OpenBracketToken](428,28): [
SyntaxKind[QuestionToken](428,29): ?
SyntaxKind[Identifier](428,30): Yield
SyntaxKind[CloseBracketToken](428,35): ]
SyntaxKind[Terminal](428,37): `,`
SyntaxKind[Terminal](428,41): `}`
SyntaxKind[LineTerminatorToken](429,1): «line terminator»
SyntaxKind[DedentToken](429,1): «dedent»
SyntaxKind[LineTerminatorToken](430,1): «line terminator»
SyntaxKind[Identifier](430,1): PropertyDefinitionList
SyntaxKind[OpenBracketToken](430,23): [
SyntaxKind[Identifier](430,24): Yield
SyntaxKind[CloseBracketToken](430,29): ]
SyntaxKind[ColonToken](430,31): :
SyntaxKind[LineTerminatorToken](431,1): «line terminator»
SyntaxKind[IndentToken](431,1): «indent»
SyntaxKind[Identifier](431,2): PropertyDefinition
SyntaxKind[OpenBracketToken](431,20): [
SyntaxKind[QuestionToken](431,21): ?
SyntaxKind[Identifier](431,22): Yield
SyntaxKind[CloseBracketToken](431,27): ]
SyntaxKind[LineTerminatorToken](432,1): «line terminator»
SyntaxKind[Identifier](432,2): PropertyDefinitionList
SyntaxKind[OpenBracketToken](432,24): [
SyntaxKind[QuestionToken](432,25): ?
SyntaxKind[Identifier](432,26): Yield
SyntaxKind[CloseBracketToken](432,31): ]
SyntaxKind[Terminal](432,33): `,`
SyntaxKind[Identifier](432,37): PropertyDefinition
SyntaxKind[OpenBracketToken](432,55): [
SyntaxKind[QuestionToken](432,56): ?
SyntaxKind[Identifier](432,57): Yield
SyntaxKind[CloseBracketToken](432,62): ]
SyntaxKind[LineTerminatorToken](433,1): «line terminator»
SyntaxKind[DedentToken](433,1): «dedent»
SyntaxKind[LineTerminatorToken](434,1): «line terminator»
SyntaxKind[Identifier](434,1): PropertyDefinition
SyntaxKind[OpenBracketToken](434,19): [
SyntaxKind[Identifier](434,20): Yield
SyntaxKind[CloseBracketToken](434,25): ]
SyntaxKind[ColonToken](434,27): :
SyntaxKind[LineTerminatorToken](435,1): «line terminator»
SyntaxKind[IndentToken](435,1): «indent»
SyntaxKind[Identifier](435,2): IdentifierReference
SyntaxKind[OpenBracketToken](435,21): [
SyntaxKind[QuestionToken](435,22): ?
SyntaxKind[Identifier](435,23): Yield
SyntaxKind[CloseBracketToken](435,28): ]
SyntaxKind[LineTerminatorToken](436,1): «line terminator»
SyntaxKind[Identifier](436,2): CoverInitializedName
SyntaxKind[OpenBracketToken](436,22): [
SyntaxKind[QuestionToken](436,23): ?
SyntaxKind[Identifier](436,24): Yield
SyntaxKind[CloseBracketToken](436,29): ]
SyntaxKind[LineTerminatorToken](437,1): «line terminator»
SyntaxKind[Identifier](437,2): PropertyName
SyntaxKind[OpenBracketToken](437,14): [
SyntaxKind[QuestionToken](437,15): ?
SyntaxKind[Identifier](437,16): Yield
SyntaxKind[CloseBracketToken](437,21): ]
SyntaxKind[Terminal](437,23): `:`
SyntaxKind[Identifier](437,27): AssignmentExpression
SyntaxKind[OpenBracketToken](437,47): [
SyntaxKind[Identifier](437,48): In
SyntaxKind[CommaToken](437,50): ,
SyntaxKind[QuestionToken](437,52): ?
SyntaxKind[Identifier](437,53): Yield
SyntaxKind[CloseBracketToken](437,58): ]
SyntaxKind[LineTerminatorToken](438,1): «line terminator»
SyntaxKind[Identifier](438,2): MethodDefinition
SyntaxKind[OpenBracketToken](438,18): [
SyntaxKind[QuestionToken](438,19): ?
SyntaxKind[Identifier](438,20): Yield
SyntaxKind[CloseBracketToken](438,25): ]
SyntaxKind[LineTerminatorToken](439,1): «line terminator»
SyntaxKind[DedentToken](439,1): «dedent»
SyntaxKind[LineTerminatorToken](440,1): «line terminator»
SyntaxKind[Identifier](440,1): PropertyName
SyntaxKind[OpenBracketToken](440,13): [
SyntaxKind[Identifier](440,14): Yield
SyntaxKind[CloseBracketToken](440,19): ]
SyntaxKind[ColonToken](440,21): :
SyntaxKind[LineTerminatorToken](441,1): «line terminator»
SyntaxKind[IndentToken](441,1): «indent»
SyntaxKind[Identifier](441,2): LiteralPropertyName
SyntaxKind[LineTerminatorToken](442,1): «line terminator»
SyntaxKind[Identifier](442,2): ComputedPropertyName
SyntaxKind[OpenBracketToken](442,22): [
SyntaxKind[QuestionToken](442,23): ?
SyntaxKind[Identifier](442,24): Yield
SyntaxKind[CloseBracketToken](442,29): ]
SyntaxKind[LineTerminatorToken](443,1): «line terminator»
SyntaxKind[DedentToken](443,1): «dedent»
SyntaxKind[LineTerminatorToken](444,1): «line terminator»
SyntaxKind[Identifier](444,1): LiteralPropertyName
SyntaxKind[ColonToken](444,21): :
SyntaxKind[LineTerminatorToken](445,1): «line terminator»
SyntaxKind[IndentToken](445,1): «indent»
SyntaxKind[Identifier](445,2): IdentifierName
SyntaxKind[LineTerminatorToken](446,1): «line terminator»
SyntaxKind[Identifier](446,2): StringLiteral
SyntaxKind[LineTerminatorToken](447,1): «line terminator»
SyntaxKind[Identifier](447,2): NumericLiteral
SyntaxKind[LineTerminatorToken](448,1): «line terminator»
SyntaxKind[DedentToken](448,1): «dedent»
SyntaxKind[LineTerminatorToken](449,1): «line terminator»
SyntaxKind[Identifier](449,1): ComputedPropertyName
SyntaxKind[OpenBracketToken](449,21): [
SyntaxKind[Identifier](449,22): Yield
SyntaxKind[CloseBracketToken](449,27): ]
SyntaxKind[ColonToken](449,29): :
SyntaxKind[LineTerminatorToken](450,1): «line terminator»
SyntaxKind[IndentToken](450,1): «indent»
SyntaxKind[Terminal](450,2): `[`
SyntaxKind[Identifier](450,6): AssignmentExpression
SyntaxKind[OpenBracketToken](450,26): [
SyntaxKind[Identifier](450,27): In
SyntaxKind[CommaToken](450,29): ,
SyntaxKind[QuestionToken](450,31): ?
SyntaxKind[Identifier](450,32): Yield
SyntaxKind[CloseBracketToken](450,37): ]
SyntaxKind[Terminal](450,40): `]`
SyntaxKind[LineTerminatorToken](451,1): «line terminator»
SyntaxKind[DedentToken](451,1): «dedent»
SyntaxKind[LineTerminatorToken](452,1): «line terminator»
SyntaxKind[Identifier](452,1): CoverInitializedName
SyntaxKind[OpenBracketToken](452,21): [
SyntaxKind[Identifier](452,22): Yield
SyntaxKind[CloseBracketToken](452,27): ]
SyntaxKind[ColonToken](452,29): :
SyntaxKind[LineTerminatorToken](453,1): «line terminator»
SyntaxKind[IndentToken](453,1): «indent»
SyntaxKind[Identifier](453,2): IdentifierReference
SyntaxKind[OpenBracketToken](453,21): [
SyntaxKind[QuestionToken](453,22): ?
SyntaxKind[Identifier](453,23): Yield
SyntaxKind[CloseBracketToken](453,28): ]
SyntaxKind[Identifier](453,30): Initializer
SyntaxKind[OpenBracketToken](453,41): [
SyntaxKind[Identifier](453,42): In
SyntaxKind[CommaToken](453,44): ,
SyntaxKind[QuestionToken](453,46): ?
SyntaxKind[Identifier](453,47): Yield
SyntaxKind[CloseBracketToken](453,52): ]
SyntaxKind[LineTerminatorToken](454,1): «line terminator»
SyntaxKind[DedentToken](454,1): «dedent»
SyntaxKind[LineTerminatorToken](455,1): «line terminator»
SyntaxKind[Identifier](455,1): Initializer
SyntaxKind[OpenBracketToken](455,12): [
SyntaxKind[Identifier](455,13): In
SyntaxKind[CommaToken](455,15): ,
SyntaxKind[Identifier](455,17): Yield
SyntaxKind[CloseBracketToken](455,22): ]
SyntaxKind[ColonToken](455,24): :
SyntaxKind[LineTerminatorToken](456,1): «line terminator»
SyntaxKind[IndentToken](456,1): «indent»
SyntaxKind[Terminal](456,2): `=`
SyntaxKind[Identifier](456,6): AssignmentExpression
SyntaxKind[OpenBracketToken](456,26): [
SyntaxKind[QuestionToken](456,27): ?
SyntaxKind[Identifier](456,28): In
SyntaxKind[CommaToken](456,30): ,
SyntaxKind[QuestionToken](456,32): ?
SyntaxKind[Identifier](456,33): Yield
SyntaxKind[CloseBracketToken](456,38): ]
SyntaxKind[LineTerminatorToken](457,1): «line terminator»
SyntaxKind[DedentToken](457,1): «dedent»
SyntaxKind[LineTerminatorToken](458,1): «line terminator»
SyntaxKind[Identifier](458,1): TemplateLiteral
SyntaxKind[OpenBracketToken](458,16): [
SyntaxKind[Identifier](458,17): Yield
SyntaxKind[CloseBracketToken](458,22): ]
SyntaxKind[ColonToken](458,24): :
SyntaxKind[LineTerminatorToken](459,1): «line terminator»
SyntaxKind[IndentToken](459,1): «indent»
SyntaxKind[Identifier](459,2): NoSubstitutionTemplate
SyntaxKind[LineTerminatorToken](460,1): «line terminator»
SyntaxKind[Identifier](460,2): TemplateHead
SyntaxKind[Identifier](460,15): Expression
SyntaxKind[OpenBracketToken](460,25): [
SyntaxKind[Identifier](460,26): In
SyntaxKind[CommaToken](460,28): ,
SyntaxKind[QuestionToken](460,30): ?
SyntaxKind[Identifier](460,31): Yield
SyntaxKind[CloseBracketToken](460,36): ]
SyntaxKind[Identifier](460,38): TemplateSpans
SyntaxKind[OpenBracketToken](460,51): [
SyntaxKind[QuestionToken](460,52): ?
SyntaxKind[Identifier](460,53): Yield
SyntaxKind[CloseBracketToken](460,58): ]
SyntaxKind[LineTerminatorToken](461,1): «line terminator»
SyntaxKind[DedentToken](461,1): «dedent»
SyntaxKind[LineTerminatorToken](462,1): «line terminator»
SyntaxKind[Identifier](462,1): TemplateSpans
SyntaxKind[OpenBracketToken](462,14): [
SyntaxKind[Identifier](462,15): Yield
SyntaxKind[CloseBracketToken](462,20): ]
SyntaxKind[ColonToken](462,22): :
SyntaxKind[LineTerminatorToken](463,1): «line terminator»
SyntaxKind[IndentToken](463,1): «indent»
SyntaxKind[Identifier](463,2): TemplateTail
SyntaxKind[LineTerminatorToken](464,1): «line terminator»
SyntaxKind[Identifier](464,2): TemplateMiddleList
SyntaxKind[OpenBracketToken](464,20): [
SyntaxKind[QuestionToken](464,21): ?
SyntaxKind[Identifier](464,22): Yield
SyntaxKind[CloseBracketToken](464,27): ]
SyntaxKind[Identifier](464,29): TemplateTail
SyntaxKind[LineTerminatorToken](465,1): «line terminator»
SyntaxKind[DedentToken](465,1): «dedent»
SyntaxKind[LineTerminatorToken](466,1): «line terminator»
SyntaxKind[Identifier](466,1): TemplateMiddleList
SyntaxKind[OpenBracketToken](466,19): [
SyntaxKind[Identifier](466,20): Yield
SyntaxKind[CloseBracketToken](466,25): ]
SyntaxKind[ColonToken](466,27): :
SyntaxKind[LineTerminatorToken](467,1): «line terminator»
SyntaxKind[IndentToken](467,1): «indent»
SyntaxKind[Identifier](467,2): TemplateMiddle
SyntaxKind[Identifier](467,18): Expression
SyntaxKind[OpenBracketToken](467,28): [
SyntaxKind[Identifier](467,29): In
SyntaxKind[CommaToken](467,31): ,
SyntaxKind[QuestionToken](467,33): ?
SyntaxKind[Identifier](467,34): Yield
SyntaxKind[CloseBracketToken](467,39): ]
SyntaxKind[LineTerminatorToken](468,1): «line terminator»
SyntaxKind[Identifier](468,2): TemplateMiddleList
SyntaxKind[OpenBracketToken](468,20): [
SyntaxKind[QuestionToken](468,21): ?
SyntaxKind[Identifier](468,22): Yield
SyntaxKind[CloseBracketToken](468,27): ]
SyntaxKind[Identifier](468,30): TemplateMiddle
SyntaxKind[Identifier](468,46): Expression
SyntaxKind[OpenBracketToken](468,56): [
SyntaxKind[Identifier](468,57): In
SyntaxKind[CommaToken](468,59): ,
SyntaxKind[QuestionToken](468,61): ?
SyntaxKind[Identifier](468,62): Yield
SyntaxKind[CloseBracketToken](468,67): ]
SyntaxKind[LineTerminatorToken](469,1): «line terminator»
SyntaxKind[DedentToken](469,1): «dedent»
SyntaxKind[LineTerminatorToken](470,1): «line terminator»
SyntaxKind[Identifier](470,1): MemberExpression
SyntaxKind[OpenBracketToken](470,17): [
SyntaxKind[Identifier](470,18): Yield
SyntaxKind[CloseBracketToken](470,23): ]
SyntaxKind[ColonToken](470,25): :
SyntaxKind[LineTerminatorToken](471,1): «line terminator»
SyntaxKind[IndentToken](471,1): «indent»
SyntaxKind[Identifier](471,2): PrimaryExpression
SyntaxKind[OpenBracketToken](471,19): [
SyntaxKind[QuestionToken](471,20): ?
SyntaxKind[Identifier](471,21): Yield
SyntaxKind[CloseBracketToken](471,26): ]
SyntaxKind[LineTerminatorToken](472,1): «line terminator»
SyntaxKind[Identifier](472,2): MemberExpression
SyntaxKind[OpenBracketToken](472,18): [
SyntaxKind[QuestionToken](472,19): ?
SyntaxKind[Identifier](472,20): Yield
SyntaxKind[CloseBracketToken](472,25): ]
SyntaxKind[Terminal](472,27): `[`
SyntaxKind[Identifier](472,31): Expression
SyntaxKind[OpenBracketToken](472,41): [
SyntaxKind[Identifier](472,42): In
SyntaxKind[CommaToken](472,44): ,
SyntaxKind[QuestionToken](472,46): ?
SyntaxKind[Identifier](472,47): Yield
SyntaxKind[CloseBracketToken](472,52): ]
SyntaxKind[Terminal](472,54): `]`
SyntaxKind[LineTerminatorToken](473,1): «line terminator»
SyntaxKind[Identifier](473,2): MemberExpression
SyntaxKind[OpenBracketToken](473,18): [
SyntaxKind[QuestionToken](473,19): ?
SyntaxKind[Identifier](473,20): Yield
SyntaxKind[CloseBracketToken](473,25): ]
SyntaxKind[Terminal](473,27): `.`
SyntaxKind[Identifier](473,31): IdentifierName
SyntaxKind[LineTerminatorToken](474,1): «line terminator»
SyntaxKind[Identifier](474,2): MemberExpression
SyntaxKind[OpenBracketToken](474,18): [
SyntaxKind[QuestionToken](474,19): ?
SyntaxKind[Identifier](474,20): Yield
SyntaxKind[CloseBracketToken](474,25): ]
SyntaxKind[Identifier](474,27): TemplateLiteral
SyntaxKind[OpenBracketToken](474,42): [
SyntaxKind[QuestionToken](474,43): ?
SyntaxKind[Identifier](474,44): Yield
SyntaxKind[CloseBracketToken](474,49): ]
SyntaxKind[LineTerminatorToken](475,1): «line terminator»
SyntaxKind[Identifier](475,2): SuperProperty
SyntaxKind[OpenBracketToken](475,15): [
SyntaxKind[QuestionToken](475,16): ?
SyntaxKind[Identifier](475,17): Yield
SyntaxKind[CloseBracketToken](475,22): ]
SyntaxKind[LineTerminatorToken](476,1): «line terminator»
SyntaxKind[Identifier](476,2): MetaProperty
SyntaxKind[LineTerminatorToken](477,1): «line terminator»
SyntaxKind[Terminal](477,2): `new`
SyntaxKind[Identifier](477,8): MemberExpression
SyntaxKind[OpenBracketToken](477,24): [
SyntaxKind[QuestionToken](477,25): ?
SyntaxKind[Identifier](477,26): Yield
SyntaxKind[CloseBracketToken](477,31): ]
SyntaxKind[Identifier](477,33): Arguments
SyntaxKind[OpenBracketToken](477,42): [
SyntaxKind[QuestionToken](477,43): ?
SyntaxKind[Identifier](477,44): Yield
SyntaxKind[CloseBracketToken](477,49): ]
SyntaxKind[LineTerminatorToken](478,1): «line terminator»
SyntaxKind[DedentToken](478,1): «dedent»
SyntaxKind[LineTerminatorToken](479,1): «line terminator»
SyntaxKind[Identifier](479,1): SuperProperty
SyntaxKind[OpenBracketToken](479,14): [
SyntaxKind[Identifier](479,15): Yield
SyntaxKind[CloseBracketToken](479,20): ]
SyntaxKind[ColonToken](479,22): :
SyntaxKind[LineTerminatorToken](480,1): «line terminator»
SyntaxKind[IndentToken](480,1): «indent»
SyntaxKind[Terminal](480,2): `super`
SyntaxKind[Terminal](480,10): `[`
SyntaxKind[Identifier](480,14): Expression
SyntaxKind[OpenBracketToken](480,24): [
SyntaxKind[Identifier](480,25): In
SyntaxKind[CommaToken](480,27): ,
SyntaxKind[QuestionToken](480,29): ?
SyntaxKind[Identifier](480,30): Yield
SyntaxKind[CloseBracketToken](480,35): ]
SyntaxKind[Terminal](480,37): `]`
SyntaxKind[LineTerminatorToken](481,1): «line terminator»
SyntaxKind[Terminal](481,2): `super`
SyntaxKind[Terminal](481,10): `.`
SyntaxKind[Identifier](481,14): IdentifierName
SyntaxKind[LineTerminatorToken](482,1): «line terminator»
SyntaxKind[DedentToken](482,1): «dedent»
SyntaxKind[LineTerminatorToken](483,1): «line terminator»
SyntaxKind[Identifier](483,1): MetaProperty
SyntaxKind[ColonToken](483,14): :
SyntaxKind[LineTerminatorToken](484,1): «line terminator»
SyntaxKind[IndentToken](484,1): «indent»
SyntaxKind[Identifier](484,2): NewTarget
SyntaxKind[LineTerminatorToken](485,1): «line terminator»
SyntaxKind[DedentToken](485,1): «dedent»
SyntaxKind[LineTerminatorToken](486,1): «line terminator»
SyntaxKind[Identifier](486,1): NewTarget
SyntaxKind[ColonToken](486,11): :
SyntaxKind[LineTerminatorToken](487,1): «line terminator»
SyntaxKind[IndentToken](487,1): «indent»
SyntaxKind[Terminal](487,2): `new`
SyntaxKind[Terminal](487,8): `.`
SyntaxKind[Terminal](487,12): `target`
SyntaxKind[LineTerminatorToken](488,1): «line terminator»
SyntaxKind[DedentToken](488,1): «dedent»
SyntaxKind[LineTerminatorToken](489,1): «line terminator»
SyntaxKind[Identifier](489,1): NewExpression
SyntaxKind[OpenBracketToken](489,14): [
SyntaxKind[Identifier](489,15): Yield
SyntaxKind[CloseBracketToken](489,20): ]
SyntaxKind[ColonToken](489,22): :
SyntaxKind[LineTerminatorToken](490,1): «line terminator»
SyntaxKind[IndentToken](490,1): «indent»
SyntaxKind[Identifier](490,2): MemberExpression
SyntaxKind[OpenBracketToken](490,18): [
SyntaxKind[QuestionToken](490,19): ?
SyntaxKind[Identifier](490,20): Yield
SyntaxKind[CloseBracketToken](490,25): ]
SyntaxKind[LineTerminatorToken](491,1): «line terminator»
SyntaxKind[Terminal](491,2): `new`
SyntaxKind[Identifier](491,8): NewExpression
SyntaxKind[OpenBracketToken](491,21): [
SyntaxKind[QuestionToken](491,22): ?
SyntaxKind[Identifier](491,23): Yield
SyntaxKind[CloseBracketToken](491,28): ]
SyntaxKind[LineTerminatorToken](492,1): «line terminator»
SyntaxKind[DedentToken](492,1): «dedent»
SyntaxKind[LineTerminatorToken](493,1): «line terminator»
SyntaxKind[Identifier](493,1): CallExpression
SyntaxKind[OpenBracketToken](493,15): [
SyntaxKind[Identifier](493,16): Yield
SyntaxKind[CloseBracketToken](493,21): ]
SyntaxKind[ColonToken](493,23): :
SyntaxKind[LineTerminatorToken](494,1): «line terminator»
SyntaxKind[IndentToken](494,1): «indent»
SyntaxKind[Identifier](494,2): MemberExpression
SyntaxKind[OpenBracketToken](494,18): [
SyntaxKind[QuestionToken](494,19): ?
SyntaxKind[Identifier](494,20): Yield
SyntaxKind[CloseBracketToken](494,25): ]
SyntaxKind[Identifier](494,27): Arguments
SyntaxKind[OpenBracketToken](494,36): [
SyntaxKind[QuestionToken](494,37): ?
SyntaxKind[Identifier](494,38): Yield
SyntaxKind[CloseBracketToken](494,43): ]
SyntaxKind[LineTerminatorToken](495,1): «line terminator»
SyntaxKind[Identifier](495,2): SuperCall
SyntaxKind[OpenBracketToken](495,11): [
SyntaxKind[QuestionToken](495,12): ?
SyntaxKind[Identifier](495,13): Yield
SyntaxKind[CloseBracketToken](495,18): ]
SyntaxKind[LineTerminatorToken](496,1): «line terminator»
SyntaxKind[Identifier](496,2): CallExpression
SyntaxKind[OpenBracketToken](496,16): [
SyntaxKind[QuestionToken](496,17): ?
SyntaxKind[Identifier](496,18): Yield
SyntaxKind[CloseBracketToken](496,23): ]
SyntaxKind[Identifier](496,25): Arguments
SyntaxKind[OpenBracketToken](496,34): [
SyntaxKind[QuestionToken](496,35): ?
SyntaxKind[Identifier](496,36): Yield
SyntaxKind[CloseBracketToken](496,41): ]
SyntaxKind[LineTerminatorToken](497,1): «line terminator»
SyntaxKind[Identifier](497,2): CallExpression
SyntaxKind[OpenBracketToken](497,16): [
SyntaxKind[QuestionToken](497,17): ?
SyntaxKind[Identifier](497,18): Yield
SyntaxKind[CloseBracketToken](497,23): ]
SyntaxKind[Terminal](497,25): `[`
SyntaxKind[Identifier](497,29): Expression
SyntaxKind[OpenBracketToken](497,39): [
SyntaxKind[Identifier](497,40): In
SyntaxKind[CommaToken](497,42): ,
SyntaxKind[QuestionToken](497,44): ?
SyntaxKind[Identifier](497,45): Yield
SyntaxKind[CloseBracketToken](497,50): ]
SyntaxKind[Terminal](497,52): `]`
SyntaxKind[LineTerminatorToken](498,1): «line terminator»
SyntaxKind[Identifier](498,2): CallExpression
SyntaxKind[OpenBracketToken](498,16): [
SyntaxKind[QuestionToken](498,17): ?
SyntaxKind[Identifier](498,18): Yield
SyntaxKind[CloseBracketToken](498,23): ]
SyntaxKind[Terminal](498,25): `.`
SyntaxKind[Identifier](498,29): IdentifierName
SyntaxKind[LineTerminatorToken](499,1): «line terminator»
SyntaxKind[Identifier](499,2): CallExpression
SyntaxKind[OpenBracketToken](499,16): [
SyntaxKind[QuestionToken](499,17): ?
SyntaxKind[Identifier](499,18): Yield
SyntaxKind[CloseBracketToken](499,23): ]
SyntaxKind[Identifier](499,25): TemplateLiteral
SyntaxKind[OpenBracketToken](499,40): [
SyntaxKind[QuestionToken](499,41): ?
SyntaxKind[Identifier](499,42): Yield
SyntaxKind[CloseBracketToken](499,47): ]
SyntaxKind[LineTerminatorToken](500,1): «line terminator»
SyntaxKind[DedentToken](500,1): «dedent»
SyntaxKind[LineTerminatorToken](501,1): «line terminator»
SyntaxKind[Identifier](501,1): SuperCall
SyntaxKind[OpenBracketToken](501,10): [
SyntaxKind[Identifier](501,11): Yield
SyntaxKind[CloseBracketToken](501,16): ]
SyntaxKind[ColonToken](501,18): :
SyntaxKind[LineTerminatorToken](502,1): «line terminator»
SyntaxKind[IndentToken](502,1): «indent»
SyntaxKind[Terminal](502,2): `super`
SyntaxKind[Identifier](502,10): Arguments
SyntaxKind[OpenBracketToken](502,19): [
SyntaxKind[QuestionToken](502,20): ?
SyntaxKind[Identifier](502,21): Yield
SyntaxKind[CloseBracketToken](502,26): ]
SyntaxKind[LineTerminatorToken](503,1): «line terminator»
SyntaxKind[DedentToken](503,1): «dedent»
SyntaxKind[LineTerminatorToken](504,1): «line terminator»
SyntaxKind[Identifier](504,1): Arguments
SyntaxKind[OpenBracketToken](504,10): [
SyntaxKind[Identifier](504,11): Yield
SyntaxKind[CloseBracketToken](504,16): ]
SyntaxKind[ColonToken](504,18): :
SyntaxKind[LineTerminatorToken](505,1): «line terminator»
SyntaxKind[IndentToken](505,1): «indent»
SyntaxKind[Terminal](505,2): `(`
SyntaxKind[Terminal](505,6): `)`
SyntaxKind[LineTerminatorToken](506,1): «line terminator»
SyntaxKind[Terminal](506,2): `(`
SyntaxKind[Identifier](506,6): ArgumentList
SyntaxKind[OpenBracketToken](506,18): [
SyntaxKind[QuestionToken](506,19): ?
SyntaxKind[Identifier](506,20): Yield
SyntaxKind[CloseBracketToken](506,25): ]
SyntaxKind[Terminal](506,28): `)`
SyntaxKind[LineTerminatorToken](507,1): «line terminator»
SyntaxKind[DedentToken](507,1): «dedent»
SyntaxKind[LineTerminatorToken](508,1): «line terminator»
SyntaxKind[Identifier](508,1): ArgumentList
SyntaxKind[OpenBracketToken](508,13): [
SyntaxKind[Identifier](508,14): Yield
SyntaxKind[CloseBracketToken](508,19): ]
SyntaxKind[ColonToken](508,21): :
SyntaxKind[LineTerminatorToken](509,1): «line terminator»
SyntaxKind[IndentToken](509,1): «indent»
SyntaxKind[Identifier](509,2): AssignmentExpression
SyntaxKind[OpenBracketToken](509,22): [
SyntaxKind[Identifier](509,23): In
SyntaxKind[CommaToken](509,25): ,
SyntaxKind[QuestionToken](509,27): ?
SyntaxKind[Identifier](509,28): Yield
SyntaxKind[CloseBracketToken](509,33): ]
SyntaxKind[LineTerminatorToken](510,1): «line terminator»
SyntaxKind[Terminal](510,2): `...`
SyntaxKind[Identifier](510,8): AssignmentExpression
SyntaxKind[OpenBracketToken](510,28): [
SyntaxKind[Identifier](510,29): In
SyntaxKind[CommaToken](510,31): ,
SyntaxKind[QuestionToken](510,33): ?
SyntaxKind[Identifier](510,34): Yield
SyntaxKind[CloseBracketToken](510,39): ]
SyntaxKind[LineTerminatorToken](511,1): «line terminator»
SyntaxKind[Identifier](511,2): ArgumentList
SyntaxKind[OpenBracketToken](511,14): [
SyntaxKind[QuestionToken](511,15): ?
SyntaxKind[Identifier](511,16): Yield
SyntaxKind[CloseBracketToken](511,21): ]
SyntaxKind[Terminal](511,23): `,`
SyntaxKind[Identifier](511,27): AssignmentExpression
SyntaxKind[OpenBracketToken](511,47): [
SyntaxKind[Identifier](511,48): In
SyntaxKind[CommaToken](511,50): ,
SyntaxKind[QuestionToken](511,52): ?
SyntaxKind[Identifier](511,53): Yield
SyntaxKind[CloseBracketToken](511,58): ]
SyntaxKind[LineTerminatorToken](512,1): «line terminator»
SyntaxKind[Identifier](512,2): ArgumentList
SyntaxKind[OpenBracketToken](512,14): [
SyntaxKind[QuestionToken](512,15): ?
SyntaxKind[Identifier](512,16): Yield
SyntaxKind[CloseBracketToken](512,21): ]
SyntaxKind[Terminal](512,23): `,`
SyntaxKind[Terminal](512,27): `...`
SyntaxKind[Identifier](512,33): AssignmentExpression
SyntaxKind[OpenBracketToken](512,53): [
SyntaxKind[Identifier](512,54): In
SyntaxKind[CommaToken](512,56): ,
SyntaxKind[QuestionToken](512,58): ?
SyntaxKind[Identifier](512,59): Yield
SyntaxKind[CloseBracketToken](512,64): ]
SyntaxKind[LineTerminatorToken](513,1): «line terminator»
SyntaxKind[DedentToken](513,1): «dedent»
SyntaxKind[LineTerminatorToken](514,1): «line terminator»
SyntaxKind[Identifier](514,1): LeftHandSideExpression
SyntaxKind[OpenBracketToken](514,23): [
SyntaxKind[Identifier](514,24): Yield
SyntaxKind[CloseBracketToken](514,29): ]
SyntaxKind[ColonToken](514,31): :
SyntaxKind[LineTerminatorToken](515,1): «line terminator»
SyntaxKind[IndentToken](515,1): «indent»
SyntaxKind[Identifier](515,2): NewExpression
SyntaxKind[OpenBracketToken](515,15): [
SyntaxKind[QuestionToken](515,16): ?
SyntaxKind[Identifier](515,17): Yield
SyntaxKind[CloseBracketToken](515,22): ]
SyntaxKind[LineTerminatorToken](516,1): «line terminator»
SyntaxKind[Identifier](516,2): CallExpression
SyntaxKind[OpenBracketToken](516,16): [
SyntaxKind[QuestionToken](516,17): ?
SyntaxKind[Identifier](516,18): Yield
SyntaxKind[CloseBracketToken](516,23): ]
SyntaxKind[LineTerminatorToken](517,1): «line terminator»
SyntaxKind[DedentToken](517,1): «dedent»
SyntaxKind[LineTerminatorToken](518,1): «line terminator»
SyntaxKind[Identifier](518,1): PostfixExpression
SyntaxKind[OpenBracketToken](518,18): [
SyntaxKind[Identifier](518,19): Yield
SyntaxKind[CloseBracketToken](518,24): ]
SyntaxKind[ColonToken](518,26): :
SyntaxKind[LineTerminatorToken](519,1): «line terminator»
SyntaxKind[IndentToken](519,1): «indent»
SyntaxKind[Identifier](519,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](519,24): [
SyntaxKind[QuestionToken](519,25): ?
SyntaxKind[Identifier](519,26): Yield
SyntaxKind[CloseBracketToken](519,31): ]
SyntaxKind[LineTerminatorToken](520,1): «line terminator»
SyntaxKind[Identifier](520,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](520,24): [
SyntaxKind[QuestionToken](520,25): ?
SyntaxKind[Identifier](520,26): Yield
SyntaxKind[CloseBracketToken](520,31): ]
SyntaxKind[OpenBracketToken](520,33): [
SyntaxKind[NoKeyword](520,34): no
SyntaxKind[Identifier](520,37): LineTerminator
SyntaxKind[HereKeyword](520,52): here
SyntaxKind[CloseBracketToken](520,56): ]
SyntaxKind[Terminal](520,58): `++`
SyntaxKind[LineTerminatorToken](521,1): «line terminator»
SyntaxKind[Identifier](521,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](521,24): [
SyntaxKind[QuestionToken](521,25): ?
SyntaxKind[Identifier](521,26): Yield
SyntaxKind[CloseBracketToken](521,31): ]
SyntaxKind[OpenBracketToken](521,33): [
SyntaxKind[NoKeyword](521,34): no
SyntaxKind[Identifier](521,37): LineTerminator
SyntaxKind[HereKeyword](521,52): here
SyntaxKind[CloseBracketToken](521,56): ]
SyntaxKind[Terminal](521,58): `--`
SyntaxKind[LineTerminatorToken](522,1): «line terminator»
SyntaxKind[DedentToken](522,1): «dedent»
SyntaxKind[LineTerminatorToken](523,1): «line terminator»
SyntaxKind[Identifier](523,1): UnaryExpression
SyntaxKind[OpenBracketToken](523,16): [
SyntaxKind[Identifier](523,17): Yield
SyntaxKind[CloseBracketToken](523,22): ]
SyntaxKind[ColonToken](523,24): :
SyntaxKind[LineTerminatorToken](524,1): «line terminator»
SyntaxKind[IndentToken](524,1): «indent»
SyntaxKind[Identifier](524,2): PostfixExpression
SyntaxKind[OpenBracketToken](524,19): [
SyntaxKind[QuestionToken](524,20): ?
SyntaxKind[Identifier](524,21): Yield
SyntaxKind[CloseBracketToken](524,26): ]
SyntaxKind[LineTerminatorToken](525,1): «line terminator»
SyntaxKind[Terminal](525,2): `delete`
SyntaxKind[Identifier](525,11): UnaryExpression
SyntaxKind[OpenBracketToken](525,26): [
SyntaxKind[QuestionToken](525,27): ?
SyntaxKind[Identifier](525,28): Yield
SyntaxKind[CloseBracketToken](525,33): ]
SyntaxKind[LineTerminatorToken](526,1): «line terminator»
SyntaxKind[Terminal](526,2): `void`
SyntaxKind[Identifier](526,9): UnaryExpression
SyntaxKind[OpenBracketToken](526,24): [
SyntaxKind[QuestionToken](526,25): ?
SyntaxKind[Identifier](526,26): Yield
SyntaxKind[CloseBracketToken](526,31): ]
SyntaxKind[LineTerminatorToken](527,1): «line terminator»
SyntaxKind[Terminal](527,2): `typeof`
SyntaxKind[Identifier](527,11): UnaryExpression
SyntaxKind[OpenBracketToken](527,26): [
SyntaxKind[QuestionToken](527,27): ?
SyntaxKind[Identifier](527,28): Yield
SyntaxKind[CloseBracketToken](527,33): ]
SyntaxKind[LineTerminatorToken](528,1): «line terminator»
SyntaxKind[Terminal](528,2): `++`
SyntaxKind[Identifier](528,7): UnaryExpression
SyntaxKind[OpenBracketToken](528,22): [
SyntaxKind[QuestionToken](528,23): ?
SyntaxKind[Identifier](528,24): Yield
SyntaxKind[CloseBracketToken](528,29): ]
SyntaxKind[LineTerminatorToken](529,1): «line terminator»
SyntaxKind[Terminal](529,2): `--`
SyntaxKind[Identifier](529,7): UnaryExpression
SyntaxKind[OpenBracketToken](529,22): [
SyntaxKind[QuestionToken](529,23): ?
SyntaxKind[Identifier](529,24): Yield
SyntaxKind[CloseBracketToken](529,29): ]
SyntaxKind[LineTerminatorToken](530,1): «line terminator»
SyntaxKind[Terminal](530,2): `+`
SyntaxKind[Identifier](530,6): UnaryExpression
SyntaxKind[OpenBracketToken](530,21): [
SyntaxKind[QuestionToken](530,22): ?
SyntaxKind[Identifier](530,23): Yield
SyntaxKind[CloseBracketToken](530,28): ]
SyntaxKind[LineTerminatorToken](531,1): «line terminator»
SyntaxKind[Terminal](531,2): `-`
SyntaxKind[Identifier](531,6): UnaryExpression
SyntaxKind[OpenBracketToken](531,21): [
SyntaxKind[QuestionToken](531,22): ?
SyntaxKind[Identifier](531,23): Yield
SyntaxKind[CloseBracketToken](531,28): ]
SyntaxKind[LineTerminatorToken](532,1): «line terminator»
SyntaxKind[Terminal](532,2): `~`
SyntaxKind[Identifier](532,6): UnaryExpression
SyntaxKind[OpenBracketToken](532,21): [
SyntaxKind[QuestionToken](532,22): ?
SyntaxKind[Identifier](532,23): Yield
SyntaxKind[CloseBracketToken](532,28): ]
SyntaxKind[LineTerminatorToken](533,1): «line terminator»
SyntaxKind[Terminal](533,2): `!`
SyntaxKind[Identifier](533,6): UnaryExpression
SyntaxKind[OpenBracketToken](533,21): [
SyntaxKind[QuestionToken](533,22): ?
SyntaxKind[Identifier](533,23): Yield
SyntaxKind[CloseBracketToken](533,28): ]
SyntaxKind[LineTerminatorToken](534,1): «line terminator»
SyntaxKind[DedentToken](534,1): «dedent»
SyntaxKind[LineTerminatorToken](535,1): «line terminator»
SyntaxKind[Identifier](535,1): MultiplicativeExpression
SyntaxKind[OpenBracketToken](535,25): [
SyntaxKind[Identifier](535,26): Yield
SyntaxKind[CloseBracketToken](535,31): ]
SyntaxKind[ColonToken](535,33): :
SyntaxKind[LineTerminatorToken](536,1): «line terminator»
SyntaxKind[IndentToken](536,1): «indent»
SyntaxKind[Identifier](536,2): UnaryExpression
SyntaxKind[OpenBracketToken](536,17): [
SyntaxKind[QuestionToken](536,18): ?
SyntaxKind[Identifier](536,19): Yield
SyntaxKind[CloseBracketToken](536,24): ]
SyntaxKind[LineTerminatorToken](537,1): «line terminator»
SyntaxKind[Identifier](537,2): MultiplicativeExpression
SyntaxKind[OpenBracketToken](537,26): [
SyntaxKind[QuestionToken](537,27): ?
SyntaxKind[Identifier](537,28): Yield
SyntaxKind[CloseBracketToken](537,33): ]
SyntaxKind[Identifier](537,35): MultiplicativeOperator
SyntaxKind[Identifier](537,58): UnaryExpression
SyntaxKind[OpenBracketToken](537,73): [
SyntaxKind[QuestionToken](537,74): ?
SyntaxKind[Identifier](537,75): Yield
SyntaxKind[CloseBracketToken](537,80): ]
SyntaxKind[LineTerminatorToken](538,1): «line terminator»
SyntaxKind[DedentToken](538,1): «dedent»
SyntaxKind[LineTerminatorToken](539,1): «line terminator»
SyntaxKind[Identifier](539,1): MultiplicativeOperator
SyntaxKind[ColonToken](539,24): :
SyntaxKind[OneKeyword](539,26): one
SyntaxKind[OfKeyword](539,30): of
SyntaxKind[LineTerminatorToken](540,1): «line terminator»
SyntaxKind[IndentToken](540,1): «indent»
SyntaxKind[Terminal](540,2): `*`
SyntaxKind[Terminal](540,6): `/`
SyntaxKind[Terminal](540,10): `%`
SyntaxKind[LineTerminatorToken](541,1): «line terminator»
SyntaxKind[DedentToken](541,1): «dedent»
SyntaxKind[LineTerminatorToken](542,1): «line terminator»
SyntaxKind[Identifier](542,1): AdditiveExpression
SyntaxKind[OpenBracketToken](542,19): [
SyntaxKind[Identifier](542,20): Yield
SyntaxKind[CloseBracketToken](542,25): ]
SyntaxKind[ColonToken](542,27): :
SyntaxKind[LineTerminatorToken](543,1): «line terminator»
SyntaxKind[IndentToken](543,1): «indent»
SyntaxKind[Identifier](543,2): MultiplicativeExpression
SyntaxKind[OpenBracketToken](543,26): [
SyntaxKind[QuestionToken](543,27): ?
SyntaxKind[Identifier](543,28): Yield
SyntaxKind[CloseBracketToken](543,33): ]
SyntaxKind[LineTerminatorToken](544,1): «line terminator»
SyntaxKind[Identifier](544,2): AdditiveExpression
SyntaxKind[OpenBracketToken](544,20): [
SyntaxKind[QuestionToken](544,21): ?
SyntaxKind[Identifier](544,22): Yield
SyntaxKind[CloseBracketToken](544,27): ]
SyntaxKind[Terminal](544,29): `+`
SyntaxKind[Identifier](544,33): MultiplicativeExpression
SyntaxKind[OpenBracketToken](544,57): [
SyntaxKind[QuestionToken](544,58): ?
SyntaxKind[Identifier](544,59): Yield
SyntaxKind[CloseBracketToken](544,64): ]
SyntaxKind[LineTerminatorToken](545,1): «line terminator»
SyntaxKind[Identifier](545,2): AdditiveExpression
SyntaxKind[OpenBracketToken](545,20): [
SyntaxKind[QuestionToken](545,21): ?
SyntaxKind[Identifier](545,22): Yield
SyntaxKind[CloseBracketToken](545,27): ]
SyntaxKind[Terminal](545,29): `-`
SyntaxKind[Identifier](545,33): MultiplicativeExpression
SyntaxKind[OpenBracketToken](545,57): [
SyntaxKind[QuestionToken](545,58): ?
SyntaxKind[Identifier](545,59): Yield
SyntaxKind[CloseBracketToken](545,64): ]
SyntaxKind[LineTerminatorToken](546,1): «line terminator»
SyntaxKind[DedentToken](546,1): «dedent»
SyntaxKind[LineTerminatorToken](547,1): «line terminator»
SyntaxKind[Identifier](547,1): ShiftExpression
SyntaxKind[OpenBracketToken](547,16): [
SyntaxKind[Identifier](547,17): Yield
SyntaxKind[CloseBracketToken](547,22): ]
SyntaxKind[ColonToken](547,24): :
SyntaxKind[LineTerminatorToken](548,1): «line terminator»
SyntaxKind[IndentToken](548,1): «indent»
SyntaxKind[Identifier](548,2): AdditiveExpression
SyntaxKind[OpenBracketToken](548,20): [
SyntaxKind[QuestionToken](548,21): ?
SyntaxKind[Identifier](548,22): Yield
SyntaxKind[CloseBracketToken](548,27): ]
SyntaxKind[LineTerminatorToken](549,1): «line terminator»
SyntaxKind[Identifier](549,2): ShiftExpression
SyntaxKind[OpenBracketToken](549,17): [
SyntaxKind[QuestionToken](549,18): ?
SyntaxKind[Identifier](549,19): Yield
SyntaxKind[CloseBracketToken](549,24): ]
SyntaxKind[Terminal](549,26): `<<`
SyntaxKind[Identifier](549,31): AdditiveExpression
SyntaxKind[OpenBracketToken](549,49): [
SyntaxKind[QuestionToken](549,50): ?
SyntaxKind[Identifier](549,51): Yield
SyntaxKind[CloseBracketToken](549,56): ]
SyntaxKind[LineTerminatorToken](550,1): «line terminator»
SyntaxKind[Identifier](550,2): ShiftExpression
SyntaxKind[OpenBracketToken](550,17): [
SyntaxKind[QuestionToken](550,18): ?
SyntaxKind[Identifier](550,19): Yield
SyntaxKind[CloseBracketToken](550,24): ]
SyntaxKind[Terminal](550,26): `>>`
SyntaxKind[Identifier](550,31): AdditiveExpression
SyntaxKind[OpenBracketToken](550,49): [
SyntaxKind[QuestionToken](550,50): ?
SyntaxKind[Identifier](550,51): Yield
SyntaxKind[CloseBracketToken](550,56): ]
SyntaxKind[LineTerminatorToken](551,1): «line terminator»
SyntaxKind[Identifier](551,2): ShiftExpression
SyntaxKind[OpenBracketToken](551,17): [
SyntaxKind[QuestionToken](551,18): ?
SyntaxKind[Identifier](551,19): Yield
SyntaxKind[CloseBracketToken](551,24): ]
SyntaxKind[Terminal](551,26): `>>>`
SyntaxKind[Identifier](551,32): AdditiveExpression
SyntaxKind[OpenBracketToken](551,50): [
SyntaxKind[QuestionToken](551,51): ?
SyntaxKind[Identifier](551,52): Yield
SyntaxKind[CloseBracketToken](551,57): ]
SyntaxKind[LineTerminatorToken](552,1): «line terminator»
SyntaxKind[DedentToken](552,1): «dedent»
SyntaxKind[LineTerminatorToken](553,1): «line terminator»
SyntaxKind[Identifier](553,1): RelationalExpression
SyntaxKind[OpenBracketToken](553,21): [
SyntaxKind[Identifier](553,22): In
SyntaxKind[CommaToken](553,24): ,
SyntaxKind[Identifier](553,26): Yield
SyntaxKind[CloseBracketToken](553,31): ]
SyntaxKind[ColonToken](553,33): :
SyntaxKind[LineTerminatorToken](554,1): «line terminator»
SyntaxKind[IndentToken](554,1): «indent»
SyntaxKind[Identifier](554,2): ShiftExpression
SyntaxKind[OpenBracketToken](554,17): [
SyntaxKind[QuestionToken](554,18): ?
SyntaxKind[Identifier](554,19): Yield
SyntaxKind[CloseBracketToken](554,24): ]
SyntaxKind[LineTerminatorToken](555,1): «line terminator»
SyntaxKind[Identifier](555,2): RelationalExpression
SyntaxKind[OpenBracketToken](555,22): [
SyntaxKind[QuestionToken](555,23): ?
SyntaxKind[Identifier](555,24): In
SyntaxKind[CommaToken](555,26): ,
SyntaxKind[QuestionToken](555,28): ?
SyntaxKind[Identifier](555,29): Yield
SyntaxKind[CloseBracketToken](555,34): ]
SyntaxKind[Terminal](555,36): `<`
SyntaxKind[Identifier](555,40): ShiftExpression
SyntaxKind[OpenBracketToken](555,55): [
SyntaxKind[QuestionToken](555,56): ?
SyntaxKind[Identifier](555,57): Yield
SyntaxKind[CloseBracketToken](555,62): ]
SyntaxKind[LineTerminatorToken](556,1): «line terminator»
SyntaxKind[Identifier](556,2): RelationalExpression
SyntaxKind[OpenBracketToken](556,22): [
SyntaxKind[QuestionToken](556,23): ?
SyntaxKind[Identifier](556,24): In
SyntaxKind[CommaToken](556,26): ,
SyntaxKind[QuestionToken](556,28): ?
SyntaxKind[Identifier](556,29): Yield
SyntaxKind[CloseBracketToken](556,34): ]
SyntaxKind[Terminal](556,36): `>`
SyntaxKind[Identifier](556,40): ShiftExpression
SyntaxKind[OpenBracketToken](556,55): [
SyntaxKind[QuestionToken](556,56): ?
SyntaxKind[Identifier](556,57): Yield
SyntaxKind[CloseBracketToken](556,62): ]
SyntaxKind[LineTerminatorToken](557,1): «line terminator»
SyntaxKind[Identifier](557,2): RelationalExpression
SyntaxKind[OpenBracketToken](557,22): [
SyntaxKind[QuestionToken](557,23): ?
SyntaxKind[Identifier](557,24): In
SyntaxKind[CommaToken](557,26): ,
SyntaxKind[QuestionToken](557,28): ?
SyntaxKind[Identifier](557,29): Yield
SyntaxKind[CloseBracketToken](557,34): ]
SyntaxKind[Terminal](557,36): `<=`
SyntaxKind[Identifier](557,41): ShiftExpression
SyntaxKind[OpenBracketToken](557,56): [
SyntaxKind[QuestionToken](557,57): ?
SyntaxKind[Identifier](557,58): Yield
SyntaxKind[CloseBracketToken](557,63): ]
SyntaxKind[LineTerminatorToken](558,1): «line terminator»
SyntaxKind[Identifier](558,2): RelationalExpression
SyntaxKind[OpenBracketToken](558,22): [
SyntaxKind[QuestionToken](558,23): ?
SyntaxKind[Identifier](558,24): In
SyntaxKind[CommaToken](558,26): ,
SyntaxKind[QuestionToken](558,28): ?
SyntaxKind[Identifier](558,29): Yield
SyntaxKind[CloseBracketToken](558,34): ]
SyntaxKind[Terminal](558,36): `>=`
SyntaxKind[Identifier](558,41): ShiftExpression
SyntaxKind[OpenBracketToken](558,56): [
SyntaxKind[QuestionToken](558,57): ?
SyntaxKind[Identifier](558,58): Yield
SyntaxKind[CloseBracketToken](558,63): ]
SyntaxKind[LineTerminatorToken](559,1): «line terminator»
SyntaxKind[Identifier](559,2): RelationalExpression
SyntaxKind[OpenBracketToken](559,22): [
SyntaxKind[QuestionToken](559,23): ?
SyntaxKind[Identifier](559,24): In
SyntaxKind[CommaToken](559,26): ,
SyntaxKind[QuestionToken](559,28): ?
SyntaxKind[Identifier](559,29): Yield
SyntaxKind[CloseBracketToken](559,34): ]
SyntaxKind[Terminal](559,36): `instanceof`
SyntaxKind[Identifier](559,49): ShiftExpression
SyntaxKind[OpenBracketToken](559,64): [
SyntaxKind[QuestionToken](559,65): ?
SyntaxKind[Identifier](559,66): Yield
SyntaxKind[CloseBracketToken](559,71): ]
SyntaxKind[LineTerminatorToken](560,1): «line terminator»
SyntaxKind[OpenBracketToken](560,2): [
SyntaxKind[PlusToken](560,3): +
SyntaxKind[Identifier](560,4): In
SyntaxKind[CloseBracketToken](560,6): ]
SyntaxKind[Identifier](560,8): RelationalExpression
SyntaxKind[OpenBracketToken](560,28): [
SyntaxKind[Identifier](560,29): In
SyntaxKind[CommaToken](560,31): ,
SyntaxKind[QuestionToken](560,33): ?
SyntaxKind[Identifier](560,34): Yield
SyntaxKind[CloseBracketToken](560,39): ]
SyntaxKind[Terminal](560,41): `in`
SyntaxKind[Identifier](560,46): ShiftExpression
SyntaxKind[OpenBracketToken](560,61): [
SyntaxKind[QuestionToken](560,62): ?
SyntaxKind[Identifier](560,63): Yield
SyntaxKind[CloseBracketToken](560,68): ]
SyntaxKind[LineTerminatorToken](561,1): «line terminator»
SyntaxKind[DedentToken](561,1): «dedent»
SyntaxKind[LineTerminatorToken](562,1): «line terminator»
SyntaxKind[Identifier](562,1): EqualityExpression
SyntaxKind[OpenBracketToken](562,19): [
SyntaxKind[Identifier](562,20): In
SyntaxKind[CommaToken](562,22): ,
SyntaxKind[Identifier](562,24): Yield
SyntaxKind[CloseBracketToken](562,29): ]
SyntaxKind[ColonToken](562,31): :
SyntaxKind[LineTerminatorToken](563,1): «line terminator»
SyntaxKind[IndentToken](563,1): «indent»
SyntaxKind[Identifier](563,2): RelationalExpression
SyntaxKind[OpenBracketToken](563,22): [
SyntaxKind[QuestionToken](563,23): ?
SyntaxKind[Identifier](563,24): In
SyntaxKind[CommaToken](563,26): ,
SyntaxKind[QuestionToken](563,28): ?
SyntaxKind[Identifier](563,29): Yield
SyntaxKind[CloseBracketToken](563,34): ]
SyntaxKind[LineTerminatorToken](564,1): «line terminator»
SyntaxKind[Identifier](564,2): EqualityExpression
SyntaxKind[OpenBracketToken](564,20): [
SyntaxKind[QuestionToken](564,21): ?
SyntaxKind[Identifier](564,22): In
SyntaxKind[CommaToken](564,24): ,
SyntaxKind[QuestionToken](564,26): ?
SyntaxKind[Identifier](564,27): Yield
SyntaxKind[CloseBracketToken](564,32): ]
SyntaxKind[Terminal](564,34): `==`
SyntaxKind[Identifier](564,39): RelationalExpression
SyntaxKind[OpenBracketToken](564,59): [
SyntaxKind[QuestionToken](564,60): ?
SyntaxKind[Identifier](564,61): In
SyntaxKind[CommaToken](564,63): ,
SyntaxKind[QuestionToken](564,65): ?
SyntaxKind[Identifier](564,66): Yield
SyntaxKind[CloseBracketToken](564,71): ]
SyntaxKind[LineTerminatorToken](565,1): «line terminator»
SyntaxKind[Identifier](565,2): EqualityExpression
SyntaxKind[OpenBracketToken](565,20): [
SyntaxKind[QuestionToken](565,21): ?
SyntaxKind[Identifier](565,22): In
SyntaxKind[CommaToken](565,24): ,
SyntaxKind[QuestionToken](565,26): ?
SyntaxKind[Identifier](565,27): Yield
SyntaxKind[CloseBracketToken](565,32): ]
SyntaxKind[Terminal](565,34): `!=`
SyntaxKind[Identifier](565,39): RelationalExpression
SyntaxKind[OpenBracketToken](565,59): [
SyntaxKind[QuestionToken](565,60): ?
SyntaxKind[Identifier](565,61): In
SyntaxKind[CommaToken](565,63): ,
SyntaxKind[QuestionToken](565,65): ?
SyntaxKind[Identifier](565,66): Yield
SyntaxKind[CloseBracketToken](565,71): ]
SyntaxKind[LineTerminatorToken](566,1): «line terminator»
SyntaxKind[Identifier](566,2): EqualityExpression
SyntaxKind[OpenBracketToken](566,20): [
SyntaxKind[QuestionToken](566,21): ?
SyntaxKind[Identifier](566,22): In
SyntaxKind[CommaToken](566,24): ,
SyntaxKind[QuestionToken](566,26): ?
SyntaxKind[Identifier](566,27): Yield
SyntaxKind[CloseBracketToken](566,32): ]
SyntaxKind[Terminal](566,34): `===`
SyntaxKind[Identifier](566,40): RelationalExpression
SyntaxKind[OpenBracketToken](566,60): [
SyntaxKind[QuestionToken](566,61): ?
SyntaxKind[Identifier](566,62): In
SyntaxKind[CommaToken](566,64): ,
SyntaxKind[QuestionToken](566,66): ?
SyntaxKind[Identifier](566,67): Yield
SyntaxKind[CloseBracketToken](566,72): ]
SyntaxKind[LineTerminatorToken](567,1): «line terminator»
SyntaxKind[Identifier](567,2): EqualityExpression
SyntaxKind[OpenBracketToken](567,20): [
SyntaxKind[QuestionToken](567,21): ?
SyntaxKind[Identifier](567,22): In
SyntaxKind[CommaToken](567,24): ,
SyntaxKind[QuestionToken](567,26): ?
SyntaxKind[Identifier](567,27): Yield
SyntaxKind[CloseBracketToken](567,32): ]
SyntaxKind[Terminal](567,34): `!==`
SyntaxKind[Identifier](567,40): RelationalExpression
SyntaxKind[OpenBracketToken](567,60): [
SyntaxKind[QuestionToken](567,61): ?
SyntaxKind[Identifier](567,62): In
SyntaxKind[CommaToken](567,64): ,
SyntaxKind[QuestionToken](567,66): ?
SyntaxKind[Identifier](567,67): Yield
SyntaxKind[CloseBracketToken](567,72): ]
SyntaxKind[LineTerminatorToken](568,1): «line terminator»
SyntaxKind[DedentToken](568,1): «dedent»
SyntaxKind[LineTerminatorToken](569,1): «line terminator»
SyntaxKind[Identifier](569,1): BitwiseANDExpression
SyntaxKind[OpenBracketToken](569,21): [
SyntaxKind[Identifier](569,22): In
SyntaxKind[CommaToken](569,24): ,
SyntaxKind[Identifier](569,26): Yield
SyntaxKind[CloseBracketToken](569,31): ]
SyntaxKind[ColonToken](569,33): :
SyntaxKind[LineTerminatorToken](570,1): «line terminator»
SyntaxKind[IndentToken](570,1): «indent»
SyntaxKind[Identifier](570,2): EqualityExpression
SyntaxKind[OpenBracketToken](570,20): [
SyntaxKind[QuestionToken](570,21): ?
SyntaxKind[Identifier](570,22): In
SyntaxKind[CommaToken](570,24): ,
SyntaxKind[QuestionToken](570,26): ?
SyntaxKind[Identifier](570,27): Yield
SyntaxKind[CloseBracketToken](570,32): ]
SyntaxKind[LineTerminatorToken](571,1): «line terminator»
SyntaxKind[Identifier](571,2): BitwiseANDExpression
SyntaxKind[OpenBracketToken](571,22): [
SyntaxKind[QuestionToken](571,23): ?
SyntaxKind[Identifier](571,24): In
SyntaxKind[CommaToken](571,26): ,
SyntaxKind[QuestionToken](571,28): ?
SyntaxKind[Identifier](571,29): Yield
SyntaxKind[CloseBracketToken](571,34): ]
SyntaxKind[Terminal](571,36): `&`
SyntaxKind[Identifier](571,40): EqualityExpression
SyntaxKind[OpenBracketToken](571,58): [
SyntaxKind[QuestionToken](571,59): ?
SyntaxKind[Identifier](571,60): In
SyntaxKind[CommaToken](571,62): ,
SyntaxKind[QuestionToken](571,64): ?
SyntaxKind[Identifier](571,65): Yield
SyntaxKind[CloseBracketToken](571,70): ]
SyntaxKind[LineTerminatorToken](572,1): «line terminator»
SyntaxKind[DedentToken](572,1): «dedent»
SyntaxKind[LineTerminatorToken](573,1): «line terminator»
SyntaxKind[Identifier](573,1): BitwiseXORExpression
SyntaxKind[OpenBracketToken](573,21): [
SyntaxKind[Identifier](573,22): In
SyntaxKind[CommaToken](573,24): ,
SyntaxKind[Identifier](573,26): Yield
SyntaxKind[CloseBracketToken](573,31): ]
SyntaxKind[ColonToken](573,33): :
SyntaxKind[LineTerminatorToken](574,1): «line terminator»
SyntaxKind[IndentToken](574,1): «indent»
SyntaxKind[Identifier](574,2): BitwiseANDExpression
SyntaxKind[OpenBracketToken](574,22): [
SyntaxKind[QuestionToken](574,23): ?
SyntaxKind[Identifier](574,24): In
SyntaxKind[CommaToken](574,26): ,
SyntaxKind[QuestionToken](574,28): ?
SyntaxKind[Identifier](574,29): Yield
SyntaxKind[CloseBracketToken](574,34): ]
SyntaxKind[LineTerminatorToken](575,1): «line terminator»
SyntaxKind[Identifier](575,2): BitwiseXORExpression
SyntaxKind[OpenBracketToken](575,22): [
SyntaxKind[QuestionToken](575,23): ?
SyntaxKind[Identifier](575,24): In
SyntaxKind[CommaToken](575,26): ,
SyntaxKind[QuestionToken](575,28): ?
SyntaxKind[Identifier](575,29): Yield
SyntaxKind[CloseBracketToken](575,34): ]
SyntaxKind[Terminal](575,36): `^`
SyntaxKind[Identifier](575,40): BitwiseANDExpression
SyntaxKind[OpenBracketToken](575,60): [
SyntaxKind[QuestionToken](575,61): ?
SyntaxKind[Identifier](575,62): In
SyntaxKind[CommaToken](575,64): ,
SyntaxKind[QuestionToken](575,66): ?
SyntaxKind[Identifier](575,67): Yield
SyntaxKind[CloseBracketToken](575,72): ]
SyntaxKind[LineTerminatorToken](576,1): «line terminator»
SyntaxKind[DedentToken](576,1): «dedent»
SyntaxKind[LineTerminatorToken](577,1): «line terminator»
SyntaxKind[Identifier](577,1): BitwiseORExpression
SyntaxKind[OpenBracketToken](577,20): [
SyntaxKind[Identifier](577,21): In
SyntaxKind[CommaToken](577,23): ,
SyntaxKind[Identifier](577,25): Yield
SyntaxKind[CloseBracketToken](577,30): ]
SyntaxKind[ColonToken](577,32): :
SyntaxKind[LineTerminatorToken](578,1): «line terminator»
SyntaxKind[IndentToken](578,1): «indent»
SyntaxKind[Identifier](578,2): BitwiseXORExpression
SyntaxKind[OpenBracketToken](578,22): [
SyntaxKind[QuestionToken](578,23): ?
SyntaxKind[Identifier](578,24): In
SyntaxKind[CommaToken](578,26): ,
SyntaxKind[QuestionToken](578,28): ?
SyntaxKind[Identifier](578,29): Yield
SyntaxKind[CloseBracketToken](578,34): ]
SyntaxKind[LineTerminatorToken](579,1): «line terminator»
SyntaxKind[Identifier](579,2): BitwiseORExpression
SyntaxKind[OpenBracketToken](579,21): [
SyntaxKind[QuestionToken](579,22): ?
SyntaxKind[Identifier](579,23): In
SyntaxKind[CommaToken](579,25): ,
SyntaxKind[QuestionToken](579,27): ?
SyntaxKind[Identifier](579,28): Yield
SyntaxKind[CloseBracketToken](579,33): ]
SyntaxKind[Terminal](579,35): `|`
SyntaxKind[Identifier](579,39): BitwiseXORExpression
SyntaxKind[OpenBracketToken](579,59): [
SyntaxKind[QuestionToken](579,60): ?
SyntaxKind[Identifier](579,61): In
SyntaxKind[CommaToken](579,63): ,
SyntaxKind[QuestionToken](579,65): ?
SyntaxKind[Identifier](579,66): Yield
SyntaxKind[CloseBracketToken](579,71): ]
SyntaxKind[LineTerminatorToken](580,1): «line terminator»
SyntaxKind[DedentToken](580,1): «dedent»
SyntaxKind[LineTerminatorToken](581,1): «line terminator»
SyntaxKind[Identifier](581,1): LogicalANDExpression
SyntaxKind[OpenBracketToken](581,21): [
SyntaxKind[Identifier](581,22): In
SyntaxKind[CommaToken](581,24): ,
SyntaxKind[Identifier](581,26): Yield
SyntaxKind[CloseBracketToken](581,31): ]
SyntaxKind[ColonToken](581,33): :
SyntaxKind[LineTerminatorToken](582,1): «line terminator»
SyntaxKind[IndentToken](582,1): «indent»
SyntaxKind[Identifier](582,2): BitwiseORExpression
SyntaxKind[OpenBracketToken](582,21): [
SyntaxKind[QuestionToken](582,22): ?
SyntaxKind[Identifier](582,23): In
SyntaxKind[CommaToken](582,25): ,
SyntaxKind[QuestionToken](582,27): ?
SyntaxKind[Identifier](582,28): Yield
SyntaxKind[CloseBracketToken](582,33): ]
SyntaxKind[LineTerminatorToken](583,1): «line terminator»
SyntaxKind[Identifier](583,2): LogicalANDExpression
SyntaxKind[OpenBracketToken](583,22): [
SyntaxKind[QuestionToken](583,23): ?
SyntaxKind[Identifier](583,24): In
SyntaxKind[CommaToken](583,26): ,
SyntaxKind[QuestionToken](583,28): ?
SyntaxKind[Identifier](583,29): Yield
SyntaxKind[CloseBracketToken](583,34): ]
SyntaxKind[Terminal](583,36): `&&`
SyntaxKind[Identifier](583,41): BitwiseORExpression
SyntaxKind[OpenBracketToken](583,60): [
SyntaxKind[QuestionToken](583,61): ?
SyntaxKind[Identifier](583,62): In
SyntaxKind[CommaToken](583,64): ,
SyntaxKind[QuestionToken](583,66): ?
SyntaxKind[Identifier](583,67): Yield
SyntaxKind[CloseBracketToken](583,72): ]
SyntaxKind[LineTerminatorToken](584,1): «line terminator»
SyntaxKind[DedentToken](584,1): «dedent»
SyntaxKind[LineTerminatorToken](585,1): «line terminator»
SyntaxKind[Identifier](585,1): LogicalORExpression
SyntaxKind[OpenBracketToken](585,20): [
SyntaxKind[Identifier](585,21): In
SyntaxKind[CommaToken](585,23): ,
SyntaxKind[Identifier](585,25): Yield
SyntaxKind[CloseBracketToken](585,30): ]
SyntaxKind[ColonToken](585,32): :
SyntaxKind[LineTerminatorToken](586,1): «line terminator»
SyntaxKind[IndentToken](586,1): «indent»
SyntaxKind[Identifier](586,2): LogicalANDExpression
SyntaxKind[OpenBracketToken](586,22): [
SyntaxKind[QuestionToken](586,23): ?
SyntaxKind[Identifier](586,24): In
SyntaxKind[CommaToken](586,26): ,
SyntaxKind[QuestionToken](586,28): ?
SyntaxKind[Identifier](586,29): Yield
SyntaxKind[CloseBracketToken](586,34): ]
SyntaxKind[LineTerminatorToken](587,1): «line terminator»
SyntaxKind[Identifier](587,2): LogicalORExpression
SyntaxKind[OpenBracketToken](587,21): [
SyntaxKind[QuestionToken](587,22): ?
SyntaxKind[Identifier](587,23): In
SyntaxKind[CommaToken](587,25): ,
SyntaxKind[QuestionToken](587,27): ?
SyntaxKind[Identifier](587,28): Yield
SyntaxKind[CloseBracketToken](587,33): ]
SyntaxKind[Terminal](587,35): `||`
SyntaxKind[Identifier](587,40): LogicalANDExpression
SyntaxKind[OpenBracketToken](587,60): [
SyntaxKind[QuestionToken](587,61): ?
SyntaxKind[Identifier](587,62): In
SyntaxKind[CommaToken](587,64): ,
SyntaxKind[QuestionToken](587,66): ?
SyntaxKind[Identifier](587,67): Yield
SyntaxKind[CloseBracketToken](587,72): ]
SyntaxKind[LineTerminatorToken](588,1): «line terminator»
SyntaxKind[DedentToken](588,1): «dedent»
SyntaxKind[LineTerminatorToken](589,1): «line terminator»
SyntaxKind[Identifier](589,1): ConditionalExpression
SyntaxKind[OpenBracketToken](589,22): [
SyntaxKind[Identifier](589,23): In
SyntaxKind[CommaToken](589,25): ,
SyntaxKind[Identifier](589,27): Yield
SyntaxKind[CloseBracketToken](589,32): ]
SyntaxKind[ColonToken](589,34): :
SyntaxKind[LineTerminatorToken](590,1): «line terminator»
SyntaxKind[IndentToken](590,1): «indent»
SyntaxKind[Identifier](590,2): LogicalORExpression
SyntaxKind[OpenBracketToken](590,21): [
SyntaxKind[QuestionToken](590,22): ?
SyntaxKind[Identifier](590,23): In
SyntaxKind[CommaToken](590,25): ,
SyntaxKind[QuestionToken](590,27): ?
SyntaxKind[Identifier](590,28): Yield
SyntaxKind[CloseBracketToken](590,33): ]
SyntaxKind[LineTerminatorToken](591,1): «line terminator»
SyntaxKind[Identifier](591,2): LogicalORExpression
SyntaxKind[OpenBracketToken](591,21): [
SyntaxKind[QuestionToken](591,22): ?
SyntaxKind[Identifier](591,23): In
SyntaxKind[CommaToken](591,25): ,
SyntaxKind[QuestionToken](591,27): ?
SyntaxKind[Identifier](591,28): Yield
SyntaxKind[CloseBracketToken](591,33): ]
SyntaxKind[Terminal](591,35): `?`
SyntaxKind[Identifier](591,39): AssignmentExpression
SyntaxKind[OpenBracketToken](591,59): [
SyntaxKind[Identifier](591,60): In
SyntaxKind[CommaToken](591,62): ,
SyntaxKind[QuestionToken](591,64): ?
SyntaxKind[Identifier](591,65): Yield
SyntaxKind[CloseBracketToken](591,70): ]
SyntaxKind[Terminal](591,72): `:`
SyntaxKind[Identifier](591,76): AssignmentExpression
SyntaxKind[OpenBracketToken](591,96): [
SyntaxKind[QuestionToken](591,97): ?
SyntaxKind[Identifier](591,98): In
SyntaxKind[CommaToken](591,100): ,
SyntaxKind[QuestionToken](591,102): ?
SyntaxKind[Identifier](591,103): Yield
SyntaxKind[CloseBracketToken](591,108): ]
SyntaxKind[LineTerminatorToken](592,1): «line terminator»
SyntaxKind[DedentToken](592,1): «dedent»
SyntaxKind[LineTerminatorToken](593,1): «line terminator»
SyntaxKind[Identifier](593,1): AssignmentExpression
SyntaxKind[OpenBracketToken](593,21): [
SyntaxKind[Identifier](593,22): In
SyntaxKind[CommaToken](593,24): ,
SyntaxKind[Identifier](593,26): Yield
SyntaxKind[CloseBracketToken](593,31): ]
SyntaxKind[ColonToken](593,33): :
SyntaxKind[LineTerminatorToken](594,1): «line terminator»
SyntaxKind[IndentToken](594,1): «indent»
SyntaxKind[Identifier](594,2): ConditionalExpression
SyntaxKind[OpenBracketToken](594,23): [
SyntaxKind[QuestionToken](594,24): ?
SyntaxKind[Identifier](594,25): In
SyntaxKind[CommaToken](594,27): ,
SyntaxKind[QuestionToken](594,29): ?
SyntaxKind[Identifier](594,30): Yield
SyntaxKind[CloseBracketToken](594,35): ]
SyntaxKind[LineTerminatorToken](595,1): «line terminator»
SyntaxKind[OpenBracketToken](595,2): [
SyntaxKind[PlusToken](595,3): +
SyntaxKind[Identifier](595,4): Yield
SyntaxKind[CloseBracketToken](595,9): ]
SyntaxKind[Identifier](595,11): YieldExpression
SyntaxKind[OpenBracketToken](595,26): [
SyntaxKind[QuestionToken](595,27): ?
SyntaxKind[Identifier](595,28): In
SyntaxKind[CloseBracketToken](595,30): ]
SyntaxKind[LineTerminatorToken](596,1): «line terminator»
SyntaxKind[Identifier](596,2): ArrowFunction
SyntaxKind[OpenBracketToken](596,15): [
SyntaxKind[QuestionToken](596,16): ?
SyntaxKind[Identifier](596,17): In
SyntaxKind[CommaToken](596,19): ,
SyntaxKind[QuestionToken](596,21): ?
SyntaxKind[Identifier](596,22): Yield
SyntaxKind[CloseBracketToken](596,27): ]
SyntaxKind[LineTerminatorToken](597,1): «line terminator»
SyntaxKind[Identifier](597,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](597,24): [
SyntaxKind[QuestionToken](597,25): ?
SyntaxKind[Identifier](597,26): Yield
SyntaxKind[CloseBracketToken](597,31): ]
SyntaxKind[Terminal](597,33): `=`
SyntaxKind[Identifier](597,37): AssignmentExpression
SyntaxKind[OpenBracketToken](597,57): [
SyntaxKind[QuestionToken](597,58): ?
SyntaxKind[Identifier](597,59): In
SyntaxKind[CommaToken](597,61): ,
SyntaxKind[QuestionToken](597,63): ?
SyntaxKind[Identifier](597,64): Yield
SyntaxKind[CloseBracketToken](597,69): ]
SyntaxKind[LineTerminatorToken](598,1): «line terminator»
SyntaxKind[Identifier](598,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](598,24): [
SyntaxKind[QuestionToken](598,25): ?
SyntaxKind[Identifier](598,26): Yield
SyntaxKind[CloseBracketToken](598,31): ]
SyntaxKind[Identifier](598,33): AssignmentOperator
SyntaxKind[Identifier](598,52): AssignmentExpression
SyntaxKind[OpenBracketToken](598,72): [
SyntaxKind[QuestionToken](598,73): ?
SyntaxKind[Identifier](598,74): In
SyntaxKind[CommaToken](598,76): ,
SyntaxKind[QuestionToken](598,78): ?
SyntaxKind[Identifier](598,79): Yield
SyntaxKind[CloseBracketToken](598,84): ]
SyntaxKind[LineTerminatorToken](599,1): «line terminator»
SyntaxKind[DedentToken](599,1): «dedent»
SyntaxKind[LineTerminatorToken](600,1): «line terminator»
SyntaxKind[Identifier](600,1): AssignmentOperator
SyntaxKind[ColonToken](600,20): :
SyntaxKind[OneKeyword](600,22): one
SyntaxKind[OfKeyword](600,26): of
SyntaxKind[LineTerminatorToken](601,1): «line terminator»
SyntaxKind[IndentToken](601,1): «indent»
SyntaxKind[Terminal](601,2): `*=`
SyntaxKind[Terminal](601,7): `/=`
SyntaxKind[Terminal](601,12): `%=`
SyntaxKind[Terminal](601,17): `+=`
SyntaxKind[Terminal](601,22): `-=`
SyntaxKind[Terminal](601,27): `<<=`
SyntaxKind[Terminal](601,33): `>>=`
SyntaxKind[Terminal](601,39): `>>>=`
SyntaxKind[Terminal](601,46): `&=`
SyntaxKind[Terminal](601,51): `^=`
SyntaxKind[Terminal](601,56): `|=`
SyntaxKind[LineTerminatorToken](602,1): «line terminator»
SyntaxKind[DedentToken](602,1): «dedent»
SyntaxKind[LineTerminatorToken](603,1): «line terminator»
SyntaxKind[Identifier](603,1): Expression
SyntaxKind[OpenBracketToken](603,11): [
SyntaxKind[Identifier](603,12): In
SyntaxKind[CommaToken](603,14): ,
SyntaxKind[Identifier](603,16): Yield
SyntaxKind[CloseBracketToken](603,21): ]
SyntaxKind[ColonToken](603,23): :
SyntaxKind[LineTerminatorToken](604,1): «line terminator»
SyntaxKind[IndentToken](604,1): «indent»
SyntaxKind[Identifier](604,2): AssignmentExpression
SyntaxKind[OpenBracketToken](604,22): [
SyntaxKind[QuestionToken](604,23): ?
SyntaxKind[Identifier](604,24): In
SyntaxKind[CommaToken](604,26): ,
SyntaxKind[QuestionToken](604,28): ?
SyntaxKind[Identifier](604,29): Yield
SyntaxKind[CloseBracketToken](604,34): ]
SyntaxKind[LineTerminatorToken](605,1): «line terminator»
SyntaxKind[Identifier](605,2): Expression
SyntaxKind[OpenBracketToken](605,12): [
SyntaxKind[QuestionToken](605,13): ?
SyntaxKind[Identifier](605,14): In
SyntaxKind[CommaToken](605,16): ,
SyntaxKind[QuestionToken](605,18): ?
SyntaxKind[Identifier](605,19): Yield
SyntaxKind[CloseBracketToken](605,24): ]
SyntaxKind[Terminal](605,26): `,`
SyntaxKind[Identifier](605,30): AssignmentExpression
SyntaxKind[OpenBracketToken](605,50): [
SyntaxKind[QuestionToken](605,51): ?
SyntaxKind[Identifier](605,52): In
SyntaxKind[CommaToken](605,54): ,
SyntaxKind[QuestionToken](605,56): ?
SyntaxKind[Identifier](605,57): Yield
SyntaxKind[CloseBracketToken](605,62): ]
SyntaxKind[LineTerminatorToken](606,1): «line terminator»
SyntaxKind[DedentToken](606,1): «dedent»
SyntaxKind[LineTerminatorToken](607,1): «line terminator»
SyntaxKind[LineTerminatorToken](608,1): «line terminator»
SyntaxKind[LineTerminatorToken](609,1): «line terminator»
SyntaxKind[Identifier](609,1): Statement
SyntaxKind[OpenBracketToken](609,10): [
SyntaxKind[Identifier](609,11): Yield
SyntaxKind[CommaToken](609,16): ,
SyntaxKind[Identifier](609,18): Return
SyntaxKind[CloseBracketToken](609,24): ]
SyntaxKind[ColonToken](609,26): :
SyntaxKind[LineTerminatorToken](610,1): «line terminator»
SyntaxKind[IndentToken](610,1): «indent»
SyntaxKind[Identifier](610,2): BlockStatement
SyntaxKind[OpenBracketToken](610,16): [
SyntaxKind[QuestionToken](610,17): ?
SyntaxKind[Identifier](610,18): Yield
SyntaxKind[CommaToken](610,23): ,
SyntaxKind[QuestionToken](610,25): ?
SyntaxKind[Identifier](610,26): Return
SyntaxKind[CloseBracketToken](610,32): ]
SyntaxKind[LineTerminatorToken](611,1): «line terminator»
SyntaxKind[Identifier](611,2): VariableStatement
SyntaxKind[OpenBracketToken](611,19): [
SyntaxKind[QuestionToken](611,20): ?
SyntaxKind[Identifier](611,21): Yield
SyntaxKind[CloseBracketToken](611,26): ]
SyntaxKind[LineTerminatorToken](612,1): «line terminator»
SyntaxKind[Identifier](612,2): EmptyStatement
SyntaxKind[LineTerminatorToken](613,1): «line terminator»
SyntaxKind[Identifier](613,2): ExpressionStatement
SyntaxKind[OpenBracketToken](613,21): [
SyntaxKind[QuestionToken](613,22): ?
SyntaxKind[Identifier](613,23): Yield
SyntaxKind[CloseBracketToken](613,28): ]
SyntaxKind[LineTerminatorToken](614,1): «line terminator»
SyntaxKind[Identifier](614,2): IfStatement
SyntaxKind[OpenBracketToken](614,13): [
SyntaxKind[QuestionToken](614,14): ?
SyntaxKind[Identifier](614,15): Yield
SyntaxKind[CommaToken](614,20): ,
SyntaxKind[QuestionToken](614,22): ?
SyntaxKind[Identifier](614,23): Return
SyntaxKind[CloseBracketToken](614,29): ]
SyntaxKind[LineTerminatorToken](615,1): «line terminator»
SyntaxKind[Identifier](615,2): BreakableStatement
SyntaxKind[OpenBracketToken](615,20): [
SyntaxKind[QuestionToken](615,21): ?
SyntaxKind[Identifier](615,22): Yield
SyntaxKind[CommaToken](615,27): ,
SyntaxKind[QuestionToken](615,29): ?
SyntaxKind[Identifier](615,30): Return
SyntaxKind[CloseBracketToken](615,36): ]
SyntaxKind[LineTerminatorToken](616,1): «line terminator»
SyntaxKind[Identifier](616,2): ContinueStatement
SyntaxKind[OpenBracketToken](616,19): [
SyntaxKind[QuestionToken](616,20): ?
SyntaxKind[Identifier](616,21): Yield
SyntaxKind[CloseBracketToken](616,26): ]
SyntaxKind[LineTerminatorToken](617,1): «line terminator»
SyntaxKind[Identifier](617,2): BreakStatement
SyntaxKind[OpenBracketToken](617,16): [
SyntaxKind[QuestionToken](617,17): ?
SyntaxKind[Identifier](617,18): Yield
SyntaxKind[CloseBracketToken](617,23): ]
SyntaxKind[LineTerminatorToken](618,1): «line terminator»
SyntaxKind[OpenBracketToken](618,2): [
SyntaxKind[PlusToken](618,3): +
SyntaxKind[Identifier](618,4): Return
SyntaxKind[CloseBracketToken](618,10): ]
SyntaxKind[Identifier](618,12): ReturnStatement
SyntaxKind[OpenBracketToken](618,27): [
SyntaxKind[QuestionToken](618,28): ?
SyntaxKind[Identifier](618,29): Yield
SyntaxKind[CloseBracketToken](618,34): ]
SyntaxKind[LineTerminatorToken](619,1): «line terminator»
SyntaxKind[Identifier](619,2): WithStatement
SyntaxKind[OpenBracketToken](619,15): [
SyntaxKind[QuestionToken](619,16): ?
SyntaxKind[Identifier](619,17): Yield
SyntaxKind[CommaToken](619,22): ,
SyntaxKind[QuestionToken](619,24): ?
SyntaxKind[Identifier](619,25): Return
SyntaxKind[CloseBracketToken](619,31): ]
SyntaxKind[LineTerminatorToken](620,1): «line terminator»
SyntaxKind[Identifier](620,2): LabelledStatement
SyntaxKind[OpenBracketToken](620,19): [
SyntaxKind[QuestionToken](620,20): ?
SyntaxKind[Identifier](620,21): Yield
SyntaxKind[CommaToken](620,26): ,
SyntaxKind[QuestionToken](620,28): ?
SyntaxKind[Identifier](620,29): Return
SyntaxKind[CloseBracketToken](620,35): ]
SyntaxKind[LineTerminatorToken](621,1): «line terminator»
SyntaxKind[Identifier](621,2): ThrowStatement
SyntaxKind[OpenBracketToken](621,16): [
SyntaxKind[QuestionToken](621,17): ?
SyntaxKind[Identifier](621,18): Yield
SyntaxKind[CloseBracketToken](621,23): ]
SyntaxKind[LineTerminatorToken](622,1): «line terminator»
SyntaxKind[Identifier](622,2): TryStatement
SyntaxKind[OpenBracketToken](622,14): [
SyntaxKind[QuestionToken](622,15): ?
SyntaxKind[Identifier](622,16): Yield
SyntaxKind[CommaToken](622,21): ,
SyntaxKind[QuestionToken](622,23): ?
SyntaxKind[Identifier](622,24): Return
SyntaxKind[CloseBracketToken](622,30): ]
SyntaxKind[LineTerminatorToken](623,1): «line terminator»
SyntaxKind[Identifier](623,2): DebuggerStatement
SyntaxKind[LineTerminatorToken](624,1): «line terminator»
SyntaxKind[DedentToken](624,1): «dedent»
SyntaxKind[LineTerminatorToken](625,1): «line terminator»
SyntaxKind[Identifier](625,1): Declaration
SyntaxKind[OpenBracketToken](625,12): [
SyntaxKind[Identifier](625,13): Yield
SyntaxKind[CloseBracketToken](625,18): ]
SyntaxKind[ColonToken](625,20): :
SyntaxKind[LineTerminatorToken](626,1): «line terminator»
SyntaxKind[IndentToken](626,1): «indent»
SyntaxKind[Identifier](626,2): HoistableDeclaration
SyntaxKind[OpenBracketToken](626,22): [
SyntaxKind[QuestionToken](626,23): ?
SyntaxKind[Identifier](626,24): Yield
SyntaxKind[CloseBracketToken](626,29): ]
SyntaxKind[LineTerminatorToken](627,1): «line terminator»
SyntaxKind[Identifier](627,2): ClassDeclaration
SyntaxKind[OpenBracketToken](627,18): [
SyntaxKind[QuestionToken](627,19): ?
SyntaxKind[Identifier](627,20): Yield
SyntaxKind[CloseBracketToken](627,25): ]
SyntaxKind[LineTerminatorToken](628,1): «line terminator»
SyntaxKind[Identifier](628,2): LexicalDeclaration
SyntaxKind[OpenBracketToken](628,20): [
SyntaxKind[Identifier](628,21): In
SyntaxKind[CommaToken](628,23): ,
SyntaxKind[QuestionToken](628,25): ?
SyntaxKind[Identifier](628,26): Yield
SyntaxKind[CloseBracketToken](628,31): ]
SyntaxKind[LineTerminatorToken](629,1): «line terminator»
SyntaxKind[DedentToken](629,1): «dedent»
SyntaxKind[LineTerminatorToken](630,1): «line terminator»
SyntaxKind[Identifier](630,1): HoistableDeclaration
SyntaxKind[OpenBracketToken](630,21): [
SyntaxKind[Identifier](630,22): Yield
SyntaxKind[CommaToken](630,27): ,
SyntaxKind[Identifier](630,29): Default
SyntaxKind[CloseBracketToken](630,36): ]
SyntaxKind[ColonToken](630,38): :
SyntaxKind[LineTerminatorToken](631,1): «line terminator»
SyntaxKind[IndentToken](631,1): «indent»
SyntaxKind[Identifier](631,2): FunctionDeclaration
SyntaxKind[OpenBracketToken](631,21): [
SyntaxKind[QuestionToken](631,22): ?
SyntaxKind[Identifier](631,23): Yield
SyntaxKind[CommaToken](631,28): ,
SyntaxKind[QuestionToken](631,30): ?
SyntaxKind[Identifier](631,31): Default
SyntaxKind[CloseBracketToken](631,38): ]
SyntaxKind[LineTerminatorToken](632,1): «line terminator»
SyntaxKind[Identifier](632,2): GeneratorDeclaration
SyntaxKind[OpenBracketToken](632,22): [
SyntaxKind[QuestionToken](632,23): ?
SyntaxKind[Identifier](632,24): Yield
SyntaxKind[CommaToken](632,29): ,
SyntaxKind[QuestionToken](632,31): ?
SyntaxKind[Identifier](632,32): Default
SyntaxKind[CloseBracketToken](632,39): ]
SyntaxKind[LineTerminatorToken](633,1): «line terminator»
SyntaxKind[DedentToken](633,1): «dedent»
SyntaxKind[LineTerminatorToken](634,1): «line terminator»
SyntaxKind[Identifier](634,1): BreakableStatement
SyntaxKind[OpenBracketToken](634,19): [
SyntaxKind[Identifier](634,20): Yield
SyntaxKind[CommaToken](634,25): ,
SyntaxKind[Identifier](634,27): Return
SyntaxKind[CloseBracketToken](634,33): ]
SyntaxKind[ColonToken](634,35): :
SyntaxKind[LineTerminatorToken](635,1): «line terminator»
SyntaxKind[IndentToken](635,1): «indent»
SyntaxKind[Identifier](635,2): IterationStatement
SyntaxKind[OpenBracketToken](635,20): [
SyntaxKind[QuestionToken](635,21): ?
SyntaxKind[Identifier](635,22): Yield
SyntaxKind[CommaToken](635,27): ,
SyntaxKind[QuestionToken](635,29): ?
SyntaxKind[Identifier](635,30): Return
SyntaxKind[CloseBracketToken](635,36): ]
SyntaxKind[LineTerminatorToken](636,1): «line terminator»
SyntaxKind[Identifier](636,2): SwitchStatement
SyntaxKind[OpenBracketToken](636,17): [
SyntaxKind[QuestionToken](636,18): ?
SyntaxKind[Identifier](636,19): Yield
SyntaxKind[CommaToken](636,24): ,
SyntaxKind[QuestionToken](636,26): ?
SyntaxKind[Identifier](636,27): Return
SyntaxKind[CloseBracketToken](636,33): ]
SyntaxKind[LineTerminatorToken](637,1): «line terminator»
SyntaxKind[DedentToken](637,1): «dedent»
SyntaxKind[LineTerminatorToken](638,1): «line terminator»
SyntaxKind[Identifier](638,1): BlockStatement
SyntaxKind[OpenBracketToken](638,15): [
SyntaxKind[Identifier](638,16): Yield
SyntaxKind[CommaToken](638,21): ,
SyntaxKind[Identifier](638,23): Return
SyntaxKind[CloseBracketToken](638,29): ]
SyntaxKind[ColonToken](638,31): :
SyntaxKind[LineTerminatorToken](639,1): «line terminator»
SyntaxKind[IndentToken](639,1): «indent»
SyntaxKind[Identifier](639,2): Block
SyntaxKind[OpenBracketToken](639,7): [
SyntaxKind[QuestionToken](639,8): ?
SyntaxKind[Identifier](639,9): Yield
SyntaxKind[CommaToken](639,14): ,
SyntaxKind[QuestionToken](639,16): ?
SyntaxKind[Identifier](639,17): Return
SyntaxKind[CloseBracketToken](639,23): ]
SyntaxKind[LineTerminatorToken](640,1): «line terminator»
SyntaxKind[DedentToken](640,1): «dedent»
SyntaxKind[LineTerminatorToken](641,1): «line terminator»
SyntaxKind[Identifier](641,1): Block
SyntaxKind[OpenBracketToken](641,6): [
SyntaxKind[Identifier](641,7): Yield
SyntaxKind[CommaToken](641,12): ,
SyntaxKind[Identifier](641,14): Return
SyntaxKind[CloseBracketToken](641,20): ]
SyntaxKind[ColonToken](641,22): :
SyntaxKind[LineTerminatorToken](642,1): «line terminator»
SyntaxKind[IndentToken](642,1): «indent»
SyntaxKind[Terminal](642,2): `{`
SyntaxKind[Identifier](642,6): StatementList
SyntaxKind[OpenBracketToken](642,19): [
SyntaxKind[QuestionToken](642,20): ?
SyntaxKind[Identifier](642,21): Yield
SyntaxKind[CommaToken](642,26): ,
SyntaxKind[QuestionToken](642,28): ?
SyntaxKind[Identifier](642,29): Return
SyntaxKind[CloseBracketToken](642,35): ]
SyntaxKind[QuestionToken](642,36): ?
SyntaxKind[Terminal](642,38): `}`
SyntaxKind[LineTerminatorToken](643,1): «line terminator»
SyntaxKind[DedentToken](643,1): «dedent»
SyntaxKind[LineTerminatorToken](644,1): «line terminator»
SyntaxKind[Identifier](644,1): StatementList
SyntaxKind[OpenBracketToken](644,14): [
SyntaxKind[Identifier](644,15): Yield
SyntaxKind[CommaToken](644,20): ,
SyntaxKind[Identifier](644,22): Return
SyntaxKind[CloseBracketToken](644,28): ]
SyntaxKind[ColonToken](644,30): :
SyntaxKind[LineTerminatorToken](645,1): «line terminator»
SyntaxKind[IndentToken](645,1): «indent»
SyntaxKind[Identifier](645,2): StatementListItem
SyntaxKind[OpenBracketToken](645,19): [
SyntaxKind[QuestionToken](645,20): ?
SyntaxKind[Identifier](645,21): Yield
SyntaxKind[CommaToken](645,26): ,
SyntaxKind[QuestionToken](645,28): ?
SyntaxKind[Identifier](645,29): Return
SyntaxKind[CloseBracketToken](645,35): ]
SyntaxKind[LineTerminatorToken](646,1): «line terminator»
SyntaxKind[Identifier](646,2): StatementList
SyntaxKind[OpenBracketToken](646,15): [
SyntaxKind[QuestionToken](646,16): ?
SyntaxKind[Identifier](646,17): Yield
SyntaxKind[CommaToken](646,22): ,
SyntaxKind[QuestionToken](646,24): ?
SyntaxKind[Identifier](646,25): Return
SyntaxKind[CloseBracketToken](646,31): ]
SyntaxKind[Identifier](646,33): StatementListItem
SyntaxKind[OpenBracketToken](646,50): [
SyntaxKind[QuestionToken](646,51): ?
SyntaxKind[Identifier](646,52): Yield
SyntaxKind[CommaToken](646,57): ,
SyntaxKind[QuestionToken](646,59): ?
SyntaxKind[Identifier](646,60): Return
SyntaxKind[CloseBracketToken](646,66): ]
SyntaxKind[LineTerminatorToken](647,1): «line terminator»
SyntaxKind[DedentToken](647,1): «dedent»
SyntaxKind[LineTerminatorToken](648,1): «line terminator»
SyntaxKind[Identifier](648,1): StatementListItem
SyntaxKind[OpenBracketToken](648,18): [
SyntaxKind[Identifier](648,19): Yield
SyntaxKind[CommaToken](648,24): ,
SyntaxKind[Identifier](648,26): Return
SyntaxKind[CloseBracketToken](648,32): ]
SyntaxKind[ColonToken](648,34): :
SyntaxKind[LineTerminatorToken](649,1): «line terminator»
SyntaxKind[IndentToken](649,1): «indent»
SyntaxKind[Identifier](649,2): Statement
SyntaxKind[OpenBracketToken](649,11): [
SyntaxKind[QuestionToken](649,12): ?
SyntaxKind[Identifier](649,13): Yield
SyntaxKind[CommaToken](649,18): ,
SyntaxKind[QuestionToken](649,20): ?
SyntaxKind[Identifier](649,21): Return
SyntaxKind[CloseBracketToken](649,27): ]
SyntaxKind[LineTerminatorToken](650,1): «line terminator»
SyntaxKind[Identifier](650,2): Declaration
SyntaxKind[OpenBracketToken](650,13): [
SyntaxKind[QuestionToken](650,14): ?
SyntaxKind[Identifier](650,15): Yield
SyntaxKind[CloseBracketToken](650,20): ]
SyntaxKind[LineTerminatorToken](651,1): «line terminator»
SyntaxKind[DedentToken](651,1): «dedent»
SyntaxKind[LineTerminatorToken](652,1): «line terminator»
SyntaxKind[Identifier](652,1): LexicalDeclaration
SyntaxKind[OpenBracketToken](652,19): [
SyntaxKind[Identifier](652,20): In
SyntaxKind[CommaToken](652,22): ,
SyntaxKind[Identifier](652,24): Yield
SyntaxKind[CloseBracketToken](652,29): ]
SyntaxKind[ColonToken](652,31): :
SyntaxKind[LineTerminatorToken](653,1): «line terminator»
SyntaxKind[IndentToken](653,1): «indent»
SyntaxKind[Identifier](653,2): LetOrConst
SyntaxKind[Identifier](653,13): BindingList
SyntaxKind[OpenBracketToken](653,24): [
SyntaxKind[QuestionToken](653,25): ?
SyntaxKind[Identifier](653,26): In
SyntaxKind[CommaToken](653,28): ,
SyntaxKind[QuestionToken](653,30): ?
SyntaxKind[Identifier](653,31): Yield
SyntaxKind[CloseBracketToken](653,36): ]
SyntaxKind[Terminal](653,38): `;`
SyntaxKind[LineTerminatorToken](654,1): «line terminator»
SyntaxKind[DedentToken](654,1): «dedent»
SyntaxKind[LineTerminatorToken](655,1): «line terminator»
SyntaxKind[Identifier](655,1): LetOrConst
SyntaxKind[ColonToken](655,12): :
SyntaxKind[LineTerminatorToken](656,1): «line terminator»
SyntaxKind[IndentToken](656,1): «indent»
SyntaxKind[Terminal](656,2): `let`
SyntaxKind[LineTerminatorToken](657,1): «line terminator»
SyntaxKind[Terminal](657,2): `const`
SyntaxKind[LineTerminatorToken](658,1): «line terminator»
SyntaxKind[DedentToken](658,1): «dedent»
SyntaxKind[LineTerminatorToken](659,1): «line terminator»
SyntaxKind[Identifier](659,1): BindingList
SyntaxKind[OpenBracketToken](659,12): [
SyntaxKind[Identifier](659,13): In
SyntaxKind[CommaToken](659,15): ,
SyntaxKind[Identifier](659,17): Yield
SyntaxKind[CloseBracketToken](659,22): ]
SyntaxKind[ColonToken](659,24): :
SyntaxKind[LineTerminatorToken](660,1): «line terminator»
SyntaxKind[IndentToken](660,1): «indent»
SyntaxKind[Identifier](660,2): LexicalBinding
SyntaxKind[OpenBracketToken](660,16): [
SyntaxKind[QuestionToken](660,17): ?
SyntaxKind[Identifier](660,18): In
SyntaxKind[CommaToken](660,20): ,
SyntaxKind[QuestionToken](660,22): ?
SyntaxKind[Identifier](660,23): Yield
SyntaxKind[CloseBracketToken](660,28): ]
SyntaxKind[LineTerminatorToken](661,1): «line terminator»
SyntaxKind[Identifier](661,2): BindingList
SyntaxKind[OpenBracketToken](661,13): [
SyntaxKind[QuestionToken](661,14): ?
SyntaxKind[Identifier](661,15): In
SyntaxKind[CommaToken](661,17): ,
SyntaxKind[QuestionToken](661,19): ?
SyntaxKind[Identifier](661,20): Yield
SyntaxKind[CloseBracketToken](661,25): ]
SyntaxKind[Terminal](661,27): `,`
SyntaxKind[Identifier](661,31): LexicalBinding
SyntaxKind[OpenBracketToken](661,45): [
SyntaxKind[QuestionToken](661,46): ?
SyntaxKind[Identifier](661,47): In
SyntaxKind[CommaToken](661,49): ,
SyntaxKind[QuestionToken](661,51): ?
SyntaxKind[Identifier](661,52): Yield
SyntaxKind[CloseBracketToken](661,57): ]
SyntaxKind[LineTerminatorToken](662,1): «line terminator»
SyntaxKind[DedentToken](662,1): «dedent»
SyntaxKind[LineTerminatorToken](663,1): «line terminator»
SyntaxKind[Identifier](663,1): LexicalBinding
SyntaxKind[OpenBracketToken](663,15): [
SyntaxKind[Identifier](663,16): In
SyntaxKind[CommaToken](663,18): ,
SyntaxKind[Identifier](663,20): Yield
SyntaxKind[CloseBracketToken](663,25): ]
SyntaxKind[ColonToken](663,28): :
SyntaxKind[LineTerminatorToken](664,1): «line terminator»
SyntaxKind[IndentToken](664,1): «indent»
SyntaxKind[Identifier](664,2): BindingIdentifier
SyntaxKind[OpenBracketToken](664,19): [
SyntaxKind[QuestionToken](664,20): ?
SyntaxKind[Identifier](664,21): Yield
SyntaxKind[CloseBracketToken](664,26): ]
SyntaxKind[Identifier](664,28): Initializer
SyntaxKind[OpenBracketToken](664,39): [
SyntaxKind[QuestionToken](664,40): ?
SyntaxKind[Identifier](664,41): In
SyntaxKind[CommaToken](664,43): ,
SyntaxKind[QuestionToken](664,45): ?
SyntaxKind[Identifier](664,46): Yield
SyntaxKind[CloseBracketToken](664,51): ]
SyntaxKind[QuestionToken](664,52): ?
SyntaxKind[LineTerminatorToken](665,1): «line terminator»
SyntaxKind[Identifier](665,2): BindingPattern
SyntaxKind[OpenBracketToken](665,16): [
SyntaxKind[QuestionToken](665,17): ?
SyntaxKind[Identifier](665,18): Yield
SyntaxKind[CloseBracketToken](665,23): ]
SyntaxKind[Identifier](665,25): Initializer
SyntaxKind[OpenBracketToken](665,36): [
SyntaxKind[QuestionToken](665,37): ?
SyntaxKind[Identifier](665,38): In
SyntaxKind[CommaToken](665,40): ,
SyntaxKind[QuestionToken](665,42): ?
SyntaxKind[Identifier](665,43): Yield
SyntaxKind[CloseBracketToken](665,48): ]
SyntaxKind[LineTerminatorToken](666,1): «line terminator»
SyntaxKind[DedentToken](666,1): «dedent»
SyntaxKind[LineTerminatorToken](667,1): «line terminator»
SyntaxKind[Identifier](667,1): VariableStatement
SyntaxKind[OpenBracketToken](667,18): [
SyntaxKind[Identifier](667,19): Yield
SyntaxKind[CloseBracketToken](667,24): ]
SyntaxKind[ColonToken](667,26): :
SyntaxKind[LineTerminatorToken](668,1): «line terminator»
SyntaxKind[IndentToken](668,1): «indent»
SyntaxKind[Terminal](668,2): `var`
SyntaxKind[Identifier](668,8): VariableDeclarationList
SyntaxKind[OpenBracketToken](668,31): [
SyntaxKind[Identifier](668,32): In
SyntaxKind[CommaToken](668,34): ,
SyntaxKind[QuestionToken](668,36): ?
SyntaxKind[Identifier](668,37): Yield
SyntaxKind[CloseBracketToken](668,42): ]
SyntaxKind[Terminal](668,44): `;`
SyntaxKind[LineTerminatorToken](669,1): «line terminator»
SyntaxKind[DedentToken](669,1): «dedent»
SyntaxKind[LineTerminatorToken](670,1): «line terminator»
SyntaxKind[Identifier](670,1): VariableDeclarationList
SyntaxKind[OpenBracketToken](670,24): [
SyntaxKind[Identifier](670,25): In
SyntaxKind[CommaToken](670,27): ,
SyntaxKind[Identifier](670,29): Yield
SyntaxKind[CloseBracketToken](670,34): ]
SyntaxKind[ColonToken](670,36): :
SyntaxKind[LineTerminatorToken](671,1): «line terminator»
SyntaxKind[IndentToken](671,1): «indent»
SyntaxKind[Identifier](671,2): VariableDeclaration
SyntaxKind[OpenBracketToken](671,21): [
SyntaxKind[QuestionToken](671,22): ?
SyntaxKind[Identifier](671,23): In
SyntaxKind[CommaToken](671,25): ,
SyntaxKind[QuestionToken](671,27): ?
SyntaxKind[Identifier](671,28): Yield
SyntaxKind[CloseBracketToken](671,33): ]
SyntaxKind[LineTerminatorToken](672,1): «line terminator»
SyntaxKind[Identifier](672,2): VariableDeclarationList
SyntaxKind[OpenBracketToken](672,25): [
SyntaxKind[QuestionToken](672,26): ?
SyntaxKind[Identifier](672,27): In
SyntaxKind[CommaToken](672,29): ,
SyntaxKind[QuestionToken](672,31): ?
SyntaxKind[Identifier](672,32): Yield
SyntaxKind[CloseBracketToken](672,37): ]
SyntaxKind[Terminal](672,39): `,`
SyntaxKind[Identifier](672,43): VariableDeclaration
SyntaxKind[OpenBracketToken](672,62): [
SyntaxKind[QuestionToken](672,63): ?
SyntaxKind[Identifier](672,64): In
SyntaxKind[CommaToken](672,66): ,
SyntaxKind[QuestionToken](672,68): ?
SyntaxKind[Identifier](672,69): Yield
SyntaxKind[CloseBracketToken](672,74): ]
SyntaxKind[LineTerminatorToken](673,1): «line terminator»
SyntaxKind[DedentToken](673,1): «dedent»
SyntaxKind[LineTerminatorToken](674,1): «line terminator»
SyntaxKind[Identifier](674,1): VariableDeclaration
SyntaxKind[OpenBracketToken](674,20): [
SyntaxKind[Identifier](674,21): In
SyntaxKind[CommaToken](674,23): ,
SyntaxKind[Identifier](674,25): Yield
SyntaxKind[CloseBracketToken](674,30): ]
SyntaxKind[ColonToken](674,32): :
SyntaxKind[LineTerminatorToken](675,1): «line terminator»
SyntaxKind[IndentToken](675,1): «indent»
SyntaxKind[Identifier](675,2): BindingIdentifier
SyntaxKind[OpenBracketToken](675,19): [
SyntaxKind[QuestionToken](675,20): ?
SyntaxKind[Identifier](675,21): Yield
SyntaxKind[CloseBracketToken](675,26): ]
SyntaxKind[Identifier](675,28): Initializer
SyntaxKind[OpenBracketToken](675,39): [
SyntaxKind[QuestionToken](675,40): ?
SyntaxKind[Identifier](675,41): In
SyntaxKind[CommaToken](675,43): ,
SyntaxKind[QuestionToken](675,45): ?
SyntaxKind[Identifier](675,46): Yield
SyntaxKind[CloseBracketToken](675,51): ]
SyntaxKind[QuestionToken](675,52): ?
SyntaxKind[LineTerminatorToken](676,1): «line terminator»
SyntaxKind[Identifier](676,2): BindingPattern
SyntaxKind[OpenBracketToken](676,16): [
SyntaxKind[QuestionToken](676,17): ?
SyntaxKind[Identifier](676,18): Yield
SyntaxKind[CloseBracketToken](676,23): ]
SyntaxKind[Identifier](676,25): Initializer
SyntaxKind[OpenBracketToken](676,36): [
SyntaxKind[QuestionToken](676,37): ?
SyntaxKind[Identifier](676,38): In
SyntaxKind[CommaToken](676,40): ,
SyntaxKind[QuestionToken](676,42): ?
SyntaxKind[Identifier](676,43): Yield
SyntaxKind[CloseBracketToken](676,48): ]
SyntaxKind[LineTerminatorToken](677,1): «line terminator»
SyntaxKind[DedentToken](677,1): «dedent»
SyntaxKind[LineTerminatorToken](678,1): «line terminator»
SyntaxKind[Identifier](678,1): BindingPattern
SyntaxKind[OpenBracketToken](678,15): [
SyntaxKind[Identifier](678,16): Yield
SyntaxKind[CloseBracketToken](678,21): ]
SyntaxKind[ColonToken](678,23): :
SyntaxKind[LineTerminatorToken](679,1): «line terminator»
SyntaxKind[IndentToken](679,1): «indent»
SyntaxKind[Identifier](679,2): ObjectBindingPattern
SyntaxKind[OpenBracketToken](679,22): [
SyntaxKind[QuestionToken](679,23): ?
SyntaxKind[Identifier](679,24): Yield
SyntaxKind[CloseBracketToken](679,29): ]
SyntaxKind[LineTerminatorToken](680,1): «line terminator»
SyntaxKind[Identifier](680,2): ArrayBindingPattern
SyntaxKind[OpenBracketToken](680,21): [
SyntaxKind[QuestionToken](680,22): ?
SyntaxKind[Identifier](680,23): Yield
SyntaxKind[CloseBracketToken](680,28): ]
SyntaxKind[LineTerminatorToken](681,1): «line terminator»
SyntaxKind[DedentToken](681,1): «dedent»
SyntaxKind[LineTerminatorToken](682,1): «line terminator»
SyntaxKind[Identifier](682,1): ObjectBindingPattern
SyntaxKind[OpenBracketToken](682,21): [
SyntaxKind[Identifier](682,22): Yield
SyntaxKind[CloseBracketToken](682,27): ]
SyntaxKind[ColonToken](682,29): :
SyntaxKind[LineTerminatorToken](683,1): «line terminator»
SyntaxKind[IndentToken](683,1): «indent»
SyntaxKind[Terminal](683,2): `{`
SyntaxKind[Terminal](683,6): `}`
SyntaxKind[LineTerminatorToken](684,1): «line terminator»
SyntaxKind[Terminal](684,2): `{`
SyntaxKind[Identifier](684,6): BindingPropertyList
SyntaxKind[OpenBracketToken](684,25): [
SyntaxKind[QuestionToken](684,26): ?
SyntaxKind[Identifier](684,27): Yield
SyntaxKind[CloseBracketToken](684,32): ]
SyntaxKind[Terminal](684,34): `}`
SyntaxKind[LineTerminatorToken](685,1): «line terminator»
SyntaxKind[Terminal](685,2): `{`
SyntaxKind[Identifier](685,6): BindingPropertyList
SyntaxKind[OpenBracketToken](685,25): [
SyntaxKind[QuestionToken](685,26): ?
SyntaxKind[Identifier](685,27): Yield
SyntaxKind[CloseBracketToken](685,32): ]
SyntaxKind[Terminal](685,34): `,`
SyntaxKind[Terminal](685,38): `}`
SyntaxKind[LineTerminatorToken](686,1): «line terminator»
SyntaxKind[DedentToken](686,1): «dedent»
SyntaxKind[LineTerminatorToken](687,1): «line terminator»
SyntaxKind[Identifier](687,1): ArrayBindingPattern
SyntaxKind[OpenBracketToken](687,20): [
SyntaxKind[Identifier](687,21): Yield
SyntaxKind[CloseBracketToken](687,26): ]
SyntaxKind[ColonToken](687,28): :
SyntaxKind[LineTerminatorToken](688,1): «line terminator»
SyntaxKind[IndentToken](688,1): «indent»
SyntaxKind[Terminal](688,2): `[`
SyntaxKind[Identifier](688,6): Elision
SyntaxKind[QuestionToken](688,13): ?
SyntaxKind[Identifier](688,15): BindingRestElement
SyntaxKind[OpenBracketToken](688,33): [
SyntaxKind[QuestionToken](688,34): ?
SyntaxKind[Identifier](688,35): Yield
SyntaxKind[CloseBracketToken](688,40): ]
SyntaxKind[QuestionToken](688,41): ?
SyntaxKind[Terminal](688,43): `]`
SyntaxKind[LineTerminatorToken](689,1): «line terminator»
SyntaxKind[Terminal](689,2): `[`
SyntaxKind[Identifier](689,6): BindingElementList
SyntaxKind[OpenBracketToken](689,24): [
SyntaxKind[QuestionToken](689,25): ?
SyntaxKind[Identifier](689,26): Yield
SyntaxKind[CloseBracketToken](689,31): ]
SyntaxKind[Terminal](689,33): `]`
SyntaxKind[LineTerminatorToken](690,1): «line terminator»
SyntaxKind[Terminal](690,2): `[`
SyntaxKind[Identifier](690,6): BindingElementList
SyntaxKind[OpenBracketToken](690,24): [
SyntaxKind[QuestionToken](690,25): ?
SyntaxKind[Identifier](690,26): Yield
SyntaxKind[CloseBracketToken](690,31): ]
SyntaxKind[Terminal](690,33): `,`
SyntaxKind[Identifier](690,37): Elision
SyntaxKind[QuestionToken](690,44): ?
SyntaxKind[Identifier](690,46): BindingRestElement
SyntaxKind[OpenBracketToken](690,64): [
SyntaxKind[QuestionToken](690,65): ?
SyntaxKind[Identifier](690,66): Yield
SyntaxKind[CloseBracketToken](690,71): ]
SyntaxKind[QuestionToken](690,72): ?
SyntaxKind[Terminal](690,74): `]`
SyntaxKind[LineTerminatorToken](691,1): «line terminator»
SyntaxKind[DedentToken](691,1): «dedent»
SyntaxKind[LineTerminatorToken](692,1): «line terminator»
SyntaxKind[Identifier](692,1): BindingPropertyList
SyntaxKind[OpenBracketToken](692,20): [
SyntaxKind[Identifier](692,21): Yield
SyntaxKind[CloseBracketToken](692,26): ]
SyntaxKind[ColonToken](692,28): :
SyntaxKind[LineTerminatorToken](693,1): «line terminator»
SyntaxKind[IndentToken](693,1): «indent»
SyntaxKind[Identifier](693,2): BindingProperty
SyntaxKind[OpenBracketToken](693,17): [
SyntaxKind[QuestionToken](693,18): ?
SyntaxKind[Identifier](693,19): Yield
SyntaxKind[CloseBracketToken](693,24): ]
SyntaxKind[LineTerminatorToken](694,1): «line terminator»
SyntaxKind[Identifier](694,2): BindingPropertyList
SyntaxKind[OpenBracketToken](694,21): [
SyntaxKind[QuestionToken](694,22): ?
SyntaxKind[Identifier](694,23): Yield
SyntaxKind[CloseBracketToken](694,28): ]
SyntaxKind[Terminal](694,30): `,`
SyntaxKind[Identifier](694,34): BindingProperty
SyntaxKind[OpenBracketToken](694,49): [
SyntaxKind[QuestionToken](694,50): ?
SyntaxKind[Identifier](694,51): Yield
SyntaxKind[CloseBracketToken](694,56): ]
SyntaxKind[LineTerminatorToken](695,1): «line terminator»
SyntaxKind[DedentToken](695,1): «dedent»
SyntaxKind[LineTerminatorToken](696,1): «line terminator»
SyntaxKind[Identifier](696,1): BindingElementList
SyntaxKind[OpenBracketToken](696,19): [
SyntaxKind[Identifier](696,20): Yield
SyntaxKind[CloseBracketToken](696,25): ]
SyntaxKind[ColonToken](696,27): :
SyntaxKind[LineTerminatorToken](697,1): «line terminator»
SyntaxKind[IndentToken](697,1): «indent»
SyntaxKind[Identifier](697,2): BindingElisionElement
SyntaxKind[OpenBracketToken](697,23): [
SyntaxKind[QuestionToken](697,24): ?
SyntaxKind[Identifier](697,25): Yield
SyntaxKind[CloseBracketToken](697,30): ]
SyntaxKind[LineTerminatorToken](698,1): «line terminator»
SyntaxKind[Identifier](698,2): BindingElementList
SyntaxKind[OpenBracketToken](698,20): [
SyntaxKind[QuestionToken](698,21): ?
SyntaxKind[Identifier](698,22): Yield
SyntaxKind[CloseBracketToken](698,27): ]
SyntaxKind[Terminal](698,29): `,`
SyntaxKind[Identifier](698,33): BindingElisionElement
SyntaxKind[OpenBracketToken](698,54): [
SyntaxKind[QuestionToken](698,55): ?
SyntaxKind[Identifier](698,56): Yield
SyntaxKind[CloseBracketToken](698,61): ]
SyntaxKind[LineTerminatorToken](699,1): «line terminator»
SyntaxKind[DedentToken](699,1): «dedent»
SyntaxKind[LineTerminatorToken](700,1): «line terminator»
SyntaxKind[Identifier](700,1): BindingElisionElement
SyntaxKind[OpenBracketToken](700,22): [
SyntaxKind[Identifier](700,23): Yield
SyntaxKind[CloseBracketToken](700,28): ]
SyntaxKind[ColonToken](700,30): :
SyntaxKind[LineTerminatorToken](701,1): «line terminator»
SyntaxKind[IndentToken](701,1): «indent»
SyntaxKind[Identifier](701,2): Elision
SyntaxKind[QuestionToken](701,9): ?
SyntaxKind[Identifier](701,11): BindingElement
SyntaxKind[OpenBracketToken](701,25): [
SyntaxKind[QuestionToken](701,26): ?
SyntaxKind[Identifier](701,27): Yield
SyntaxKind[CloseBracketToken](701,32): ]
SyntaxKind[LineTerminatorToken](702,1): «line terminator»
SyntaxKind[DedentToken](702,1): «dedent»
SyntaxKind[LineTerminatorToken](703,1): «line terminator»
SyntaxKind[Identifier](703,1): BindingProperty
SyntaxKind[OpenBracketToken](703,16): [
SyntaxKind[Identifier](703,17): Yield
SyntaxKind[CloseBracketToken](703,22): ]
SyntaxKind[ColonToken](703,24): :
SyntaxKind[LineTerminatorToken](704,1): «line terminator»
SyntaxKind[IndentToken](704,1): «indent»
SyntaxKind[Identifier](704,2): SingleNameBinding
SyntaxKind[OpenBracketToken](704,19): [
SyntaxKind[QuestionToken](704,20): ?
SyntaxKind[Identifier](704,21): Yield
SyntaxKind[CloseBracketToken](704,26): ]
SyntaxKind[LineTerminatorToken](705,1): «line terminator»
SyntaxKind[Identifier](705,2): PropertyName
SyntaxKind[OpenBracketToken](705,14): [
SyntaxKind[QuestionToken](705,15): ?
SyntaxKind[Identifier](705,16): Yield
SyntaxKind[CloseBracketToken](705,21): ]
SyntaxKind[Terminal](705,23): `:`
SyntaxKind[Identifier](705,27): BindingElement
SyntaxKind[OpenBracketToken](705,41): [
SyntaxKind[QuestionToken](705,42): ?
SyntaxKind[Identifier](705,43): Yield
SyntaxKind[CloseBracketToken](705,48): ]
SyntaxKind[LineTerminatorToken](706,1): «line terminator»
SyntaxKind[DedentToken](706,1): «dedent»
SyntaxKind[LineTerminatorToken](707,1): «line terminator»
SyntaxKind[Identifier](707,1): BindingElement
SyntaxKind[OpenBracketToken](707,15): [
SyntaxKind[Identifier](707,16): Yield
SyntaxKind[CloseBracketToken](707,21): ]
SyntaxKind[ColonToken](707,23): :
SyntaxKind[LineTerminatorToken](708,1): «line terminator»
SyntaxKind[IndentToken](708,1): «indent»
SyntaxKind[Identifier](708,2): SingleNameBinding
SyntaxKind[OpenBracketToken](708,19): [
SyntaxKind[QuestionToken](708,20): ?
SyntaxKind[Identifier](708,21): Yield
SyntaxKind[CloseBracketToken](708,26): ]
SyntaxKind[LineTerminatorToken](709,1): «line terminator»
SyntaxKind[Identifier](709,2): BindingPattern
SyntaxKind[OpenBracketToken](709,16): [
SyntaxKind[QuestionToken](709,17): ?
SyntaxKind[Identifier](709,18): Yield
SyntaxKind[CloseBracketToken](709,23): ]
SyntaxKind[Identifier](709,25): Initializer
SyntaxKind[OpenBracketToken](709,36): [
SyntaxKind[Identifier](709,37): In
SyntaxKind[CommaToken](709,39): ,
SyntaxKind[QuestionToken](709,41): ?
SyntaxKind[Identifier](709,42): Yield
SyntaxKind[CloseBracketToken](709,47): ]
SyntaxKind[QuestionToken](709,48): ?
SyntaxKind[LineTerminatorToken](710,1): «line terminator»
SyntaxKind[DedentToken](710,1): «dedent»
SyntaxKind[LineTerminatorToken](711,1): «line terminator»
SyntaxKind[Identifier](711,1): SingleNameBinding
SyntaxKind[OpenBracketToken](711,18): [
SyntaxKind[Identifier](711,19): Yield
SyntaxKind[CloseBracketToken](711,24): ]
SyntaxKind[ColonToken](711,26): :
SyntaxKind[LineTerminatorToken](712,1): «line terminator»
SyntaxKind[IndentToken](712,1): «indent»
SyntaxKind[Identifier](712,2): BindingIdentifier
SyntaxKind[OpenBracketToken](712,19): [
SyntaxKind[QuestionToken](712,20): ?
SyntaxKind[Identifier](712,21): Yield
SyntaxKind[CloseBracketToken](712,26): ]
SyntaxKind[Identifier](712,28): Initializer
SyntaxKind[OpenBracketToken](712,39): [
SyntaxKind[Identifier](712,40): In
SyntaxKind[CommaToken](712,42): ,
SyntaxKind[QuestionToken](712,44): ?
SyntaxKind[Identifier](712,45): Yield
SyntaxKind[CloseBracketToken](712,50): ]
SyntaxKind[QuestionToken](712,51): ?
SyntaxKind[LineTerminatorToken](713,1): «line terminator»
SyntaxKind[DedentToken](713,1): «dedent»
SyntaxKind[LineTerminatorToken](714,1): «line terminator»
SyntaxKind[Identifier](714,1): BindingRestElement
SyntaxKind[OpenBracketToken](714,19): [
SyntaxKind[Identifier](714,20): Yield
SyntaxKind[CloseBracketToken](714,25): ]
SyntaxKind[ColonToken](714,27): :
SyntaxKind[LineTerminatorToken](715,1): «line terminator»
SyntaxKind[IndentToken](715,1): «indent»
SyntaxKind[Terminal](715,2): `...`
SyntaxKind[Identifier](715,8): BindingIdentifier
SyntaxKind[OpenBracketToken](715,25): [
SyntaxKind[QuestionToken](715,26): ?
SyntaxKind[Identifier](715,27): Yield
SyntaxKind[CloseBracketToken](715,32): ]
SyntaxKind[LineTerminatorToken](716,1): «line terminator»
SyntaxKind[DedentToken](716,1): «dedent»
SyntaxKind[LineTerminatorToken](717,1): «line terminator»
SyntaxKind[Identifier](717,1): EmptyStatement
SyntaxKind[ColonToken](717,16): :
SyntaxKind[LineTerminatorToken](718,1): «line terminator»
SyntaxKind[IndentToken](718,1): «indent»
SyntaxKind[Terminal](718,2): `;`
SyntaxKind[LineTerminatorToken](719,1): «line terminator»
SyntaxKind[DedentToken](719,1): «dedent»
SyntaxKind[LineTerminatorToken](720,1): «line terminator»
SyntaxKind[Identifier](720,1): ExpressionStatement
SyntaxKind[OpenBracketToken](720,20): [
SyntaxKind[Identifier](720,21): Yield
SyntaxKind[CloseBracketToken](720,26): ]
SyntaxKind[ColonToken](720,28): :
SyntaxKind[LineTerminatorToken](721,1): «line terminator»
SyntaxKind[IndentToken](721,1): «indent»
SyntaxKind[OpenBracketToken](721,2): [
SyntaxKind[LookaheadKeyword](721,3): lookahead
SyntaxKind[LessThanExclamationToken](721,13): <!
SyntaxKind[OpenBraceToken](721,16): {
SyntaxKind[Terminal](721,18): `{`
SyntaxKind[CommaToken](721,21): ,
SyntaxKind[Terminal](721,23): `function`
SyntaxKind[CommaToken](721,33): ,
SyntaxKind[Terminal](721,35): `class`
SyntaxKind[CommaToken](721,42): ,
SyntaxKind[Terminal](721,44): `let`
SyntaxKind[Terminal](721,50): `[`
SyntaxKind[CloseBraceToken](721,54): }
SyntaxKind[CloseBracketToken](721,55): ]
SyntaxKind[Identifier](721,57): Expression
SyntaxKind[OpenBracketToken](721,67): [
SyntaxKind[Identifier](721,68): In
SyntaxKind[CommaToken](721,70): ,
SyntaxKind[QuestionToken](721,72): ?
SyntaxKind[Identifier](721,73): Yield
SyntaxKind[CloseBracketToken](721,78): ]
SyntaxKind[Terminal](721,80): `;`
SyntaxKind[LineTerminatorToken](722,1): «line terminator»
SyntaxKind[DedentToken](722,1): «dedent»
SyntaxKind[LineTerminatorToken](723,1): «line terminator»
SyntaxKind[Identifier](723,1): IfStatement
SyntaxKind[OpenBracketToken](723,12): [
SyntaxKind[Identifier](723,13): Yield
SyntaxKind[CommaToken](723,18): ,
SyntaxKind[Identifier](723,20): Return
SyntaxKind[CloseBracketToken](723,26): ]
SyntaxKind[ColonToken](723,28): :
SyntaxKind[LineTerminatorToken](724,1): «line terminator»
SyntaxKind[IndentToken](724,1): «indent»
SyntaxKind[Terminal](724,2): `if`
SyntaxKind[Terminal](724,7): `(`
SyntaxKind[Identifier](724,11): Expression
SyntaxKind[OpenBracketToken](724,21): [
SyntaxKind[Identifier](724,22): In
SyntaxKind[CommaToken](724,24): ,
SyntaxKind[QuestionToken](724,26): ?
SyntaxKind[Identifier](724,27): Yield
SyntaxKind[CloseBracketToken](724,32): ]
SyntaxKind[Terminal](724,34): `)`
SyntaxKind[Identifier](724,38): Statement
SyntaxKind[OpenBracketToken](724,47): [
SyntaxKind[QuestionToken](724,48): ?
SyntaxKind[Identifier](724,49): Yield
SyntaxKind[CommaToken](724,54): ,
SyntaxKind[QuestionToken](724,56): ?
SyntaxKind[Identifier](724,57): Return
SyntaxKind[CloseBracketToken](724,63): ]
SyntaxKind[Terminal](724,65): `else`
SyntaxKind[Identifier](724,72): Statement
SyntaxKind[OpenBracketToken](724,81): [
SyntaxKind[QuestionToken](724,82): ?
SyntaxKind[Identifier](724,83): Yield
SyntaxKind[CommaToken](724,88): ,
SyntaxKind[QuestionToken](724,90): ?
SyntaxKind[Identifier](724,91): Return
SyntaxKind[CloseBracketToken](724,97): ]
SyntaxKind[LineTerminatorToken](725,1): «line terminator»
SyntaxKind[Terminal](725,2): `if`
SyntaxKind[Terminal](725,7): `(`
SyntaxKind[Identifier](725,11): Expression
SyntaxKind[OpenBracketToken](725,21): [
SyntaxKind[Identifier](725,22): In
SyntaxKind[CommaToken](725,24): ,
SyntaxKind[QuestionToken](725,26): ?
SyntaxKind[Identifier](725,27): Yield
SyntaxKind[CloseBracketToken](725,32): ]
SyntaxKind[Terminal](725,34): `)`
SyntaxKind[Identifier](725,38): Statement
SyntaxKind[OpenBracketToken](725,47): [
SyntaxKind[QuestionToken](725,48): ?
SyntaxKind[Identifier](725,49): Yield
SyntaxKind[CommaToken](725,54): ,
SyntaxKind[QuestionToken](725,56): ?
SyntaxKind[Identifier](725,57): Return
SyntaxKind[CloseBracketToken](725,63): ]
SyntaxKind[LineTerminatorToken](726,1): «line terminator»
SyntaxKind[DedentToken](726,1): «dedent»
SyntaxKind[LineTerminatorToken](727,1): «line terminator»
SyntaxKind[Identifier](727,1): IterationStatement
SyntaxKind[OpenBracketToken](727,19): [
SyntaxKind[Identifier](727,20): Yield
SyntaxKind[CommaToken](727,25): ,
SyntaxKind[Identifier](727,27): Return
SyntaxKind[CloseBracketToken](727,33): ]
SyntaxKind[ColonToken](727,35): :
SyntaxKind[LineTerminatorToken](728,1): «line terminator»
SyntaxKind[IndentToken](728,1): «indent»
SyntaxKind[Terminal](728,2): `do`
SyntaxKind[Identifier](728,7): Statement
SyntaxKind[OpenBracketToken](728,16): [
SyntaxKind[QuestionToken](728,17): ?
SyntaxKind[Identifier](728,18): Yield
SyntaxKind[CommaToken](728,23): ,
SyntaxKind[QuestionToken](728,25): ?
SyntaxKind[Identifier](728,26): Return
SyntaxKind[CloseBracketToken](728,32): ]
SyntaxKind[Terminal](728,34): `while`
SyntaxKind[Terminal](728,42): `(`
SyntaxKind[Identifier](728,46): Expression
SyntaxKind[OpenBracketToken](728,56): [
SyntaxKind[Identifier](728,57): In
SyntaxKind[CommaToken](728,59): ,
SyntaxKind[QuestionToken](728,61): ?
SyntaxKind[Identifier](728,62): Yield
SyntaxKind[CloseBracketToken](728,67): ]
SyntaxKind[Terminal](728,69): `)`
SyntaxKind[Terminal](728,73): `;`
SyntaxKind[LineTerminatorToken](729,1): «line terminator»
SyntaxKind[Terminal](729,2): `while`
SyntaxKind[Terminal](729,10): `(`
SyntaxKind[Identifier](729,14): Expression
SyntaxKind[OpenBracketToken](729,24): [
SyntaxKind[Identifier](729,25): In
SyntaxKind[CommaToken](729,27): ,
SyntaxKind[QuestionToken](729,29): ?
SyntaxKind[Identifier](729,30): Yield
SyntaxKind[CloseBracketToken](729,35): ]
SyntaxKind[Terminal](729,37): `)`
SyntaxKind[Identifier](729,41): Statement
SyntaxKind[OpenBracketToken](729,50): [
SyntaxKind[QuestionToken](729,51): ?
SyntaxKind[Identifier](729,52): Yield
SyntaxKind[CommaToken](729,57): ,
SyntaxKind[QuestionToken](729,59): ?
SyntaxKind[Identifier](729,60): Return
SyntaxKind[CloseBracketToken](729,66): ]
SyntaxKind[LineTerminatorToken](730,1): «line terminator»
SyntaxKind[Terminal](730,2): `for`
SyntaxKind[Terminal](730,8): `(`
SyntaxKind[OpenBracketToken](730,12): [
SyntaxKind[LookaheadKeyword](730,13): lookahead
SyntaxKind[LessThanExclamationToken](730,23): <!
SyntaxKind[OpenBraceToken](730,26): {
SyntaxKind[Terminal](730,28): `let`
SyntaxKind[Terminal](730,34): `[`
SyntaxKind[CloseBraceToken](730,38): }
SyntaxKind[CloseBracketToken](730,39): ]
SyntaxKind[Identifier](730,41): Expression
SyntaxKind[OpenBracketToken](730,51): [
SyntaxKind[QuestionToken](730,52): ?
SyntaxKind[Identifier](730,53): Yield
SyntaxKind[CloseBracketToken](730,58): ]
SyntaxKind[QuestionToken](730,59): ?
SyntaxKind[Terminal](730,61): `;`
SyntaxKind[Identifier](730,65): Expression
SyntaxKind[OpenBracketToken](730,75): [
SyntaxKind[Identifier](730,76): In
SyntaxKind[CommaToken](730,78): ,
SyntaxKind[QuestionToken](730,80): ?
SyntaxKind[Identifier](730,81): Yield
SyntaxKind[CloseBracketToken](730,86): ]
SyntaxKind[QuestionToken](730,87): ?
SyntaxKind[Terminal](730,89): `;`
SyntaxKind[Identifier](730,93): Expression
SyntaxKind[OpenBracketToken](730,103): [
SyntaxKind[Identifier](730,104): In
SyntaxKind[CommaToken](730,106): ,
SyntaxKind[QuestionToken](730,108): ?
SyntaxKind[Identifier](730,109): Yield
SyntaxKind[CloseBracketToken](730,114): ]
SyntaxKind[QuestionToken](730,115): ?
SyntaxKind[Terminal](730,117): `)`
SyntaxKind[Identifier](730,121): Statement
SyntaxKind[OpenBracketToken](730,130): [
SyntaxKind[QuestionToken](730,131): ?
SyntaxKind[Identifier](730,132): Yield
SyntaxKind[CommaToken](730,137): ,
SyntaxKind[QuestionToken](730,139): ?
SyntaxKind[Identifier](730,140): Return
SyntaxKind[CloseBracketToken](730,146): ]
SyntaxKind[LineTerminatorToken](731,1): «line terminator»
SyntaxKind[Terminal](731,2): `for`
SyntaxKind[Terminal](731,8): `(`
SyntaxKind[Terminal](731,12): `var`
SyntaxKind[Identifier](731,18): VariableDeclarationList
SyntaxKind[OpenBracketToken](731,41): [
SyntaxKind[QuestionToken](731,42): ?
SyntaxKind[Identifier](731,43): Yield
SyntaxKind[CloseBracketToken](731,48): ]
SyntaxKind[Terminal](731,50): `;`
SyntaxKind[Identifier](731,54): Expression
SyntaxKind[OpenBracketToken](731,64): [
SyntaxKind[Identifier](731,65): In
SyntaxKind[CommaToken](731,67): ,
SyntaxKind[QuestionToken](731,69): ?
SyntaxKind[Identifier](731,70): Yield
SyntaxKind[CloseBracketToken](731,75): ]
SyntaxKind[QuestionToken](731,76): ?
SyntaxKind[Terminal](731,78): `;`
SyntaxKind[Identifier](731,82): Expression
SyntaxKind[OpenBracketToken](731,92): [
SyntaxKind[Identifier](731,93): In
SyntaxKind[CommaToken](731,95): ,
SyntaxKind[QuestionToken](731,97): ?
SyntaxKind[Identifier](731,98): Yield
SyntaxKind[CloseBracketToken](731,103): ]
SyntaxKind[QuestionToken](731,104): ?
SyntaxKind[Terminal](731,106): `)`
SyntaxKind[Identifier](731,110): Statement
SyntaxKind[OpenBracketToken](731,119): [
SyntaxKind[QuestionToken](731,120): ?
SyntaxKind[Identifier](731,121): Yield
SyntaxKind[CommaToken](731,126): ,
SyntaxKind[QuestionToken](731,128): ?
SyntaxKind[Identifier](731,129): Return
SyntaxKind[CloseBracketToken](731,135): ]
SyntaxKind[LineTerminatorToken](732,1): «line terminator»
SyntaxKind[Terminal](732,2): `for`
SyntaxKind[Terminal](732,8): `(`
SyntaxKind[Identifier](732,12): LexicalDeclaration
SyntaxKind[OpenBracketToken](732,30): [
SyntaxKind[QuestionToken](732,31): ?
SyntaxKind[Identifier](732,32): Yield
SyntaxKind[CloseBracketToken](732,37): ]
SyntaxKind[Identifier](732,39): Expression
SyntaxKind[OpenBracketToken](732,49): [
SyntaxKind[Identifier](732,50): In
SyntaxKind[CommaToken](732,52): ,
SyntaxKind[QuestionToken](732,54): ?
SyntaxKind[Identifier](732,55): Yield
SyntaxKind[CloseBracketToken](732,60): ]
SyntaxKind[QuestionToken](732,61): ?
SyntaxKind[Terminal](732,63): `;`
SyntaxKind[Identifier](732,67): Expression
SyntaxKind[OpenBracketToken](732,77): [
SyntaxKind[Identifier](732,78): In
SyntaxKind[CommaToken](732,80): ,
SyntaxKind[QuestionToken](732,82): ?
SyntaxKind[Identifier](732,83): Yield
SyntaxKind[CloseBracketToken](732,88): ]
SyntaxKind[QuestionToken](732,89): ?
SyntaxKind[Terminal](732,91): `)`
SyntaxKind[Identifier](732,95): Statement
SyntaxKind[OpenBracketToken](732,104): [
SyntaxKind[QuestionToken](732,105): ?
SyntaxKind[Identifier](732,106): Yield
SyntaxKind[CommaToken](732,111): ,
SyntaxKind[QuestionToken](732,113): ?
SyntaxKind[Identifier](732,114): Return
SyntaxKind[CloseBracketToken](732,120): ]
SyntaxKind[LineTerminatorToken](733,1): «line terminator»
SyntaxKind[Terminal](733,2): `for`
SyntaxKind[Terminal](733,8): `(`
SyntaxKind[OpenBracketToken](733,12): [
SyntaxKind[LookaheadKeyword](733,13): lookahead
SyntaxKind[LessThanExclamationToken](733,23): <!
SyntaxKind[OpenBraceToken](733,26): {
SyntaxKind[Terminal](733,28): `let`
SyntaxKind[Terminal](733,34): `[`
SyntaxKind[CloseBraceToken](733,38): }
SyntaxKind[CloseBracketToken](733,39): ]
SyntaxKind[Identifier](733,41): LeftHandSideExpression
SyntaxKind[OpenBracketToken](733,63): [
SyntaxKind[QuestionToken](733,64): ?
SyntaxKind[Identifier](733,65): Yield
SyntaxKind[CloseBracketToken](733,70): ]
SyntaxKind[Terminal](733,72): `in`
SyntaxKind[Identifier](733,77): Expression
SyntaxKind[OpenBracketToken](733,87): [
SyntaxKind[Identifier](733,88): In
SyntaxKind[CommaToken](733,90): ,
SyntaxKind[QuestionToken](733,92): ?
SyntaxKind[Identifier](733,93): Yield
SyntaxKind[CloseBracketToken](733,98): ]
SyntaxKind[Terminal](733,100): `)`
SyntaxKind[Identifier](733,104): Statement
SyntaxKind[OpenBracketToken](733,113): [
SyntaxKind[QuestionToken](733,114): ?
SyntaxKind[Identifier](733,115): Yield
SyntaxKind[CommaToken](733,120): ,
SyntaxKind[QuestionToken](733,122): ?
SyntaxKind[Identifier](733,123): Return
SyntaxKind[CloseBracketToken](733,129): ]
SyntaxKind[LineTerminatorToken](734,1): «line terminator»
SyntaxKind[Terminal](734,2): `for`
SyntaxKind[Terminal](734,8): `(`
SyntaxKind[Terminal](734,12): `var`
SyntaxKind[Identifier](734,18): ForBinding
SyntaxKind[OpenBracketToken](734,28): [
SyntaxKind[QuestionToken](734,29): ?
SyntaxKind[Identifier](734,30): Yield
SyntaxKind[CloseBracketToken](734,35): ]
SyntaxKind[Terminal](734,37): `in`
SyntaxKind[Identifier](734,42): Expression
SyntaxKind[OpenBracketToken](734,52): [
SyntaxKind[Identifier](734,53): In
SyntaxKind[CommaToken](734,55): ,
SyntaxKind[QuestionToken](734,57): ?
SyntaxKind[Identifier](734,58): Yield
SyntaxKind[CloseBracketToken](734,63): ]
SyntaxKind[Terminal](734,65): `)`
SyntaxKind[Identifier](734,69): Statement
SyntaxKind[OpenBracketToken](734,78): [
SyntaxKind[QuestionToken](734,79): ?
SyntaxKind[Identifier](734,80): Yield
SyntaxKind[CommaToken](734,85): ,
SyntaxKind[QuestionToken](734,87): ?
SyntaxKind[Identifier](734,88): Return
SyntaxKind[CloseBracketToken](734,94): ]
SyntaxKind[LineTerminatorToken](735,1): «line terminator»
SyntaxKind[Terminal](735,2): `for`
SyntaxKind[Terminal](735,8): `(`
SyntaxKind[Identifier](735,12): ForDeclaration
SyntaxKind[OpenBracketToken](735,26): [
SyntaxKind[QuestionToken](735,27): ?
SyntaxKind[Identifier](735,28): Yield
SyntaxKind[CloseBracketToken](735,33): ]
SyntaxKind[Terminal](735,35): `in`
SyntaxKind[Identifier](735,40): Expression
SyntaxKind[OpenBracketToken](735,50): [
SyntaxKind[Identifier](735,51): In
SyntaxKind[CommaToken](735,53): ,
SyntaxKind[QuestionToken](735,55): ?
SyntaxKind[Identifier](735,56): Yield
SyntaxKind[CloseBracketToken](735,61): ]
SyntaxKind[Terminal](735,63): `)`
SyntaxKind[Identifier](735,67): Statement
SyntaxKind[OpenBracketToken](735,76): [
SyntaxKind[QuestionToken](735,77): ?
SyntaxKind[Identifier](735,78): Yield
SyntaxKind[CommaToken](735,83): ,
SyntaxKind[QuestionToken](735,85): ?
SyntaxKind[Identifier](735,86): Return
SyntaxKind[CloseBracketToken](735,92): ]
SyntaxKind[LineTerminatorToken](736,1): «line terminator»
SyntaxKind[Terminal](736,2): `for`
SyntaxKind[Terminal](736,8): `(`
SyntaxKind[OpenBracketToken](736,12): [
SyntaxKind[LookaheadKeyword](736,13): lookahead
SyntaxKind[ExclamationEqualsToken](736,23): !=
SyntaxKind[Terminal](736,26): `let`
SyntaxKind[CloseBracketToken](736,31): ]
SyntaxKind[Identifier](736,33): LeftHandSideExpression
SyntaxKind[OpenBracketToken](736,55): [
SyntaxKind[QuestionToken](736,56): ?
SyntaxKind[Identifier](736,57): Yield
SyntaxKind[CloseBracketToken](736,62): ]
SyntaxKind[Terminal](736,64): `of`
SyntaxKind[Identifier](736,69): AssignmentExpression
SyntaxKind[OpenBracketToken](736,89): [
SyntaxKind[Identifier](736,90): In
SyntaxKind[CommaToken](736,92): ,
SyntaxKind[QuestionToken](736,94): ?
SyntaxKind[Identifier](736,95): Yield
SyntaxKind[CloseBracketToken](736,100): ]
SyntaxKind[Terminal](736,102): `)`
SyntaxKind[Identifier](736,106): Statement
SyntaxKind[OpenBracketToken](736,115): [
SyntaxKind[QuestionToken](736,116): ?
SyntaxKind[Identifier](736,117): Yield
SyntaxKind[CommaToken](736,122): ,
SyntaxKind[QuestionToken](736,124): ?
SyntaxKind[Identifier](736,125): Return
SyntaxKind[CloseBracketToken](736,131): ]
SyntaxKind[LineTerminatorToken](737,1): «line terminator»
SyntaxKind[Terminal](737,2): `for`
SyntaxKind[Terminal](737,8): `(`
SyntaxKind[Terminal](737,12): `var`
SyntaxKind[Identifier](737,18): ForBinding
SyntaxKind[OpenBracketToken](737,28): [
SyntaxKind[QuestionToken](737,29): ?
SyntaxKind[Identifier](737,30): Yield
SyntaxKind[CloseBracketToken](737,35): ]
SyntaxKind[Terminal](737,37): `of`
SyntaxKind[Identifier](737,42): AssignmentExpression
SyntaxKind[OpenBracketToken](737,62): [
SyntaxKind[Identifier](737,63): In
SyntaxKind[CommaToken](737,65): ,
SyntaxKind[QuestionToken](737,67): ?
SyntaxKind[Identifier](737,68): Yield
SyntaxKind[CloseBracketToken](737,73): ]
SyntaxKind[Terminal](737,75): `)`
SyntaxKind[Identifier](737,79): Statement
SyntaxKind[OpenBracketToken](737,88): [
SyntaxKind[QuestionToken](737,89): ?
SyntaxKind[Identifier](737,90): Yield
SyntaxKind[CommaToken](737,95): ,
SyntaxKind[QuestionToken](737,97): ?
SyntaxKind[Identifier](737,98): Return
SyntaxKind[CloseBracketToken](737,104): ]
SyntaxKind[LineTerminatorToken](738,1): «line terminator»
SyntaxKind[Terminal](738,2): `for`
SyntaxKind[Terminal](738,8): `(`
SyntaxKind[Identifier](738,12): ForDeclaration
SyntaxKind[OpenBracketToken](738,26): [
SyntaxKind[QuestionToken](738,27): ?
SyntaxKind[Identifier](738,28): Yield
SyntaxKind[CloseBracketToken](738,33): ]
SyntaxKind[Terminal](738,35): `of`
SyntaxKind[Identifier](738,40): AssignmentExpression
SyntaxKind[OpenBracketToken](738,60): [
SyntaxKind[Identifier](738,61): In
SyntaxKind[CommaToken](738,63): ,
SyntaxKind[QuestionToken](738,65): ?
SyntaxKind[Identifier](738,66): Yield
SyntaxKind[CloseBracketToken](738,71): ]
SyntaxKind[Terminal](738,73): `)`
SyntaxKind[Identifier](738,77): Statement
SyntaxKind[OpenBracketToken](738,86): [
SyntaxKind[QuestionToken](738,87): ?
SyntaxKind[Identifier](738,88): Yield
SyntaxKind[CommaToken](738,93): ,
SyntaxKind[QuestionToken](738,95): ?
SyntaxKind[Identifier](738,96): Return
SyntaxKind[CloseBracketToken](738,102): ]
SyntaxKind[LineTerminatorToken](739,1): «line terminator»
SyntaxKind[DedentToken](739,1): «dedent»
SyntaxKind[LineTerminatorToken](740,1): «line terminator»
SyntaxKind[Identifier](740,1): ForDeclaration
SyntaxKind[OpenBracketToken](740,15): [
SyntaxKind[Identifier](740,16): Yield
SyntaxKind[CloseBracketToken](740,21): ]
SyntaxKind[ColonToken](740,23): :
SyntaxKind[LineTerminatorToken](741,1): «line terminator»
SyntaxKind[IndentToken](741,1): «indent»
SyntaxKind[Identifier](741,2): LetOrConst
SyntaxKind[Identifier](741,13): ForBinding
SyntaxKind[OpenBracketToken](741,23): [
SyntaxKind[QuestionToken](741,24): ?
SyntaxKind[Identifier](741,25): Yield
SyntaxKind[CloseBracketToken](741,30): ]
SyntaxKind[LineTerminatorToken](742,1): «line terminator»
SyntaxKind[DedentToken](742,1): «dedent»
SyntaxKind[LineTerminatorToken](743,1): «line terminator»
SyntaxKind[Identifier](743,1): ForBinding
SyntaxKind[OpenBracketToken](743,11): [
SyntaxKind[Identifier](743,12): Yield
SyntaxKind[CloseBracketToken](743,17): ]
SyntaxKind[ColonToken](743,19): :
SyntaxKind[LineTerminatorToken](744,1): «line terminator»
SyntaxKind[IndentToken](744,1): «indent»
SyntaxKind[Identifier](744,2): BindingIdentifier
SyntaxKind[OpenBracketToken](744,19): [
SyntaxKind[QuestionToken](744,20): ?
SyntaxKind[Identifier](744,21): Yield
SyntaxKind[CloseBracketToken](744,26): ]
SyntaxKind[LineTerminatorToken](745,1): «line terminator»
SyntaxKind[Identifier](745,2): BindingPattern
SyntaxKind[OpenBracketToken](745,16): [
SyntaxKind[QuestionToken](745,17): ?
SyntaxKind[Identifier](745,18): Yield
SyntaxKind[CloseBracketToken](745,23): ]
SyntaxKind[LineTerminatorToken](746,1): «line terminator»
SyntaxKind[DedentToken](746,1): «dedent»
SyntaxKind[LineTerminatorToken](747,1): «line terminator»
SyntaxKind[Identifier](747,1): ContinueStatement
SyntaxKind[OpenBracketToken](747,18): [
SyntaxKind[Identifier](747,19): Yield
SyntaxKind[CloseBracketToken](747,24): ]
SyntaxKind[ColonToken](747,26): :
SyntaxKind[LineTerminatorToken](748,1): «line terminator»
SyntaxKind[IndentToken](748,1): «indent»
SyntaxKind[Terminal](748,2): `continue`
SyntaxKind[Terminal](748,13): `;`
SyntaxKind[LineTerminatorToken](749,1): «line terminator»
SyntaxKind[Terminal](749,2): `continue`
SyntaxKind[OpenBracketToken](749,13): [
SyntaxKind[NoKeyword](749,14): no
SyntaxKind[Identifier](749,17): LineTerminator
SyntaxKind[HereKeyword](749,32): here
SyntaxKind[CloseBracketToken](749,36): ]
SyntaxKind[Identifier](749,38): LabelIdentifier
SyntaxKind[OpenBracketToken](749,53): [
SyntaxKind[QuestionToken](749,54): ?
SyntaxKind[Identifier](749,55): Yield
SyntaxKind[CloseBracketToken](749,60): ]
SyntaxKind[Terminal](749,62): `;`
SyntaxKind[LineTerminatorToken](750,1): «line terminator»
SyntaxKind[DedentToken](750,1): «dedent»
SyntaxKind[LineTerminatorToken](751,1): «line terminator»
SyntaxKind[Identifier](751,1): BreakStatement
SyntaxKind[OpenBracketToken](751,15): [
SyntaxKind[Identifier](751,16): Yield
SyntaxKind[CloseBracketToken](751,21): ]
SyntaxKind[ColonToken](751,24): :
SyntaxKind[LineTerminatorToken](752,1): «line terminator»
SyntaxKind[IndentToken](752,1): «indent»
SyntaxKind[Terminal](752,2): `break`
SyntaxKind[Terminal](752,10): `;`
SyntaxKind[LineTerminatorToken](753,1): «line terminator»
SyntaxKind[Terminal](753,2): `break`
SyntaxKind[OpenBracketToken](753,10): [
SyntaxKind[NoKeyword](753,11): no
SyntaxKind[Identifier](753,14): LineTerminator
SyntaxKind[HereKeyword](753,29): here
SyntaxKind[CloseBracketToken](753,33): ]
SyntaxKind[Identifier](753,35): LabelIdentifier
SyntaxKind[OpenBracketToken](753,50): [
SyntaxKind[QuestionToken](753,51): ?
SyntaxKind[Identifier](753,52): Yield
SyntaxKind[CloseBracketToken](753,57): ]
SyntaxKind[Terminal](753,59): `;`
SyntaxKind[LineTerminatorToken](754,1): «line terminator»
SyntaxKind[DedentToken](754,1): «dedent»
SyntaxKind[LineTerminatorToken](755,1): «line terminator»
SyntaxKind[Identifier](755,1): ReturnStatement
SyntaxKind[OpenBracketToken](755,16): [
SyntaxKind[Identifier](755,17): Yield
SyntaxKind[CloseBracketToken](755,22): ]
SyntaxKind[ColonToken](755,24): :
SyntaxKind[LineTerminatorToken](756,1): «line terminator»
SyntaxKind[IndentToken](756,1): «indent»
SyntaxKind[Terminal](756,2): `return`
SyntaxKind[Terminal](756,11): `;`
SyntaxKind[LineTerminatorToken](757,1): «line terminator»
SyntaxKind[Terminal](757,2): `return`
SyntaxKind[OpenBracketToken](757,11): [
SyntaxKind[NoKeyword](757,12): no
SyntaxKind[Identifier](757,15): LineTerminator
SyntaxKind[HereKeyword](757,30): here
SyntaxKind[CloseBracketToken](757,34): ]
SyntaxKind[Identifier](757,36): Expression
SyntaxKind[OpenBracketToken](757,46): [
SyntaxKind[Identifier](757,47): In
SyntaxKind[CommaToken](757,49): ,
SyntaxKind[QuestionToken](757,51): ?
SyntaxKind[Identifier](757,52): Yield
SyntaxKind[CloseBracketToken](757,57): ]
SyntaxKind[Terminal](757,59): `;`
SyntaxKind[LineTerminatorToken](758,1): «line terminator»
SyntaxKind[DedentToken](758,1): «dedent»
SyntaxKind[LineTerminatorToken](759,1): «line terminator»
SyntaxKind[Identifier](759,1): WithStatement
SyntaxKind[OpenBracketToken](759,14): [
SyntaxKind[Identifier](759,15): Yield
SyntaxKind[CommaToken](759,20): ,
SyntaxKind[Identifier](759,22): Return
SyntaxKind[CloseBracketToken](759,28): ]
SyntaxKind[ColonToken](759,30): :
SyntaxKind[LineTerminatorToken](760,1): «line terminator»
SyntaxKind[IndentToken](760,1): «indent»
SyntaxKind[Terminal](760,2): `with`
SyntaxKind[Terminal](760,9): `(`
SyntaxKind[Identifier](760,13): Expression
SyntaxKind[OpenBracketToken](760,23): [
SyntaxKind[Identifier](760,24): In
SyntaxKind[CommaToken](760,26): ,
SyntaxKind[QuestionToken](760,28): ?
SyntaxKind[Identifier](760,29): Yield
SyntaxKind[CloseBracketToken](760,34): ]
SyntaxKind[Terminal](760,36): `)`
SyntaxKind[Identifier](760,40): Statement
SyntaxKind[OpenBracketToken](760,49): [
SyntaxKind[QuestionToken](760,50): ?
SyntaxKind[Identifier](760,51): Yield
SyntaxKind[CommaToken](760,56): ,
SyntaxKind[QuestionToken](760,58): ?
SyntaxKind[Identifier](760,59): Return
SyntaxKind[CloseBracketToken](760,65): ]
SyntaxKind[LineTerminatorToken](761,1): «line terminator»
SyntaxKind[DedentToken](761,1): «dedent»
SyntaxKind[LineTerminatorToken](762,1): «line terminator»
SyntaxKind[Identifier](762,1): SwitchStatement
SyntaxKind[OpenBracketToken](762,16): [
SyntaxKind[Identifier](762,17): Yield
SyntaxKind[CommaToken](762,22): ,
SyntaxKind[Identifier](762,24): Return
SyntaxKind[CloseBracketToken](762,30): ]
SyntaxKind[ColonToken](762,32): :
SyntaxKind[LineTerminatorToken](763,1): «line terminator»
SyntaxKind[IndentToken](763,1): «indent»
SyntaxKind[Terminal](763,2): `switch`
SyntaxKind[Terminal](763,11): `(`
SyntaxKind[Identifier](763,15): Expression
SyntaxKind[OpenBracketToken](763,25): [
SyntaxKind[Identifier](763,26): In
SyntaxKind[CommaToken](763,28): ,
SyntaxKind[QuestionToken](763,30): ?
SyntaxKind[Identifier](763,31): Yield
SyntaxKind[CloseBracketToken](763,36): ]
SyntaxKind[Terminal](763,38): `)`
SyntaxKind[Identifier](763,42): CaseBlock
SyntaxKind[OpenBracketToken](763,51): [
SyntaxKind[QuestionToken](763,52): ?
SyntaxKind[Identifier](763,53): Yield
SyntaxKind[CommaToken](763,58): ,
SyntaxKind[QuestionToken](763,60): ?
SyntaxKind[Identifier](763,61): Return
SyntaxKind[CloseBracketToken](763,67): ]
SyntaxKind[LineTerminatorToken](764,1): «line terminator»
SyntaxKind[DedentToken](764,1): «dedent»
SyntaxKind[LineTerminatorToken](765,1): «line terminator»
SyntaxKind[Identifier](765,1): CaseBlock
SyntaxKind[OpenBracketToken](765,10): [
SyntaxKind[Identifier](765,11): Yield
SyntaxKind[CommaToken](765,16): ,
SyntaxKind[Identifier](765,18): Return
SyntaxKind[CloseBracketToken](765,24): ]
SyntaxKind[ColonToken](765,26): :
SyntaxKind[LineTerminatorToken](766,1): «line terminator»
SyntaxKind[IndentToken](766,1): «indent»
SyntaxKind[Terminal](766,2): `{`
SyntaxKind[Identifier](766,6): CaseClauses
SyntaxKind[OpenBracketToken](766,17): [
SyntaxKind[QuestionToken](766,18): ?
SyntaxKind[Identifier](766,19): Yield
SyntaxKind[CommaToken](766,24): ,
SyntaxKind[QuestionToken](766,26): ?
SyntaxKind[Identifier](766,27): Return
SyntaxKind[CloseBracketToken](766,33): ]
SyntaxKind[QuestionToken](766,34): ?
SyntaxKind[Terminal](766,36): `}`
SyntaxKind[LineTerminatorToken](767,1): «line terminator»
SyntaxKind[Terminal](767,2): `{`
SyntaxKind[Identifier](767,6): CaseClauses
SyntaxKind[OpenBracketToken](767,17): [
SyntaxKind[QuestionToken](767,18): ?
SyntaxKind[Identifier](767,19): Yield
SyntaxKind[CommaToken](767,24): ,
SyntaxKind[QuestionToken](767,26): ?
SyntaxKind[Identifier](767,27): Return
SyntaxKind[CloseBracketToken](767,33): ]
SyntaxKind[QuestionToken](767,34): ?
SyntaxKind[Identifier](767,36): DefaultClause
SyntaxKind[OpenBracketToken](767,49): [
SyntaxKind[QuestionToken](767,50): ?
SyntaxKind[Identifier](767,51): Yield
SyntaxKind[CommaToken](767,56): ,
SyntaxKind[QuestionToken](767,58): ?
SyntaxKind[Identifier](767,59): Return
SyntaxKind[CloseBracketToken](767,65): ]
SyntaxKind[Identifier](767,67): CaseClauses
SyntaxKind[OpenBracketToken](767,78): [
SyntaxKind[QuestionToken](767,79): ?
SyntaxKind[Identifier](767,80): Yield
SyntaxKind[CommaToken](767,85): ,
SyntaxKind[QuestionToken](767,87): ?
SyntaxKind[Identifier](767,88): Return
SyntaxKind[CloseBracketToken](767,94): ]
SyntaxKind[QuestionToken](767,95): ?
SyntaxKind[Terminal](767,97): `}`
SyntaxKind[LineTerminatorToken](768,1): «line terminator»
SyntaxKind[DedentToken](768,1): «dedent»
SyntaxKind[LineTerminatorToken](769,1): «line terminator»
SyntaxKind[Identifier](769,1): CaseClauses
SyntaxKind[OpenBracketToken](769,12): [
SyntaxKind[Identifier](769,13): Yield
SyntaxKind[CommaToken](769,18): ,
SyntaxKind[Identifier](769,20): Return
SyntaxKind[CloseBracketToken](769,26): ]
SyntaxKind[ColonToken](769,28): :
SyntaxKind[LineTerminatorToken](770,1): «line terminator»
SyntaxKind[IndentToken](770,1): «indent»
SyntaxKind[Identifier](770,2): CaseClause
SyntaxKind[OpenBracketToken](770,12): [
SyntaxKind[QuestionToken](770,13): ?
SyntaxKind[Identifier](770,14): Yield
SyntaxKind[CommaToken](770,19): ,
SyntaxKind[QuestionToken](770,21): ?
SyntaxKind[Identifier](770,22): Return
SyntaxKind[CloseBracketToken](770,28): ]
SyntaxKind[LineTerminatorToken](771,1): «line terminator»
SyntaxKind[Identifier](771,2): CaseClauses
SyntaxKind[OpenBracketToken](771,13): [
SyntaxKind[QuestionToken](771,14): ?
SyntaxKind[Identifier](771,15): Yield
SyntaxKind[CommaToken](771,20): ,
SyntaxKind[QuestionToken](771,22): ?
SyntaxKind[Identifier](771,23): Return
SyntaxKind[CloseBracketToken](771,29): ]
SyntaxKind[Identifier](771,31): CaseClause
SyntaxKind[OpenBracketToken](771,41): [
SyntaxKind[QuestionToken](771,42): ?
SyntaxKind[Identifier](771,43): Yield
SyntaxKind[CommaToken](771,48): ,
SyntaxKind[QuestionToken](771,50): ?
SyntaxKind[Identifier](771,51): Return
SyntaxKind[CloseBracketToken](771,57): ]
SyntaxKind[LineTerminatorToken](772,1): «line terminator»
SyntaxKind[DedentToken](772,1): «dedent»
SyntaxKind[LineTerminatorToken](773,1): «line terminator»
SyntaxKind[Identifier](773,1): CaseClause
SyntaxKind[OpenBracketToken](773,11): [
SyntaxKind[Identifier](773,12): Yield
SyntaxKind[CommaToken](773,17): ,
SyntaxKind[Identifier](773,19): Return
SyntaxKind[CloseBracketToken](773,25): ]
SyntaxKind[ColonToken](773,27): :
SyntaxKind[LineTerminatorToken](774,1): «line terminator»
SyntaxKind[IndentToken](774,1): «indent»
SyntaxKind[Terminal](774,2): `case`
SyntaxKind[Identifier](774,9): Expression
SyntaxKind[OpenBracketToken](774,19): [
SyntaxKind[Identifier](774,20): In
SyntaxKind[CommaToken](774,22): ,
SyntaxKind[QuestionToken](774,24): ?
SyntaxKind[Identifier](774,25): Yield
SyntaxKind[CloseBracketToken](774,30): ]
SyntaxKind[Terminal](774,32): `:`
SyntaxKind[Identifier](774,36): StatementList
SyntaxKind[OpenBracketToken](774,49): [
SyntaxKind[QuestionToken](774,50): ?
SyntaxKind[Identifier](774,51): Yield
SyntaxKind[CommaToken](774,56): ,
SyntaxKind[QuestionToken](774,58): ?
SyntaxKind[Identifier](774,59): Return
SyntaxKind[CloseBracketToken](774,65): ]
SyntaxKind[QuestionToken](774,66): ?
SyntaxKind[LineTerminatorToken](775,1): «line terminator»
SyntaxKind[DedentToken](775,1): «dedent»
SyntaxKind[LineTerminatorToken](776,1): «line terminator»
SyntaxKind[Identifier](776,1): DefaultClause
SyntaxKind[OpenBracketToken](776,14): [
SyntaxKind[Identifier](776,15): Yield
SyntaxKind[CommaToken](776,20): ,
SyntaxKind[Identifier](776,22): Return
SyntaxKind[CloseBracketToken](776,28): ]
SyntaxKind[ColonToken](776,30): :
SyntaxKind[LineTerminatorToken](777,1): «line terminator»
SyntaxKind[IndentToken](777,1): «indent»
SyntaxKind[Terminal](777,2): `default`
SyntaxKind[Terminal](777,12): `:`
SyntaxKind[Identifier](777,16): StatementList
SyntaxKind[OpenBracketToken](777,29): [
SyntaxKind[QuestionToken](777,30): ?
SyntaxKind[Identifier](777,31): Yield
SyntaxKind[CommaToken](777,36): ,
SyntaxKind[QuestionToken](777,38): ?
SyntaxKind[Identifier](777,39): Return
SyntaxKind[CloseBracketToken](777,45): ]
SyntaxKind[QuestionToken](777,46): ?
SyntaxKind[LineTerminatorToken](778,1): «line terminator»
SyntaxKind[DedentToken](778,1): «dedent»
SyntaxKind[LineTerminatorToken](779,1): «line terminator»
SyntaxKind[Identifier](779,1): LabelledStatement
SyntaxKind[OpenBracketToken](779,18): [
SyntaxKind[Identifier](779,19): Yield
SyntaxKind[CommaToken](779,24): ,
SyntaxKind[Identifier](779,26): Return
SyntaxKind[CloseBracketToken](779,32): ]
SyntaxKind[ColonToken](779,34): :
SyntaxKind[LineTerminatorToken](780,1): «line terminator»
SyntaxKind[IndentToken](780,1): «indent»
SyntaxKind[Identifier](780,2): LabelIdentifier
SyntaxKind[OpenBracketToken](780,17): [
SyntaxKind[QuestionToken](780,18): ?
SyntaxKind[Identifier](780,19): Yield
SyntaxKind[CloseBracketToken](780,24): ]
SyntaxKind[Terminal](780,26): `:`
SyntaxKind[Identifier](780,30): LabelledItem
SyntaxKind[OpenBracketToken](780,42): [
SyntaxKind[QuestionToken](780,43): ?
SyntaxKind[Identifier](780,44): Yield
SyntaxKind[CommaToken](780,49): ,
SyntaxKind[QuestionToken](780,51): ?
SyntaxKind[Identifier](780,52): Return
SyntaxKind[CloseBracketToken](780,58): ]
SyntaxKind[LineTerminatorToken](781,1): «line terminator»
SyntaxKind[DedentToken](781,1): «dedent»
SyntaxKind[LineTerminatorToken](782,1): «line terminator»
SyntaxKind[Identifier](782,1): LabelledItem
SyntaxKind[OpenBracketToken](782,13): [
SyntaxKind[Identifier](782,14): Yield
SyntaxKind[CommaToken](782,19): ,
SyntaxKind[Identifier](782,21): Return
SyntaxKind[CloseBracketToken](782,27): ]
SyntaxKind[ColonToken](782,29): :
SyntaxKind[LineTerminatorToken](783,1): «line terminator»
SyntaxKind[IndentToken](783,1): «indent»
SyntaxKind[Identifier](783,2): Statement
SyntaxKind[OpenBracketToken](783,11): [
SyntaxKind[QuestionToken](783,12): ?
SyntaxKind[Identifier](783,13): Yield
SyntaxKind[CommaToken](783,18): ,
SyntaxKind[QuestionToken](783,20): ?
SyntaxKind[Identifier](783,21): Return
SyntaxKind[CloseBracketToken](783,27): ]
SyntaxKind[LineTerminatorToken](784,1): «line terminator»
SyntaxKind[Identifier](784,2): FunctionDeclaration
SyntaxKind[OpenBracketToken](784,21): [
SyntaxKind[QuestionToken](784,22): ?
SyntaxKind[Identifier](784,23): Yield
SyntaxKind[CloseBracketToken](784,28): ]
SyntaxKind[LineTerminatorToken](785,1): «line terminator»
SyntaxKind[DedentToken](785,1): «dedent»
SyntaxKind[LineTerminatorToken](786,1): «line terminator»
SyntaxKind[Identifier](786,1): ThrowStatement
SyntaxKind[OpenBracketToken](786,15): [
SyntaxKind[Identifier](786,16): Yield
SyntaxKind[CloseBracketToken](786,21): ]
SyntaxKind[ColonToken](786,23): :
SyntaxKind[LineTerminatorToken](787,1): «line terminator»
SyntaxKind[IndentToken](787,1): «indent»
SyntaxKind[Terminal](787,2): `throw`
SyntaxKind[OpenBracketToken](787,10): [
SyntaxKind[NoKeyword](787,11): no
SyntaxKind[Identifier](787,14): LineTerminator
SyntaxKind[HereKeyword](787,29): here
SyntaxKind[CloseBracketToken](787,33): ]
SyntaxKind[Identifier](787,35): Expression
SyntaxKind[OpenBracketToken](787,45): [
SyntaxKind[Identifier](787,46): In
SyntaxKind[CommaToken](787,48): ,
SyntaxKind[QuestionToken](787,50): ?
SyntaxKind[Identifier](787,51): Yield
SyntaxKind[CloseBracketToken](787,56): ]
SyntaxKind[Terminal](787,58): `;`
SyntaxKind[LineTerminatorToken](788,1): «line terminator»
SyntaxKind[DedentToken](788,1): «dedent»
SyntaxKind[LineTerminatorToken](789,1): «line terminator»
SyntaxKind[Identifier](789,1): TryStatement
SyntaxKind[OpenBracketToken](789,13): [
SyntaxKind[Identifier](789,14): Yield
SyntaxKind[CommaToken](789,19): ,
SyntaxKind[Identifier](789,21): Return
SyntaxKind[CloseBracketToken](789,27): ]
SyntaxKind[ColonToken](789,29): :
SyntaxKind[LineTerminatorToken](790,1): «line terminator»
SyntaxKind[IndentToken](790,1): «indent»
SyntaxKind[Terminal](790,2): `try`
SyntaxKind[Identifier](790,8): Block
SyntaxKind[OpenBracketToken](790,13): [
SyntaxKind[QuestionToken](790,14): ?
SyntaxKind[Identifier](790,15): Yield
SyntaxKind[CommaToken](790,20): ,
SyntaxKind[QuestionToken](790,22): ?
SyntaxKind[Identifier](790,23): Return
SyntaxKind[CloseBracketToken](790,29): ]
SyntaxKind[Identifier](790,31): Catch
SyntaxKind[OpenBracketToken](790,36): [
SyntaxKind[QuestionToken](790,37): ?
SyntaxKind[Identifier](790,38): Yield
SyntaxKind[CommaToken](790,43): ,
SyntaxKind[QuestionToken](790,45): ?
SyntaxKind[Identifier](790,46): Return
SyntaxKind[CloseBracketToken](790,52): ]
SyntaxKind[LineTerminatorToken](791,1): «line terminator»
SyntaxKind[Terminal](791,2): `try`
SyntaxKind[Identifier](791,8): Block
SyntaxKind[OpenBracketToken](791,13): [
SyntaxKind[QuestionToken](791,14): ?
SyntaxKind[Identifier](791,15): Yield
SyntaxKind[CommaToken](791,20): ,
SyntaxKind[QuestionToken](791,22): ?
SyntaxKind[Identifier](791,23): Return
SyntaxKind[CloseBracketToken](791,29): ]
SyntaxKind[Identifier](791,31): Finally
SyntaxKind[OpenBracketToken](791,38): [
SyntaxKind[QuestionToken](791,39): ?
SyntaxKind[Identifier](791,40): Yield
SyntaxKind[CommaToken](791,45): ,
SyntaxKind[QuestionToken](791,47): ?
SyntaxKind[Identifier](791,48): Return
SyntaxKind[CloseBracketToken](791,54): ]
SyntaxKind[LineTerminatorToken](792,1): «line terminator»
SyntaxKind[Terminal](792,2): `try`
SyntaxKind[Identifier](792,8): Block
SyntaxKind[OpenBracketToken](792,13): [
SyntaxKind[QuestionToken](792,14): ?
SyntaxKind[Identifier](792,15): Yield
SyntaxKind[CommaToken](792,20): ,
SyntaxKind[QuestionToken](792,22): ?
SyntaxKind[Identifier](792,23): Return
SyntaxKind[CloseBracketToken](792,29): ]
SyntaxKind[Identifier](792,31): Catch
SyntaxKind[OpenBracketToken](792,36): [
SyntaxKind[QuestionToken](792,37): ?
SyntaxKind[Identifier](792,38): Yield
SyntaxKind[CommaToken](792,43): ,
SyntaxKind[QuestionToken](792,45): ?
SyntaxKind[Identifier](792,46): Return
SyntaxKind[CloseBracketToken](792,52): ]
SyntaxKind[Identifier](792,54): Finally
SyntaxKind[OpenBracketToken](792,61): [
SyntaxKind[QuestionToken](792,62): ?
SyntaxKind[Identifier](792,63): Yield
SyntaxKind[CommaToken](792,68): ,
SyntaxKind[QuestionToken](792,70): ?
SyntaxKind[Identifier](792,71): Return
SyntaxKind[CloseBracketToken](792,77): ]
SyntaxKind[LineTerminatorToken](793,1): «line terminator»
SyntaxKind[DedentToken](793,1): «dedent»
SyntaxKind[LineTerminatorToken](794,1): «line terminator»
SyntaxKind[Identifier](794,1): Catch
SyntaxKind[OpenBracketToken](794,6): [
SyntaxKind[Identifier](794,7): Yield
SyntaxKind[CommaToken](794,12): ,
SyntaxKind[Identifier](794,14): Return
SyntaxKind[CloseBracketToken](794,20): ]
SyntaxKind[ColonToken](794,22): :
SyntaxKind[LineTerminatorToken](795,1): «line terminator»
SyntaxKind[IndentToken](795,1): «indent»
SyntaxKind[Terminal](795,2): `catch`
SyntaxKind[Terminal](795,10): `(`
SyntaxKind[Identifier](795,14): CatchParameter
SyntaxKind[OpenBracketToken](795,28): [
SyntaxKind[QuestionToken](795,29): ?
SyntaxKind[Identifier](795,30): Yield
SyntaxKind[CloseBracketToken](795,35): ]
SyntaxKind[Terminal](795,37): `)`
SyntaxKind[Identifier](795,41): Block
SyntaxKind[OpenBracketToken](795,46): [
SyntaxKind[QuestionToken](795,47): ?
SyntaxKind[Identifier](795,48): Yield
SyntaxKind[CommaToken](795,53): ,
SyntaxKind[QuestionToken](795,55): ?
SyntaxKind[Identifier](795,56): Return
SyntaxKind[CloseBracketToken](795,62): ]
SyntaxKind[LineTerminatorToken](796,1): «line terminator»
SyntaxKind[DedentToken](796,1): «dedent»
SyntaxKind[LineTerminatorToken](797,1): «line terminator»
SyntaxKind[Identifier](797,1): Finally
SyntaxKind[OpenBracketToken](797,8): [
SyntaxKind[Identifier](797,9): Yield
SyntaxKind[CommaToken](797,14): ,
SyntaxKind[Identifier](797,16): Return
SyntaxKind[CloseBracketToken](797,22): ]
SyntaxKind[ColonToken](797,24): :
SyntaxKind[LineTerminatorToken](798,1): «line terminator»
SyntaxKind[IndentToken](798,1): «indent»
SyntaxKind[Terminal](798,2): `finally`
SyntaxKind[Identifier](798,12): Block
SyntaxKind[OpenBracketToken](798,17): [
SyntaxKind[QuestionToken](798,18): ?
SyntaxKind[Identifier](798,19): Yield
SyntaxKind[CommaToken](798,24): ,
SyntaxKind[QuestionToken](798,26): ?
SyntaxKind[Identifier](798,27): Return
SyntaxKind[CloseBracketToken](798,33): ]
SyntaxKind[LineTerminatorToken](799,1): «line terminator»
SyntaxKind[DedentToken](799,1): «dedent»
SyntaxKind[LineTerminatorToken](800,1): «line terminator»
SyntaxKind[Identifier](800,1): CatchParameter
SyntaxKind[OpenBracketToken](800,15): [
SyntaxKind[Identifier](800,16): Yield
SyntaxKind[CloseBracketToken](800,21): ]
SyntaxKind[ColonToken](800,23): :
SyntaxKind[LineTerminatorToken](801,1): «line terminator»
SyntaxKind[IndentToken](801,1): «indent»
SyntaxKind[Identifier](801,2): BindingIdentifier
SyntaxKind[OpenBracketToken](801,19): [
SyntaxKind[QuestionToken](801,20): ?
SyntaxKind[Identifier](801,21): Yield
SyntaxKind[CloseBracketToken](801,26): ]
SyntaxKind[LineTerminatorToken](802,1): «line terminator»
SyntaxKind[Identifier](802,2): BindingPattern
SyntaxKind[OpenBracketToken](802,16): [
SyntaxKind[QuestionToken](802,17): ?
SyntaxKind[Identifier](802,18): Yield
SyntaxKind[CloseBracketToken](802,23): ]
SyntaxKind[LineTerminatorToken](803,1): «line terminator»
SyntaxKind[DedentToken](803,1): «dedent»
SyntaxKind[LineTerminatorToken](804,1): «line terminator»
SyntaxKind[Identifier](804,1): DebuggerStatement
SyntaxKind[ColonToken](804,19): :
SyntaxKind[LineTerminatorToken](805,1): «line terminator»
SyntaxKind[IndentToken](805,1): «indent»
SyntaxKind[Terminal](805,2): `debugger`
SyntaxKind[Terminal](805,13): `;`
SyntaxKind[LineTerminatorToken](806,1): «line terminator»
SyntaxKind[DedentToken](806,1): «dedent»
SyntaxKind[LineTerminatorToken](807,1): «line terminator»
SyntaxKind[LineTerminatorToken](808,1): «line terminator»
SyntaxKind[LineTerminatorToken](809,1): «line terminator»
SyntaxKind[Identifier](809,1): FunctionDeclaration
SyntaxKind[OpenBracketToken](809,20): [
SyntaxKind[Identifier](809,21): Yield
SyntaxKind[CommaToken](809,26): ,
SyntaxKind[Identifier](809,28): Default
SyntaxKind[CloseBracketToken](809,35): ]
SyntaxKind[ColonToken](809,38): :
SyntaxKind[LineTerminatorToken](810,1): «line terminator»
SyntaxKind[IndentToken](810,1): «indent»
SyntaxKind[Terminal](810,2): `function`
SyntaxKind[Identifier](810,13): BindingIdentifier
SyntaxKind[OpenBracketToken](810,30): [
SyntaxKind[QuestionToken](810,31): ?
SyntaxKind[Identifier](810,32): Yield
SyntaxKind[CloseBracketToken](810,37): ]
SyntaxKind[Terminal](810,39): `(`
SyntaxKind[Identifier](810,43): FormalParameters
SyntaxKind[Terminal](810,60): `)`
SyntaxKind[Terminal](810,64): `{`
SyntaxKind[Identifier](810,68): FunctionBody
SyntaxKind[Terminal](810,81): `}`
SyntaxKind[LineTerminatorToken](811,1): «line terminator»
SyntaxKind[OpenBracketToken](811,2): [
SyntaxKind[PlusToken](811,3): +
SyntaxKind[Identifier](811,4): Default
SyntaxKind[CloseBracketToken](811,11): ]
SyntaxKind[Terminal](811,13): `function`
SyntaxKind[Terminal](811,24): `(`
SyntaxKind[Identifier](811,28): FormalParameters
SyntaxKind[Terminal](811,45): `)`
SyntaxKind[Terminal](811,49): `{`
SyntaxKind[Identifier](811,53): FunctionBody
SyntaxKind[Terminal](811,66): `}`
SyntaxKind[LineTerminatorToken](812,1): «line terminator»
SyntaxKind[DedentToken](812,1): «dedent»
SyntaxKind[LineTerminatorToken](813,1): «line terminator»
SyntaxKind[Identifier](813,1): FunctionExpression
SyntaxKind[ColonToken](813,20): :
SyntaxKind[LineTerminatorToken](814,1): «line terminator»
SyntaxKind[IndentToken](814,1): «indent»
SyntaxKind[Terminal](814,2): `function`
SyntaxKind[Identifier](814,13): BindingIdentifier
SyntaxKind[QuestionToken](814,30): ?
SyntaxKind[Terminal](814,32): `(`
SyntaxKind[Identifier](814,36): FormalParameters
SyntaxKind[Terminal](814,53): `)`
SyntaxKind[Terminal](814,57): `{`
SyntaxKind[Identifier](814,61): FunctionBody
SyntaxKind[Terminal](814,74): `}`
SyntaxKind[LineTerminatorToken](815,1): «line terminator»
SyntaxKind[DedentToken](815,1): «dedent»
SyntaxKind[LineTerminatorToken](816,1): «line terminator»
SyntaxKind[Identifier](816,1): StrictFormalParameters
SyntaxKind[OpenBracketToken](816,23): [
SyntaxKind[Identifier](816,24): Yield
SyntaxKind[CloseBracketToken](816,29): ]
SyntaxKind[ColonToken](816,31): :
SyntaxKind[LineTerminatorToken](817,1): «line terminator»
SyntaxKind[IndentToken](817,1): «indent»
SyntaxKind[Identifier](817,2): FormalParameters
SyntaxKind[OpenBracketToken](817,18): [
SyntaxKind[QuestionToken](817,19): ?
SyntaxKind[Identifier](817,20): Yield
SyntaxKind[CloseBracketToken](817,25): ]
SyntaxKind[LineTerminatorToken](818,1): «line terminator»
SyntaxKind[DedentToken](818,1): «dedent»
SyntaxKind[LineTerminatorToken](819,1): «line terminator»
SyntaxKind[Identifier](819,1): FormalParameters
SyntaxKind[OpenBracketToken](819,17): [
SyntaxKind[Identifier](819,18): Yield
SyntaxKind[CloseBracketToken](819,23): ]
SyntaxKind[ColonToken](819,25): :
SyntaxKind[LineTerminatorToken](820,1): «line terminator»
SyntaxKind[IndentToken](820,1): «indent»
SyntaxKind[OpenBracketToken](820,2): [
SyntaxKind[EmptyKeyword](820,3): empty
SyntaxKind[CloseBracketToken](820,8): ]
SyntaxKind[LineTerminatorToken](821,1): «line terminator»
SyntaxKind[Identifier](821,2): FormalParameterList
SyntaxKind[OpenBracketToken](821,21): [
SyntaxKind[QuestionToken](821,22): ?
SyntaxKind[Identifier](821,23): Yield
SyntaxKind[CloseBracketToken](821,28): ]
SyntaxKind[LineTerminatorToken](822,1): «line terminator»
SyntaxKind[DedentToken](822,1): «dedent»
SyntaxKind[LineTerminatorToken](823,1): «line terminator»
SyntaxKind[Identifier](823,1): FormalParameterList
SyntaxKind[OpenBracketToken](823,20): [
SyntaxKind[Identifier](823,21): Yield
SyntaxKind[CloseBracketToken](823,26): ]
SyntaxKind[ColonToken](823,29): :
SyntaxKind[LineTerminatorToken](824,1): «line terminator»
SyntaxKind[IndentToken](824,1): «indent»
SyntaxKind[Identifier](824,2): FunctionRestParameter
SyntaxKind[OpenBracketToken](824,23): [
SyntaxKind[QuestionToken](824,24): ?
SyntaxKind[Identifier](824,25): Yield
SyntaxKind[CloseBracketToken](824,30): ]
SyntaxKind[LineTerminatorToken](825,1): «line terminator»
SyntaxKind[Identifier](825,2): FormalsList
SyntaxKind[OpenBracketToken](825,13): [
SyntaxKind[QuestionToken](825,14): ?
SyntaxKind[Identifier](825,15): Yield
SyntaxKind[CloseBracketToken](825,20): ]
SyntaxKind[LineTerminatorToken](826,1): «line terminator»
SyntaxKind[Identifier](826,2): FormalsList
SyntaxKind[OpenBracketToken](826,13): [
SyntaxKind[QuestionToken](826,14): ?
SyntaxKind[Identifier](826,15): Yield
SyntaxKind[CloseBracketToken](826,20): ]
SyntaxKind[Terminal](826,22): `,`
SyntaxKind[Identifier](826,26): FunctionRestParameter
SyntaxKind[OpenBracketToken](826,47): [
SyntaxKind[QuestionToken](826,48): ?
SyntaxKind[Identifier](826,49): Yield
SyntaxKind[CloseBracketToken](826,54): ]
SyntaxKind[LineTerminatorToken](827,1): «line terminator»
SyntaxKind[DedentToken](827,1): «dedent»
SyntaxKind[LineTerminatorToken](828,1): «line terminator»
SyntaxKind[Identifier](828,1): FormalsList
SyntaxKind[OpenBracketToken](828,12): [
SyntaxKind[Identifier](828,13): Yield
SyntaxKind[CloseBracketToken](828,18): ]
SyntaxKind[ColonToken](828,20): :
SyntaxKind[LineTerminatorToken](829,1): «line terminator»
SyntaxKind[IndentToken](829,1): «indent»
SyntaxKind[Identifier](829,2): FormalParameter
SyntaxKind[OpenBracketToken](829,17): [
SyntaxKind[QuestionToken](829,18): ?
SyntaxKind[Identifier](829,19): Yield
SyntaxKind[CloseBracketToken](829,24): ]
SyntaxKind[LineTerminatorToken](830,1): «line terminator»
SyntaxKind[Identifier](830,2): FormalsList
SyntaxKind[OpenBracketToken](830,13): [
SyntaxKind[QuestionToken](830,14): ?
SyntaxKind[Identifier](830,15): Yield
SyntaxKind[CloseBracketToken](830,20): ]
SyntaxKind[Terminal](830,22): `,`
SyntaxKind[Identifier](830,26): FormalParameter
SyntaxKind[OpenBracketToken](830,41): [
SyntaxKind[QuestionToken](830,42): ?
SyntaxKind[Identifier](830,43): Yield
SyntaxKind[CloseBracketToken](830,48): ]
SyntaxKind[LineTerminatorToken](831,1): «line terminator»
SyntaxKind[DedentToken](831,1): «dedent»
SyntaxKind[LineTerminatorToken](832,1): «line terminator»
SyntaxKind[Identifier](832,1): FunctionRestParameter
SyntaxKind[OpenBracketToken](832,22): [
SyntaxKind[Identifier](832,23): Yield
SyntaxKind[CloseBracketToken](832,28): ]
SyntaxKind[ColonToken](832,30): :
SyntaxKind[LineTerminatorToken](833,1): «line terminator»
SyntaxKind[IndentToken](833,1): «indent»
SyntaxKind[Identifier](833,2): BindingRestElement
SyntaxKind[OpenBracketToken](833,20): [
SyntaxKind[QuestionToken](833,21): ?
SyntaxKind[Identifier](833,22): Yield
SyntaxKind[CloseBracketToken](833,27): ]
SyntaxKind[LineTerminatorToken](834,1): «line terminator»
SyntaxKind[DedentToken](834,1): «dedent»
SyntaxKind[LineTerminatorToken](835,1): «line terminator»
SyntaxKind[Identifier](835,1): FormalParameter
SyntaxKind[OpenBracketToken](835,16): [
SyntaxKind[Identifier](835,17): Yield
SyntaxKind[CloseBracketToken](835,22): ]
SyntaxKind[ColonToken](835,24): :
SyntaxKind[LineTerminatorToken](836,1): «line terminator»
SyntaxKind[IndentToken](836,1): «indent»
SyntaxKind[Identifier](836,2): BindingElement
SyntaxKind[OpenBracketToken](836,16): [
SyntaxKind[QuestionToken](836,17): ?
SyntaxKind[Identifier](836,18): Yield
SyntaxKind[CloseBracketToken](836,23): ]
SyntaxKind[LineTerminatorToken](837,1): «line terminator»
SyntaxKind[DedentToken](837,1): «dedent»
SyntaxKind[LineTerminatorToken](838,1): «line terminator»
SyntaxKind[Identifier](838,1): FunctionBody
SyntaxKind[OpenBracketToken](838,13): [
SyntaxKind[Identifier](838,14): Yield
SyntaxKind[CloseBracketToken](838,19): ]
SyntaxKind[ColonToken](838,21): :
SyntaxKind[LineTerminatorToken](839,1): «line terminator»
SyntaxKind[IndentToken](839,1): «indent»
SyntaxKind[Identifier](839,2): FunctionStatementList
SyntaxKind[OpenBracketToken](839,23): [
SyntaxKind[QuestionToken](839,24): ?
SyntaxKind[Identifier](839,25): Yield
SyntaxKind[CloseBracketToken](839,30): ]
SyntaxKind[LineTerminatorToken](840,1): «line terminator»
SyntaxKind[DedentToken](840,1): «dedent»
SyntaxKind[LineTerminatorToken](841,1): «line terminator»
SyntaxKind[Identifier](841,1): FunctionStatementList
SyntaxKind[OpenBracketToken](841,22): [
SyntaxKind[Identifier](841,23): Yield
SyntaxKind[CloseBracketToken](841,28): ]
SyntaxKind[ColonToken](841,30): :
SyntaxKind[LineTerminatorToken](842,1): «line terminator»
SyntaxKind[IndentToken](842,1): «indent»
SyntaxKind[Identifier](842,2): StatementList
SyntaxKind[OpenBracketToken](842,15): [
SyntaxKind[QuestionToken](842,16): ?
SyntaxKind[Identifier](842,17): Yield
SyntaxKind[CommaToken](842,22): ,
SyntaxKind[Identifier](842,24): Return
SyntaxKind[CloseBracketToken](842,30): ]
SyntaxKind[QuestionToken](842,31): ?
SyntaxKind[LineTerminatorToken](843,1): «line terminator»
SyntaxKind[DedentToken](843,1): «dedent»
SyntaxKind[LineTerminatorToken](844,1): «line terminator»
SyntaxKind[Identifier](844,1): ArrowFunction
SyntaxKind[OpenBracketToken](844,14): [
SyntaxKind[Identifier](844,15): In
SyntaxKind[CommaToken](844,17): ,
SyntaxKind[Identifier](844,19): Yield
SyntaxKind[CloseBracketToken](844,24): ]
SyntaxKind[ColonToken](844,27): :
SyntaxKind[LineTerminatorToken](845,1): «line terminator»
SyntaxKind[IndentToken](845,1): «indent»
SyntaxKind[Identifier](845,2): ArrowParameters
SyntaxKind[OpenBracketToken](845,17): [
SyntaxKind[QuestionToken](845,18): ?
SyntaxKind[Identifier](845,19): Yield
SyntaxKind[CloseBracketToken](845,24): ]
SyntaxKind[OpenBracketToken](845,26): [
SyntaxKind[NoKeyword](845,27): no
SyntaxKind[Identifier](845,30): LineTerminator
SyntaxKind[HereKeyword](845,45): here
SyntaxKind[CloseBracketToken](845,49): ]
SyntaxKind[Terminal](845,51): `=>`
SyntaxKind[Identifier](845,56): ConciseBody
SyntaxKind[OpenBracketToken](845,67): [
SyntaxKind[QuestionToken](845,68): ?
SyntaxKind[Identifier](845,69): In
SyntaxKind[CloseBracketToken](845,71): ]
SyntaxKind[LineTerminatorToken](846,1): «line terminator»
SyntaxKind[DedentToken](846,1): «dedent»
SyntaxKind[LineTerminatorToken](847,1): «line terminator»
SyntaxKind[Identifier](847,1): ArrowParameters
SyntaxKind[OpenBracketToken](847,16): [
SyntaxKind[Identifier](847,17): Yield
SyntaxKind[CloseBracketToken](847,22): ]
SyntaxKind[ColonToken](847,25): :
SyntaxKind[LineTerminatorToken](848,1): «line terminator»
SyntaxKind[IndentToken](848,1): «indent»
SyntaxKind[Identifier](848,2): BindingIdentifier
SyntaxKind[OpenBracketToken](848,19): [
SyntaxKind[QuestionToken](848,20): ?
SyntaxKind[Identifier](848,21): Yield
SyntaxKind[CloseBracketToken](848,26): ]
SyntaxKind[LineTerminatorToken](849,1): «line terminator»
SyntaxKind[Identifier](849,2): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](849,51): [
SyntaxKind[QuestionToken](849,52): ?
SyntaxKind[Identifier](849,53): Yield
SyntaxKind[CloseBracketToken](849,58): ]
SyntaxKind[LineTerminatorToken](850,1): «line terminator»
SyntaxKind[DedentToken](850,1): «dedent»
SyntaxKind[LineTerminatorToken](851,1): «line terminator»
SyntaxKind[Identifier](851,1): ConciseBody
SyntaxKind[OpenBracketToken](851,12): [
SyntaxKind[Identifier](851,13): In
SyntaxKind[CloseBracketToken](851,15): ]
SyntaxKind[ColonToken](851,17): :
SyntaxKind[LineTerminatorToken](852,1): «line terminator»
SyntaxKind[IndentToken](852,1): «indent»
SyntaxKind[OpenBracketToken](852,2): [
SyntaxKind[LookaheadKeyword](852,3): lookahead
SyntaxKind[ExclamationEqualsToken](852,13): !=
SyntaxKind[Terminal](852,16): `{`
SyntaxKind[CloseBracketToken](852,19): ]
SyntaxKind[Identifier](852,21): AssignmentExpression
SyntaxKind[OpenBracketToken](852,41): [
SyntaxKind[QuestionToken](852,42): ?
SyntaxKind[Identifier](852,43): In
SyntaxKind[CloseBracketToken](852,45): ]
SyntaxKind[LineTerminatorToken](853,1): «line terminator»
SyntaxKind[Terminal](853,2): `{`
SyntaxKind[Identifier](853,6): FunctionBody
SyntaxKind[Terminal](853,19): `}`
SyntaxKind[LineTerminatorToken](854,1): «line terminator»
SyntaxKind[DedentToken](854,1): «dedent»
SyntaxKind[LineTerminatorToken](855,1): «line terminator»
SyntaxKind[Identifier](855,1): MethodDefinition
SyntaxKind[OpenBracketToken](855,17): [
SyntaxKind[Identifier](855,18): Yield
SyntaxKind[CloseBracketToken](855,23): ]
SyntaxKind[ColonToken](855,25): :
SyntaxKind[LineTerminatorToken](856,1): «line terminator»
SyntaxKind[IndentToken](856,1): «indent»
SyntaxKind[Identifier](856,2): PropertyName
SyntaxKind[OpenBracketToken](856,14): [
SyntaxKind[QuestionToken](856,15): ?
SyntaxKind[Identifier](856,16): Yield
SyntaxKind[CloseBracketToken](856,21): ]
SyntaxKind[Terminal](856,23): `(`
SyntaxKind[Identifier](856,27): StrictFormalParameters
SyntaxKind[Terminal](856,50): `)`
SyntaxKind[Terminal](856,54): `{`
SyntaxKind[Identifier](856,58): FunctionBody
SyntaxKind[Terminal](856,71): `}`
SyntaxKind[LineTerminatorToken](857,1): «line terminator»
SyntaxKind[Identifier](857,2): GeneratorMethod
SyntaxKind[OpenBracketToken](857,17): [
SyntaxKind[QuestionToken](857,18): ?
SyntaxKind[Identifier](857,19): Yield
SyntaxKind[CloseBracketToken](857,24): ]
SyntaxKind[LineTerminatorToken](858,1): «line terminator»
SyntaxKind[Terminal](858,2): `get`
SyntaxKind[Identifier](858,8): PropertyName
SyntaxKind[OpenBracketToken](858,20): [
SyntaxKind[QuestionToken](858,21): ?
SyntaxKind[Identifier](858,22): Yield
SyntaxKind[CloseBracketToken](858,27): ]
SyntaxKind[Terminal](858,29): `(`
SyntaxKind[Terminal](858,33): `)`
SyntaxKind[Terminal](858,37): `{`
SyntaxKind[Identifier](858,41): FunctionBody
SyntaxKind[Terminal](858,54): `}`
SyntaxKind[LineTerminatorToken](859,1): «line terminator»
SyntaxKind[Terminal](859,2): `set`
SyntaxKind[Identifier](859,8): PropertyName
SyntaxKind[OpenBracketToken](859,20): [
SyntaxKind[QuestionToken](859,21): ?
SyntaxKind[Identifier](859,22): Yield
SyntaxKind[CloseBracketToken](859,27): ]
SyntaxKind[Terminal](859,29): `(`
SyntaxKind[Identifier](859,33): PropertySetParameterList
SyntaxKind[Terminal](859,58): `)`
SyntaxKind[Terminal](859,62): `{`
SyntaxKind[Identifier](859,66): FunctionBody
SyntaxKind[Terminal](859,79): `}`
SyntaxKind[LineTerminatorToken](860,1): «line terminator»
SyntaxKind[DedentToken](860,1): «dedent»
SyntaxKind[LineTerminatorToken](861,1): «line terminator»
SyntaxKind[Identifier](861,1): PropertySetParameterList
SyntaxKind[ColonToken](861,26): :
SyntaxKind[LineTerminatorToken](862,1): «line terminator»
SyntaxKind[IndentToken](862,1): «indent»
SyntaxKind[Identifier](862,2): FormalParameter
SyntaxKind[LineTerminatorToken](863,1): «line terminator»
SyntaxKind[DedentToken](863,1): «dedent»
SyntaxKind[LineTerminatorToken](864,1): «line terminator»
SyntaxKind[Identifier](864,1): GeneratorMethod
SyntaxKind[OpenBracketToken](864,16): [
SyntaxKind[Identifier](864,17): Yield
SyntaxKind[CloseBracketToken](864,22): ]
SyntaxKind[ColonToken](864,24): :
SyntaxKind[LineTerminatorToken](865,1): «line terminator»
SyntaxKind[IndentToken](865,1): «indent»
SyntaxKind[Terminal](865,2): `*`
SyntaxKind[Identifier](865,6): PropertyName
SyntaxKind[OpenBracketToken](865,18): [
SyntaxKind[QuestionToken](865,19): ?
SyntaxKind[Identifier](865,20): Yield
SyntaxKind[CloseBracketToken](865,25): ]
SyntaxKind[Terminal](865,27): `(`
SyntaxKind[Identifier](865,31): StrictFormalParameters
SyntaxKind[OpenBracketToken](865,53): [
SyntaxKind[Identifier](865,54): Yield
SyntaxKind[CloseBracketToken](865,59): ]
SyntaxKind[Terminal](865,61): `)`
SyntaxKind[Terminal](865,65): `{`
SyntaxKind[Identifier](865,69): GeneratorBody
SyntaxKind[Terminal](865,83): `}`
SyntaxKind[LineTerminatorToken](866,1): «line terminator»
SyntaxKind[DedentToken](866,1): «dedent»
SyntaxKind[LineTerminatorToken](867,1): «line terminator»
SyntaxKind[Identifier](867,1): GeneratorDeclaration
SyntaxKind[OpenBracketToken](867,21): [
SyntaxKind[Identifier](867,22): Yield
SyntaxKind[CommaToken](867,27): ,
SyntaxKind[Identifier](867,29): Default
SyntaxKind[CloseBracketToken](867,36): ]
SyntaxKind[ColonToken](867,38): :
SyntaxKind[LineTerminatorToken](868,1): «line terminator»
SyntaxKind[IndentToken](868,1): «indent»
SyntaxKind[Terminal](868,2): `function`
SyntaxKind[Terminal](868,13): `*`
SyntaxKind[Identifier](868,17): BindingIdentifier
SyntaxKind[OpenBracketToken](868,34): [
SyntaxKind[QuestionToken](868,35): ?
SyntaxKind[Identifier](868,36): Yield
SyntaxKind[CloseBracketToken](868,41): ]
SyntaxKind[Terminal](868,43): `(`
SyntaxKind[Identifier](868,47): FormalParameters
SyntaxKind[OpenBracketToken](868,63): [
SyntaxKind[Identifier](868,64): Yield
SyntaxKind[CloseBracketToken](868,69): ]
SyntaxKind[Terminal](868,71): `)`
SyntaxKind[Terminal](868,75): `{`
SyntaxKind[Identifier](868,79): GeneratorBody
SyntaxKind[Terminal](868,93): `}`
SyntaxKind[LineTerminatorToken](869,1): «line terminator»
SyntaxKind[OpenBracketToken](869,2): [
SyntaxKind[PlusToken](869,3): +
SyntaxKind[Identifier](869,4): Default
SyntaxKind[CloseBracketToken](869,11): ]
SyntaxKind[Terminal](869,13): `function`
SyntaxKind[Terminal](869,24): `*`
SyntaxKind[Terminal](869,28): `(`
SyntaxKind[Identifier](869,32): FormalParameters
SyntaxKind[OpenBracketToken](869,48): [
SyntaxKind[Identifier](869,49): Yield
SyntaxKind[CloseBracketToken](869,54): ]
SyntaxKind[Terminal](869,56): `)`
SyntaxKind[Terminal](869,60): `{`
SyntaxKind[Identifier](869,64): GeneratorBody
SyntaxKind[Terminal](869,78): `}`
SyntaxKind[LineTerminatorToken](870,1): «line terminator»
SyntaxKind[DedentToken](870,1): «dedent»
SyntaxKind[LineTerminatorToken](871,1): «line terminator»
SyntaxKind[Identifier](871,1): GeneratorExpression
SyntaxKind[ColonToken](871,21): :
SyntaxKind[LineTerminatorToken](872,1): «line terminator»
SyntaxKind[IndentToken](872,1): «indent»
SyntaxKind[Terminal](872,2): `function`
SyntaxKind[Terminal](872,13): `*`
SyntaxKind[Identifier](872,17): BindingIdentifier
SyntaxKind[OpenBracketToken](872,34): [
SyntaxKind[Identifier](872,35): Yield
SyntaxKind[CloseBracketToken](872,40): ]
SyntaxKind[QuestionToken](872,41): ?
SyntaxKind[Terminal](872,43): `(`
SyntaxKind[Identifier](872,47): FormalParameters
SyntaxKind[OpenBracketToken](872,63): [
SyntaxKind[Identifier](872,64): Yield
SyntaxKind[CloseBracketToken](872,69): ]
SyntaxKind[Terminal](872,71): `)`
SyntaxKind[Terminal](872,75): `{`
SyntaxKind[Identifier](872,79): GeneratorBody
SyntaxKind[Terminal](872,93): `}`
SyntaxKind[LineTerminatorToken](873,1): «line terminator»
SyntaxKind[DedentToken](873,1): «dedent»
SyntaxKind[LineTerminatorToken](874,1): «line terminator»
SyntaxKind[Identifier](874,1): GeneratorBody
SyntaxKind[ColonToken](874,15): :
SyntaxKind[LineTerminatorToken](875,1): «line terminator»
SyntaxKind[IndentToken](875,1): «indent»
SyntaxKind[Identifier](875,2): FunctionBody
SyntaxKind[OpenBracketToken](875,14): [
SyntaxKind[Identifier](875,15): Yield
SyntaxKind[CloseBracketToken](875,20): ]
SyntaxKind[LineTerminatorToken](876,1): «line terminator»
SyntaxKind[DedentToken](876,1): «dedent»
SyntaxKind[LineTerminatorToken](877,1): «line terminator»
SyntaxKind[Identifier](877,1): YieldExpression
SyntaxKind[OpenBracketToken](877,16): [
SyntaxKind[Identifier](877,17): In
SyntaxKind[CloseBracketToken](877,19): ]
SyntaxKind[ColonToken](877,21): :
SyntaxKind[LineTerminatorToken](878,1): «line terminator»
SyntaxKind[IndentToken](878,1): «indent»
SyntaxKind[Terminal](878,2): `yield`
SyntaxKind[LineTerminatorToken](879,1): «line terminator»
SyntaxKind[Terminal](879,2): `yield`
SyntaxKind[OpenBracketToken](879,10): [
SyntaxKind[NoKeyword](879,11): no
SyntaxKind[Identifier](879,14): LineTerminator
SyntaxKind[HereKeyword](879,29): here
SyntaxKind[CloseBracketToken](879,33): ]
SyntaxKind[Identifier](879,35): AssignmentExpression
SyntaxKind[OpenBracketToken](879,55): [
SyntaxKind[QuestionToken](879,56): ?
SyntaxKind[Identifier](879,57): In
SyntaxKind[CommaToken](879,59): ,
SyntaxKind[Identifier](879,61): Yield
SyntaxKind[CloseBracketToken](879,66): ]
SyntaxKind[LineTerminatorToken](880,1): «line terminator»
SyntaxKind[Terminal](880,2): `yield`
SyntaxKind[OpenBracketToken](880,10): [
SyntaxKind[NoKeyword](880,11): no
SyntaxKind[Identifier](880,14): LineTerminator
SyntaxKind[HereKeyword](880,29): here
SyntaxKind[CloseBracketToken](880,33): ]
SyntaxKind[Terminal](880,35): `*`
SyntaxKind[Identifier](880,39): AssignmentExpression
SyntaxKind[OpenBracketToken](880,59): [
SyntaxKind[QuestionToken](880,60): ?
SyntaxKind[Identifier](880,61): In
SyntaxKind[CommaToken](880,63): ,
SyntaxKind[Identifier](880,65): Yield
SyntaxKind[CloseBracketToken](880,70): ]
SyntaxKind[LineTerminatorToken](881,1): «line terminator»
SyntaxKind[DedentToken](881,1): «dedent»
SyntaxKind[LineTerminatorToken](882,1): «line terminator»
SyntaxKind[Identifier](882,1): ClassDeclaration
SyntaxKind[OpenBracketToken](882,17): [
SyntaxKind[Identifier](882,18): Yield
SyntaxKind[CommaToken](882,23): ,
SyntaxKind[Identifier](882,25): Default
SyntaxKind[CloseBracketToken](882,32): ]
SyntaxKind[ColonToken](882,34): :
SyntaxKind[LineTerminatorToken](883,1): «line terminator»
SyntaxKind[IndentToken](883,1): «indent»
SyntaxKind[Terminal](883,2): `class`
SyntaxKind[Identifier](883,10): BindingIdentifier
SyntaxKind[OpenBracketToken](883,27): [
SyntaxKind[QuestionToken](883,28): ?
SyntaxKind[Identifier](883,29): Yield
SyntaxKind[CloseBracketToken](883,34): ]
SyntaxKind[Identifier](883,36): ClassTail
SyntaxKind[OpenBracketToken](883,45): [
SyntaxKind[QuestionToken](883,46): ?
SyntaxKind[Identifier](883,47): Yield
SyntaxKind[CloseBracketToken](883,52): ]
SyntaxKind[LineTerminatorToken](884,1): «line terminator»
SyntaxKind[OpenBracketToken](884,2): [
SyntaxKind[PlusToken](884,3): +
SyntaxKind[Identifier](884,4): Default
SyntaxKind[CloseBracketToken](884,11): ]
SyntaxKind[Terminal](884,13): `class`
SyntaxKind[Identifier](884,21): ClassTail
SyntaxKind[OpenBracketToken](884,30): [
SyntaxKind[QuestionToken](884,31): ?
SyntaxKind[Identifier](884,32): Yield
SyntaxKind[CloseBracketToken](884,37): ]
SyntaxKind[LineTerminatorToken](885,1): «line terminator»
SyntaxKind[DedentToken](885,1): «dedent»
SyntaxKind[LineTerminatorToken](886,1): «line terminator»
SyntaxKind[Identifier](886,1): ClassExpression
SyntaxKind[OpenBracketToken](886,16): [
SyntaxKind[Identifier](886,17): Yield
SyntaxKind[CloseBracketToken](886,22): ]
SyntaxKind[ColonToken](886,24): :
SyntaxKind[LineTerminatorToken](887,1): «line terminator»
SyntaxKind[IndentToken](887,1): «indent»
SyntaxKind[Terminal](887,2): `class`
SyntaxKind[Identifier](887,10): BindingIdentifier
SyntaxKind[OpenBracketToken](887,27): [
SyntaxKind[QuestionToken](887,28): ?
SyntaxKind[Identifier](887,29): Yield
SyntaxKind[CloseBracketToken](887,34): ]
SyntaxKind[QuestionToken](887,35): ?
SyntaxKind[Identifier](887,37): ClassTail
SyntaxKind[OpenBracketToken](887,46): [
SyntaxKind[QuestionToken](887,47): ?
SyntaxKind[Identifier](887,48): Yield
SyntaxKind[CloseBracketToken](887,53): ]
SyntaxKind[LineTerminatorToken](888,1): «line terminator»
SyntaxKind[DedentToken](888,1): «dedent»
SyntaxKind[LineTerminatorToken](889,1): «line terminator»
SyntaxKind[Identifier](889,1): ClassTail
SyntaxKind[OpenBracketToken](889,10): [
SyntaxKind[Identifier](889,11): Yield
SyntaxKind[CloseBracketToken](889,16): ]
SyntaxKind[ColonToken](889,18): :
SyntaxKind[LineTerminatorToken](890,1): «line terminator»
SyntaxKind[IndentToken](890,1): «indent»
SyntaxKind[Identifier](890,2): ClassHeritage
SyntaxKind[OpenBracketToken](890,15): [
SyntaxKind[QuestionToken](890,16): ?
SyntaxKind[Identifier](890,17): Yield
SyntaxKind[CloseBracketToken](890,22): ]
SyntaxKind[QuestionToken](890,23): ?
SyntaxKind[Terminal](890,25): `{`
SyntaxKind[Identifier](890,29): ClassBody
SyntaxKind[OpenBracketToken](890,38): [
SyntaxKind[QuestionToken](890,39): ?
SyntaxKind[Identifier](890,40): Yield
SyntaxKind[CloseBracketToken](890,45): ]
SyntaxKind[QuestionToken](890,46): ?
SyntaxKind[Terminal](890,48): `}`
SyntaxKind[LineTerminatorToken](891,1): «line terminator»
SyntaxKind[DedentToken](891,1): «dedent»
SyntaxKind[LineTerminatorToken](892,1): «line terminator»
SyntaxKind[Identifier](892,1): ClassHeritage
SyntaxKind[OpenBracketToken](892,14): [
SyntaxKind[Identifier](892,15): Yield
SyntaxKind[CloseBracketToken](892,20): ]
SyntaxKind[ColonToken](892,22): :
SyntaxKind[LineTerminatorToken](893,1): «line terminator»
SyntaxKind[IndentToken](893,1): «indent»
SyntaxKind[Terminal](893,2): `extends`
SyntaxKind[Identifier](893,12): LeftHandSideExpression
SyntaxKind[OpenBracketToken](893,34): [
SyntaxKind[QuestionToken](893,35): ?
SyntaxKind[Identifier](893,36): Yield
SyntaxKind[CloseBracketToken](893,41): ]
SyntaxKind[LineTerminatorToken](894,1): «line terminator»
SyntaxKind[DedentToken](894,1): «dedent»
SyntaxKind[LineTerminatorToken](895,1): «line terminator»
SyntaxKind[Identifier](895,1): ClassBody
SyntaxKind[OpenBracketToken](895,10): [
SyntaxKind[Identifier](895,11): Yield
SyntaxKind[CloseBracketToken](895,16): ]
SyntaxKind[ColonToken](895,18): :
SyntaxKind[LineTerminatorToken](896,1): «line terminator»
SyntaxKind[IndentToken](896,1): «indent»
SyntaxKind[Identifier](896,2): ClassElementList
SyntaxKind[OpenBracketToken](896,18): [
SyntaxKind[QuestionToken](896,19): ?
SyntaxKind[Identifier](896,20): Yield
SyntaxKind[CloseBracketToken](896,25): ]
SyntaxKind[LineTerminatorToken](897,1): «line terminator»
SyntaxKind[DedentToken](897,1): «dedent»
SyntaxKind[LineTerminatorToken](898,1): «line terminator»
SyntaxKind[Identifier](898,1): ClassElementList
SyntaxKind[OpenBracketToken](898,17): [
SyntaxKind[Identifier](898,18): Yield
SyntaxKind[CloseBracketToken](898,23): ]
SyntaxKind[ColonToken](898,25): :
SyntaxKind[LineTerminatorToken](899,1): «line terminator»
SyntaxKind[IndentToken](899,1): «indent»
SyntaxKind[Identifier](899,2): ClassElement
SyntaxKind[OpenBracketToken](899,14): [
SyntaxKind[QuestionToken](899,15): ?
SyntaxKind[Identifier](899,16): Yield
SyntaxKind[CloseBracketToken](899,21): ]
SyntaxKind[LineTerminatorToken](900,1): «line terminator»
SyntaxKind[Identifier](900,2): ClassElementList
SyntaxKind[OpenBracketToken](900,18): [
SyntaxKind[QuestionToken](900,19): ?
SyntaxKind[Identifier](900,20): Yield
SyntaxKind[CloseBracketToken](900,25): ]
SyntaxKind[Identifier](900,28): ClassElement
SyntaxKind[OpenBracketToken](900,40): [
SyntaxKind[QuestionToken](900,41): ?
SyntaxKind[Identifier](900,42): Yield
SyntaxKind[CloseBracketToken](900,47): ]
SyntaxKind[LineTerminatorToken](901,1): «line terminator»
SyntaxKind[DedentToken](901,1): «dedent»
SyntaxKind[LineTerminatorToken](902,1): «line terminator»
SyntaxKind[Identifier](902,1): ClassElement
SyntaxKind[OpenBracketToken](902,13): [
SyntaxKind[Identifier](902,14): Yield
SyntaxKind[CloseBracketToken](902,19): ]
SyntaxKind[ColonToken](902,21): :
SyntaxKind[LineTerminatorToken](903,1): «line terminator»
SyntaxKind[IndentToken](903,1): «indent»
SyntaxKind[Identifier](903,2): MethodDefinition
SyntaxKind[OpenBracketToken](903,18): [
SyntaxKind[QuestionToken](903,19): ?
SyntaxKind[Identifier](903,20): Yield
SyntaxKind[CloseBracketToken](903,25): ]
SyntaxKind[LineTerminatorToken](904,1): «line terminator»
SyntaxKind[Terminal](904,2): `static`
SyntaxKind[Identifier](904,11): MethodDefinition
SyntaxKind[OpenBracketToken](904,27): [
SyntaxKind[QuestionToken](904,28): ?
SyntaxKind[Identifier](904,29): Yield
SyntaxKind[CloseBracketToken](904,34): ]
SyntaxKind[LineTerminatorToken](905,1): «line terminator»
SyntaxKind[Terminal](905,2): `;`
SyntaxKind[LineTerminatorToken](906,1): «line terminator»
SyntaxKind[DedentToken](906,1): «dedent»
SyntaxKind[LineTerminatorToken](907,1): «line terminator»
SyntaxKind[LineTerminatorToken](908,1): «line terminator»
SyntaxKind[Identifier](908,1): Script
SyntaxKind[ColonToken](908,8): :
SyntaxKind[LineTerminatorToken](909,1): «line terminator»
SyntaxKind[IndentToken](909,1): «indent»
SyntaxKind[Identifier](909,2): ScriptBody
SyntaxKind[QuestionToken](909,12): ?
SyntaxKind[LineTerminatorToken](910,1): «line terminator»
SyntaxKind[DedentToken](910,1): «dedent»
SyntaxKind[LineTerminatorToken](911,1): «line terminator»
SyntaxKind[Identifier](911,1): ScriptBody
SyntaxKind[ColonToken](911,12): :
SyntaxKind[LineTerminatorToken](912,1): «line terminator»
SyntaxKind[IndentToken](912,1): «indent»
SyntaxKind[Identifier](912,2): StatementList
SyntaxKind[LineTerminatorToken](913,1): «line terminator»
SyntaxKind[DedentToken](913,1): «dedent»
SyntaxKind[LineTerminatorToken](914,1): «line terminator»
SyntaxKind[Identifier](914,1): Module
SyntaxKind[ColonToken](914,8): :
SyntaxKind[LineTerminatorToken](915,1): «line terminator»
SyntaxKind[IndentToken](915,1): «indent»
SyntaxKind[Identifier](915,2): ModuleBody
SyntaxKind[QuestionToken](915,12): ?
SyntaxKind[LineTerminatorToken](916,1): «line terminator»
SyntaxKind[DedentToken](916,1): «dedent»
SyntaxKind[LineTerminatorToken](917,1): «line terminator»
SyntaxKind[Identifier](917,1): ModuleBody
SyntaxKind[ColonToken](917,12): :
SyntaxKind[LineTerminatorToken](918,1): «line terminator»
SyntaxKind[IndentToken](918,1): «indent»
SyntaxKind[Identifier](918,2): ModuleItemList
SyntaxKind[LineTerminatorToken](919,1): «line terminator»
SyntaxKind[DedentToken](919,1): «dedent»
SyntaxKind[LineTerminatorToken](920,1): «line terminator»
SyntaxKind[Identifier](920,1): ModuleItemList
SyntaxKind[ColonToken](920,16): :
SyntaxKind[LineTerminatorToken](921,1): «line terminator»
SyntaxKind[IndentToken](921,1): «indent»
SyntaxKind[Identifier](921,2): ModuleItem
SyntaxKind[LineTerminatorToken](922,1): «line terminator»
SyntaxKind[Identifier](922,2): ModuleItemList
SyntaxKind[Identifier](922,18): ModuleItem
SyntaxKind[LineTerminatorToken](923,1): «line terminator»
SyntaxKind[DedentToken](923,1): «dedent»
SyntaxKind[LineTerminatorToken](924,1): «line terminator»
SyntaxKind[Identifier](924,1): ModuleItem
SyntaxKind[ColonToken](924,12): :
SyntaxKind[LineTerminatorToken](925,1): «line terminator»
SyntaxKind[IndentToken](925,1): «indent»
SyntaxKind[Identifier](925,2): ImportDeclaration
SyntaxKind[LineTerminatorToken](926,1): «line terminator»
SyntaxKind[Identifier](926,2): ExportDeclaration
SyntaxKind[LineTerminatorToken](927,1): «line terminator»
SyntaxKind[Identifier](927,2): StatementListItem
SyntaxKind[LineTerminatorToken](928,1): «line terminator»
SyntaxKind[DedentToken](928,1): «dedent»
SyntaxKind[LineTerminatorToken](929,1): «line terminator»
SyntaxKind[Identifier](929,1): ImportDeclaration
SyntaxKind[ColonToken](929,19): :
SyntaxKind[LineTerminatorToken](930,1): «line terminator»
SyntaxKind[IndentToken](930,1): «indent»
SyntaxKind[Terminal](930,2): `import`
SyntaxKind[Identifier](930,12): ImportClause
SyntaxKind[Identifier](930,25): FromClause
SyntaxKind[Terminal](930,36): `;`
SyntaxKind[LineTerminatorToken](931,1): «line terminator»
SyntaxKind[Terminal](931,2): `import`
SyntaxKind[Identifier](931,12): ModuleSpecifier
SyntaxKind[Terminal](931,28): `;`
SyntaxKind[LineTerminatorToken](932,1): «line terminator»
SyntaxKind[DedentToken](932,1): «dedent»
SyntaxKind[LineTerminatorToken](933,1): «line terminator»
SyntaxKind[Identifier](933,1): ImportClause
SyntaxKind[ColonToken](933,14): :
SyntaxKind[LineTerminatorToken](934,1): «line terminator»
SyntaxKind[IndentToken](934,1): «indent»
SyntaxKind[Identifier](934,2): ImportedDefaultBinding
SyntaxKind[LineTerminatorToken](935,1): «line terminator»
SyntaxKind[Identifier](935,2): NameSpaceImport
SyntaxKind[LineTerminatorToken](936,1): «line terminator»
SyntaxKind[Identifier](936,2): NamedImports
SyntaxKind[LineTerminatorToken](937,1): «line terminator»
SyntaxKind[Identifier](937,2): ImportedDefaultBinding
SyntaxKind[Terminal](937,25): `,`
SyntaxKind[Identifier](937,29): NameSpaceImport
SyntaxKind[LineTerminatorToken](938,1): «line terminator»
SyntaxKind[Identifier](938,2): ImportedDefaultBinding
SyntaxKind[Terminal](938,25): `,`
SyntaxKind[Identifier](938,29): NamedImports
SyntaxKind[LineTerminatorToken](939,1): «line terminator»
SyntaxKind[DedentToken](939,1): «dedent»
SyntaxKind[LineTerminatorToken](940,1): «line terminator»
SyntaxKind[Identifier](940,1): ImportedDefaultBinding
SyntaxKind[ColonToken](940,24): :
SyntaxKind[LineTerminatorToken](941,1): «line terminator»
SyntaxKind[IndentToken](941,1): «indent»
SyntaxKind[Identifier](941,2): ImportedBinding
SyntaxKind[LineTerminatorToken](942,1): «line terminator»
SyntaxKind[DedentToken](942,1): «dedent»
SyntaxKind[LineTerminatorToken](943,1): «line terminator»
SyntaxKind[Identifier](943,1): NameSpaceImport
SyntaxKind[ColonToken](943,17): :
SyntaxKind[LineTerminatorToken](944,1): «line terminator»
SyntaxKind[IndentToken](944,1): «indent»
SyntaxKind[Terminal](944,2): `*`
SyntaxKind[Terminal](944,6): `as`
SyntaxKind[Identifier](944,11): ImportedBinding
SyntaxKind[LineTerminatorToken](945,1): «line terminator»
SyntaxKind[DedentToken](945,1): «dedent»
SyntaxKind[LineTerminatorToken](946,1): «line terminator»
SyntaxKind[Identifier](946,1): NamedImports
SyntaxKind[ColonToken](946,14): :
SyntaxKind[LineTerminatorToken](947,1): «line terminator»
SyntaxKind[IndentToken](947,1): «indent»
SyntaxKind[Terminal](947,2): `{`
SyntaxKind[Terminal](947,6): `}`
SyntaxKind[LineTerminatorToken](948,1): «line terminator»
SyntaxKind[Terminal](948,2): `{`
SyntaxKind[Identifier](948,6): ImportsList
SyntaxKind[Terminal](948,18): `}`
SyntaxKind[LineTerminatorToken](949,1): «line terminator»
SyntaxKind[Terminal](949,2): `{`
SyntaxKind[Identifier](949,6): ImportsList
SyntaxKind[Terminal](949,18): `,`
SyntaxKind[Terminal](949,22): `}`
SyntaxKind[LineTerminatorToken](950,1): «line terminator»
SyntaxKind[DedentToken](950,1): «dedent»
SyntaxKind[LineTerminatorToken](951,1): «line terminator»
SyntaxKind[Identifier](951,1): FromClause
SyntaxKind[ColonToken](951,12): :
SyntaxKind[LineTerminatorToken](952,1): «line terminator»
SyntaxKind[IndentToken](952,1): «indent»
SyntaxKind[Terminal](952,2): `from`
SyntaxKind[Identifier](952,9): ModuleSpecifier
SyntaxKind[LineTerminatorToken](953,1): «line terminator»
SyntaxKind[DedentToken](953,1): «dedent»
SyntaxKind[LineTerminatorToken](954,1): «line terminator»
SyntaxKind[Identifier](954,1): ImportsList
SyntaxKind[ColonToken](954,13): :
SyntaxKind[LineTerminatorToken](955,1): «line terminator»
SyntaxKind[IndentToken](955,1): «indent»
SyntaxKind[Identifier](955,2): ImportSpecifier
SyntaxKind[LineTerminatorToken](956,1): «line terminator»
SyntaxKind[Identifier](956,2): ImportsList
SyntaxKind[Terminal](956,14): `,`
SyntaxKind[Identifier](956,18): ImportSpecifier
SyntaxKind[LineTerminatorToken](957,1): «line terminator»
SyntaxKind[DedentToken](957,1): «dedent»
SyntaxKind[LineTerminatorToken](958,1): «line terminator»
SyntaxKind[Identifier](958,1): ImportSpecifier
SyntaxKind[ColonToken](958,17): :
SyntaxKind[LineTerminatorToken](959,1): «line terminator»
SyntaxKind[IndentToken](959,1): «indent»
SyntaxKind[Identifier](959,2): ImportedBinding
SyntaxKind[LineTerminatorToken](960,1): «line terminator»
SyntaxKind[Identifier](960,2): IdentifierName
SyntaxKind[Terminal](960,17): `as`
SyntaxKind[Identifier](960,22): ImportedBinding
SyntaxKind[LineTerminatorToken](961,1): «line terminator»
SyntaxKind[DedentToken](961,1): «dedent»
SyntaxKind[LineTerminatorToken](962,1): «line terminator»
SyntaxKind[Identifier](962,1): ModuleSpecifier
SyntaxKind[ColonToken](962,17): :
SyntaxKind[LineTerminatorToken](963,1): «line terminator»
SyntaxKind[IndentToken](963,1): «indent»
SyntaxKind[Identifier](963,2): StringLiteral
SyntaxKind[LineTerminatorToken](964,1): «line terminator»
SyntaxKind[DedentToken](964,1): «dedent»
SyntaxKind[LineTerminatorToken](965,1): «line terminator»
SyntaxKind[Identifier](965,1): ImportedBinding
SyntaxKind[ColonToken](965,17): :
SyntaxKind[LineTerminatorToken](966,1): «line terminator»
SyntaxKind[IndentToken](966,1): «indent»
SyntaxKind[Identifier](966,2): BindingIdentifier
SyntaxKind[LineTerminatorToken](967,1): «line terminator»
SyntaxKind[DedentToken](967,1): «dedent»
SyntaxKind[LineTerminatorToken](968,1): «line terminator»
SyntaxKind[Identifier](968,1): ExportDeclaration
SyntaxKind[ColonToken](968,19): :
SyntaxKind[LineTerminatorToken](969,1): «line terminator»
SyntaxKind[IndentToken](969,1): «indent»
SyntaxKind[Terminal](969,2): `export`
SyntaxKind[Terminal](969,11): `*`
SyntaxKind[Identifier](969,15): FromClause
SyntaxKind[Terminal](969,26): `;`
SyntaxKind[LineTerminatorToken](970,1): «line terminator»
SyntaxKind[Terminal](970,2): `export`
SyntaxKind[Identifier](970,11): ExportClause
SyntaxKind[Identifier](970,24): FromClause
SyntaxKind[Terminal](970,35): `;`
SyntaxKind[LineTerminatorToken](971,1): «line terminator»
SyntaxKind[Terminal](971,2): `export`
SyntaxKind[Identifier](971,11): ExportClause
SyntaxKind[Terminal](971,24): `;`
SyntaxKind[LineTerminatorToken](972,1): «line terminator»
SyntaxKind[Terminal](972,2): `export`
SyntaxKind[Identifier](972,11): VariableStatement
SyntaxKind[LineTerminatorToken](973,1): «line terminator»
SyntaxKind[Terminal](973,2): `export`
SyntaxKind[Identifier](973,11): Declaration
SyntaxKind[LineTerminatorToken](974,1): «line terminator»
SyntaxKind[Terminal](974,2): `export`
SyntaxKind[Terminal](974,11): `default`
SyntaxKind[Identifier](974,21): HoistableDeclaration
SyntaxKind[OpenBracketToken](974,41): [
SyntaxKind[Identifier](974,42): Default
SyntaxKind[CloseBracketToken](974,49): ]
SyntaxKind[LineTerminatorToken](975,1): «line terminator»
SyntaxKind[Terminal](975,2): `export`
SyntaxKind[Terminal](975,11): `default`
SyntaxKind[Identifier](975,21): ClassDeclaration
SyntaxKind[OpenBracketToken](975,37): [
SyntaxKind[Identifier](975,38): Default
SyntaxKind[CloseBracketToken](975,45): ]
SyntaxKind[LineTerminatorToken](976,1): «line terminator»
SyntaxKind[Terminal](976,2): `export`
SyntaxKind[Terminal](976,11): `default`
SyntaxKind[OpenBracketToken](976,21): [
SyntaxKind[LookaheadKeyword](976,22): lookahead
SyntaxKind[LessThanExclamationToken](976,32): <!
SyntaxKind[OpenBraceToken](976,35): {
SyntaxKind[Terminal](976,37): `function`
SyntaxKind[CommaToken](976,47): ,
SyntaxKind[Terminal](976,49): `class`
SyntaxKind[CloseBraceToken](976,57): }
SyntaxKind[CloseBracketToken](976,58): ]
SyntaxKind[Identifier](976,60): AssignmentExpression
SyntaxKind[OpenBracketToken](976,80): [
SyntaxKind[Identifier](976,81): In
SyntaxKind[CloseBracketToken](976,83): ]
SyntaxKind[Terminal](976,85): `;`
SyntaxKind[LineTerminatorToken](977,1): «line terminator»
SyntaxKind[DedentToken](977,1): «dedent»
SyntaxKind[LineTerminatorToken](978,1): «line terminator»
SyntaxKind[Identifier](978,1): ExportClause
SyntaxKind[ColonToken](978,14): :
SyntaxKind[LineTerminatorToken](979,1): «line terminator»
SyntaxKind[IndentToken](979,1): «indent»
SyntaxKind[Terminal](979,2): `{`
SyntaxKind[Terminal](979,6): `}`
SyntaxKind[LineTerminatorToken](980,1): «line terminator»
SyntaxKind[Terminal](980,2): `{`
SyntaxKind[Identifier](980,6): ExportsList
SyntaxKind[Terminal](980,18): `}`
SyntaxKind[LineTerminatorToken](981,1): «line terminator»
SyntaxKind[Terminal](981,2): `{`
SyntaxKind[Identifier](981,6): ExportsList
SyntaxKind[Terminal](981,18): `,`
SyntaxKind[Terminal](981,22): `}`
SyntaxKind[LineTerminatorToken](982,1): «line terminator»
SyntaxKind[DedentToken](982,1): «dedent»
SyntaxKind[LineTerminatorToken](983,1): «line terminator»
SyntaxKind[Identifier](983,1): ExportsList
SyntaxKind[ColonToken](983,13): :
SyntaxKind[LineTerminatorToken](984,1): «line terminator»
SyntaxKind[IndentToken](984,1): «indent»
SyntaxKind[Identifier](984,2): ExportSpecifier
SyntaxKind[LineTerminatorToken](985,1): «line terminator»
SyntaxKind[Identifier](985,2): ExportsList
SyntaxKind[Terminal](985,14): `,`
SyntaxKind[Identifier](985,18): ExportSpecifier
SyntaxKind[LineTerminatorToken](986,1): «line terminator»
SyntaxKind[DedentToken](986,1): «dedent»
SyntaxKind[LineTerminatorToken](987,1): «line terminator»
SyntaxKind[Identifier](987,1): ExportSpecifier
SyntaxKind[ColonToken](987,17): :
SyntaxKind[LineTerminatorToken](988,1): «line terminator»
SyntaxKind[IndentToken](988,1): «indent»
SyntaxKind[Identifier](988,2): IdentifierName
SyntaxKind[LineTerminatorToken](989,1): «line terminator»
SyntaxKind[Identifier](989,2): IdentifierName
SyntaxKind[Terminal](989,17): `as`
SyntaxKind[Identifier](989,22): IdentifierName
SyntaxKind[LineTerminatorToken](990,1): «line terminator»
SyntaxKind[DedentToken](990,1): «dedent»
SyntaxKind[EndOfFileToken](990,1): «EndOfFileToken»
